ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ExampleProject.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9ParameterD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9ParameterD2Ev:
  27              	.LVL0:
  28              	.LFB1654:
  29              		.file 1 "../../libDaisy//src/hid/parameter.h"
   1:../../libDaisy//src/hid/parameter.h **** #pragma once
   2:../../libDaisy//src/hid/parameter.h **** #include <stdint.h>
   3:../../libDaisy//src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libDaisy//src/hid/parameter.h **** 
   5:../../libDaisy//src/hid/parameter.h **** namespace daisy
   6:../../libDaisy//src/hid/parameter.h **** {
   7:../../libDaisy//src/hid/parameter.h **** /** @addtogroup controls
   8:../../libDaisy//src/hid/parameter.h ****     @{
   9:../../libDaisy//src/hid/parameter.h **** */
  10:../../libDaisy//src/hid/parameter.h **** 
  11:../../libDaisy//src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libDaisy//src/hid/parameter.h **** class Parameter
  13:../../libDaisy//src/hid/parameter.h **** {
  14:../../libDaisy//src/hid/parameter.h ****   public:
  15:../../libDaisy//src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libDaisy//src/hid/parameter.h ****     enum Curve
  17:../../libDaisy//src/hid/parameter.h ****     {
  18:../../libDaisy//src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libDaisy//src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libDaisy//src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../../libDaisy//src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libDaisy//src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libDaisy//src/hid/parameter.h ****     };
  24:../../libDaisy//src/hid/parameter.h ****     /** Constructor */
  25:../../libDaisy//src/hid/parameter.h ****     Parameter() {}
  26:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
  27:../../libDaisy//src/hid/parameter.h ****     ~Parameter() {}
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB570:
  36              	.LBI570:
  37              		.file 2 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  38              		.loc 2 23 5 view .LVU1
  39              		.loc 2 23 5 is_stmt 0 view .LVU2
  40              	.LBE570:
  41              		.loc 1 27 19 view .LVU3
  42 0000 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE1654:
  46              		.weak	_ZN5daisy9ParameterD1Ev
  47              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
  48 0002 00BF     		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  49              		.align	1
  50              		.p2align 2,,3
  51              		.weak	_ZN5daisy8DaisyPodD2Ev
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv5-d16
  57              	_ZN5daisy8DaisyPodD2Ev:
  58              	.LVL1:
  59              	.LFB2537:
  60              		.file 3 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 3


   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
  61              		.loc 3 36 5 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LBB571:
  67              	.LBI571:
  68              		.file 4 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 4


  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 5


  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
  69              		.loc 4 85 5 view .LVU5
  70              	.LBB572:
  71              	.LBI572:
  26:../../libDaisy//src/hid/midi.h **** 
  72              		.loc 4 26 5 view .LVU6
  26:../../libDaisy//src/hid/midi.h **** 
  73              		.loc 4 26 5 is_stmt 0 view .LVU7
  74              	.LBE572:
  75              	.LBE571:
  76              	.LBB573:
  77              	.LBI573:
  78              		.file 5 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  79              		.loc 5 18 5 is_stmt 1 view .LVU8
  80              	.LBB574:
  81              	.LBI574:
  82              		.file 6 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 6


  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  83              		.loc 6 25 5 view .LVU9
  84              		.loc 6 25 5 is_stmt 0 view .LVU10
  85              	.LBE574:
  86              	.LBB575:
  87              	.LBI575:
  88              		.loc 6 25 5 is_stmt 1 view .LVU11
  89              		.loc 6 25 5 is_stmt 0 view .LVU12
  90              	.LBE575:
  91              	.LBB576:
  92              	.LBI576:
  93              		.loc 6 25 5 is_stmt 1 view .LVU13
  94              		.loc 6 25 5 is_stmt 0 view .LVU14
  95              	.LBE576:
  96              	.LBE573:
  97              	.LBB577:
  98              	.LBI577:
  99              		.loc 5 18 5 is_stmt 1 view .LVU15
 100              	.LBB578:
 101              	.LBI578:
 102              		.loc 6 25 5 view .LVU16
 103              		.loc 6 25 5 is_stmt 0 view .LVU17
 104              	.LBE578:
 105              	.LBB579:
 106              	.LBI579:
 107              		.loc 6 25 5 is_stmt 1 view .LVU18
 108              		.loc 6 25 5 is_stmt 0 view .LVU19
 109              	.LBE579:
 110              	.LBB580:
 111              	.LBI580:
 112              		.loc 6 25 5 is_stmt 1 view .LVU20
 113              		.loc 6 25 5 is_stmt 0 view .LVU21
 114              	.LBE580:
 115              	.LBE577:
 116              	.LBB581:
 117              	.LBI581:
 118              		.file 7 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 7


  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 119              		.loc 7 42 5 is_stmt 1 view .LVU22
 120              		.loc 7 42 5 is_stmt 0 view .LVU23
 121              	.LBE581:
 122              	.LBB582:
 123              	.LBI582:
 124              		.loc 7 42 5 is_stmt 1 view .LVU24
 125              		.loc 7 42 5 is_stmt 0 view .LVU25
 126              	.LBE582:
 127              	.LBB583:
 128              	.LBI583:
 129              		.loc 2 23 5 is_stmt 1 view .LVU26
 130              		.loc 2 23 5 is_stmt 0 view .LVU27
 131              	.LBE583:
 132              	.LBB584:
 133              	.LBI584:
 134              		.loc 2 23 5 is_stmt 1 view .LVU28
 135              		.loc 2 23 5 is_stmt 0 view .LVU29
 136              	.LBE584:
 137              	.LBB585:
 138              	.LBI585:
 139              		.file 8 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 8


   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 140              		.loc 8 21 5 is_stmt 1 view .LVU30
 141              	.LBB586:
 142              	.LBI586:
 143              		.loc 7 42 5 view .LVU31
 144              		.loc 7 42 5 is_stmt 0 view .LVU32
 145              	.LBE586:
 146              	.LBE585:
 147              	.LBB587:
 148              	.LBI587:
 149              		.file 9 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 150              		.loc 9 22 5 is_stmt 1 view .LVU33
 151              	.LBB588:
 152              	.LBI588:
 153              		.file 10 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 9


   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 10


  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 154              		.loc 10 78 5 view .LVU34
 155              		.loc 10 78 5 is_stmt 0 view .LVU35
 156              	.LBE588:
 157              	.LBB589:
 158              	.LBI589:
 159              		.file 11 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 11


  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 160              		.loc 11 42 5 is_stmt 1 view .LVU36
 161              		.loc 11 42 5 is_stmt 0 view .LVU37
 162              	.LBE589:
 163              	.LBB590:
 164              	.LBI590:
 165              		.file 12 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 12


  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 166              		.loc 12 93 5 is_stmt 1 view .LVU38
 167              		.loc 12 93 5 is_stmt 0 view .LVU39
 168              	.LBE590:
 169              	.LBB591:
 170              	.LBI591:
 171              		.file 13 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 13


   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 14


  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 172              		.loc 13 96 5 is_stmt 1 view .LVU40
 173              		.loc 13 96 5 is_stmt 0 view .LVU41
 174              	.LBE591:
 175              	.LBE587:
 176              		.loc 3 36 18 view .LVU42
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE2537:
 181              		.weak	_ZN5daisy8DaisyPodD1Ev
 182              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 183 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 184              		.align	1
 185              		.p2align 2,,3
 186              		.weak	_ZN7daisysp10OscillatorD2Ev
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv5-d16
 192              	_ZN7daisysp10OscillatorD2Ev:
 193              	.LVL2:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 15


 194              	.LFB4225:
 195              		.file 14 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
   2:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Synthesis/oscillator.h **** 
   8:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
   9:../../DaisySP//Source/Synthesis/oscillator.h **** {
  10:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../../DaisySP//Source/Synthesis/oscillator.h **** */
  12:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  13:../../DaisySP//Source/Synthesis/oscillator.h **** {
  14:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  15:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 196              		.loc 14 16 5 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              		.loc 14 16 20 is_stmt 0 view .LVU44
 202 0000 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE4225:
 206              		.weak	_ZN7daisysp10OscillatorD1Ev
 207              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 208              		.section	.text.__tcf_0,"ax",%progbits
 209              		.align	1
 210              		.p2align 2,,3
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv5-d16
 216              	__tcf_0:
 217              	.LFB5398:
 218              		.file 15 "ExampleProject.cpp"
   1:ExampleProject.cpp **** #include "daisy_pod.h"
   2:ExampleProject.cpp **** #include "daisysp.h"
   3:ExampleProject.cpp **** #include <math.h>
   4:ExampleProject.cpp **** #include <random>
   5:ExampleProject.cpp **** 
   6:ExampleProject.cpp **** using namespace daisy;
   7:ExampleProject.cpp **** using namespace daisysp;
   8:ExampleProject.cpp **** 
   9:ExampleProject.cpp **** std::random_device rd;     // Only used once to initialise (seed) engine
  10:ExampleProject.cpp **** std::mt19937 rng(rd());    // Random-number engine used (Mersenne-Twister in this case)
  11:ExampleProject.cpp **** std::uniform_int_distribution<int> uni(1,12); // Guaranteed unbiased
  12:ExampleProject.cpp **** 
  13:ExampleProject.cpp **** 
  14:ExampleProject.cpp **** 
  15:ExampleProject.cpp **** 
  16:ExampleProject.cpp **** 
  17:ExampleProject.cpp **** DaisyPod hw;
  18:ExampleProject.cpp **** Oscillator osc;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 16


  19:ExampleProject.cpp **** Parameter knob1;
  20:ExampleProject.cpp **** Parameter knob2;
  21:ExampleProject.cpp **** 
  22:ExampleProject.cpp **** Color led1Color[4];
 219              		.loc 15 22 7 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224              		.loc 15 22 7 is_stmt 0 view .LVU46
 225 0000 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE5398:
 229 0002 00BF     		.section	.text.__tcf_1,"ax",%progbits
 230              		.align	1
 231              		.p2align 2,,3
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv5-d16
 237              	__tcf_1:
 238              	.LFB5404:
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE5404:
 247 0002 00BF     		.section	.rodata._ZNSt13random_deviceC2Ev.str1.4,"aMS",%progbits,1
 248              		.align	2
 249              	.LC2:
 250 0000 64656661 		.ascii	"default\000"
 250      756C7400 
 251              		.section	.text._ZNSt13random_deviceC2Ev,"axG",%progbits,_ZNSt13random_deviceC5Ev,comdat
 252              		.align	1
 253              		.p2align 2,,3
 254              		.weak	_ZNSt13random_deviceC2Ev
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv5-d16
 260              	_ZNSt13random_deviceC2Ev:
 261              	.LVL3:
 262              	.LFB3611:
 263              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\random.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // random number generation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // Copyright (C) 2009-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // This library is distributed in the hope that it will be useful,
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 17


  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** /**
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  * @file bits/random.h
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  *  This is an internal header file, included by other library headers.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  *  Do not attempt to use it directly. @headername{random}
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  */
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #ifndef _RANDOM_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #define _RANDOM_H 1
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #include <vector>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #include <bits/uniform_int_dist.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** namespace std _GLIBCXX_VISIBILITY(default)
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** {
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   // [26.4] Random number generation
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @defgroup random Random Number Generation
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup numerics
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A facility for generating random numbers on selected distributions.
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   // std::uniform_random_bit_generator is defined in <bits/uniform_int_dist.h>
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief A function template for converting the output of a (integral)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * uniform random number generator to a floatng point result in the range
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * [0-1).
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RealType, size_t __bits,
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   typename _UniformRandomNumberGenerator>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     _RealType
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     generate_canonical(_UniformRandomNumberGenerator& __g);
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /*
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Implementation-space details.
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   namespace __detail
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   {
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _UIntType, size_t __w,
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 18


  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     bool = __w < static_cast<size_t>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			  (std::numeric_limits<_UIntType>::digits)>
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Shift
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { static const _UIntType __value = 0; };
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _UIntType, size_t __w>
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Shift<_UIntType, __w, true>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { static const _UIntType __value = _UIntType(1) << __w; };
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s,
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     int __which = ((__s <= __CHAR_BIT__ * sizeof (int))
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long))
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long long))
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    /* assume long long no bigger than __int128 */
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    + (__s <= 128))>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static_assert(__which < 0, /* needs to be dependent */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		      "sorry, would be too much trouble for a slow result");
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 4>
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned int type; };
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 3>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned long type; };
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 2>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned long long type; };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #ifdef _GLIBCXX_USE_INT128
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 1>
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned __int128 type; };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Assume a != 0, a < m, c < m, x < m.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c,
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     bool __big_enough = (!(__m & (__m - 1))
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 				  || (_Tp(-1) - __c) / __a >= __m - 1),
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****              bool __schrage_ok = __m % __a < __m / __a>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Mod
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	typedef typename _Select_uint_least_t<std::__lg(__a)
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 					      + std::__lg(__m) + 2>::type _Tp2;
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static _Tp
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__calc(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return static_cast<_Tp>((_Tp2(__a) * __x + __c) % __m); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Schrage.
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Mod<_Tp, __m, __a, __c, false, true>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 19


 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static _Tp
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__calc(_Tp __x);
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Special cases:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // - for m == 2^n or m == 0, unsigned integer overflow is safe.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // - a * (m - 1) + c fits in _Tp, there is no overflow.
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c, bool __s>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Mod<_Tp, __m, __a, __c, true, __s>
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static _Tp
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__calc(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Tp __res = __a * __x + __c;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  if (__m)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	    __res %= __m;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a = 1, _Tp __c = 0>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       inline _Tp
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       __mod(_Tp __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     /*
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****      * An adaptor class for converting the output of any Generator into
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****      * the input for a specific Distribution.
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****      */
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Engine, typename _DInputType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Adaptor
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static_assert(std::is_floating_point<_DInputType>::value,
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		      "template argument must be a floating point type");
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       public:
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_Adaptor(_Engine& __g)
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_g(__g) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_DInputType
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	min() const
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _DInputType(0); }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_DInputType
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	max() const
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _DInputType(1); }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	/*
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 * Converts a value generated by the adapted random number generator
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 * into a value in the input domain for the dependent random number
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 * distribution.
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_DInputType
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator()()
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return std::generate_canonical<_DInputType,
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	                            std::numeric_limits<_DInputType>::digits,
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 20


 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	                            _Engine>(_M_g);
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       private:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_Engine& _M_g;
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Sseq>
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       using __seed_seq_generate_t = decltype(
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  std::declval<_Sseq&>().generate(std::declval<uint_least32_t*>(),
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 					  std::declval<uint_least32_t*>()));
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Detect whether _Sseq is a valid seed sequence for
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // a random number engine _Engine with result type _Res.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Sseq, typename _Engine, typename _Res,
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     typename _GenerateCheck = __seed_seq_generate_t<_Sseq>>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       using __is_seed_seq = __and_<
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         __not_<is_same<__remove_cvref_t<_Sseq>, _Engine>>,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	is_unsigned<typename _Sseq::result_type>,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__not_<is_convertible<_Sseq, _Res>>
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       >;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   } // namespace __detail
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @addtogroup random_generators Random Number Generators
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup random
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * These classes define objects which provide random or pseudorandom
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * numbers, either from a discrete or a continuous interval.  The
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * random number generator supplied as a part of this library are
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * all uniform random number generators which provide a sequence of
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * random number uniformly distributed over their range.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A number generator is a function object with an operator() that
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * takes zero arguments and returns a number.
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A compliant random number generator must satisfy the following
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * requirements.  <table border=1 cellpadding=10 cellspacing=0>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * <caption align=top>Random Number Generator Requirements</caption>
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * <tr><td>To be documented.</td></tr> </table>
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief A model of a linear congruential random number generator.
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A random number generator that produces pseudorandom numbers via
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * linear function:
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f[
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *     x_{i+1}\leftarrow(ax_{i} + c) \bmod m 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f]
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The template parameter @p _UIntType must be an unsigned integral type
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * large enough to store values up to (__m-1). If the template parameter
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @p __m is 0, the modulus @p __m used is
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 21


 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * std::numeric_limits<_UIntType>::max() plus 1. Otherwise, the template
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * parameters @p __a and @p __c must be less than @p __m.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The size of the state is @f$1@f$.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class linear_congruential_engine
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__m == 0u || (__a < __m && __c < __m),
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __m out of bounds");
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, linear_congruential_engine, _UIntType>::value>::type;
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The multiplier. */
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type multiplier   = __a;
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** An increment. */
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type increment    = __c;
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The modulus. */
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type modulus      = __m;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type default_seed = 1u;
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %linear_congruential_engine random number
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator engine with seed 1.
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       linear_congruential_engine() : linear_congruential_engine(default_seed)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %linear_congruential_engine random number
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator engine with seed @p __s.  The default seed value
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        is 1.
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s The initial seed value.
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       linear_congruential_engine(result_type __s)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__s); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %linear_congruential_engine random number
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator engine seeded from the seed sequence @p __q.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         linear_congruential_engine(_Sseq& __q)
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { seed(__q); }
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 22


 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        engine sequence to the seed @p __s.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s The new seed.
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s = default_seed);
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        engine
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * sequence using values from the seed sequence @p __q.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the smallest possible value in the output range.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The minimum depends on the @p __c parameter: if it is zero, the
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * minimum generated must be > 0, otherwise 0 is allowed.
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __c == 0u ? 1u : 0u; }
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the largest possible value in the output range.
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __m - 1u; }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next random number in the sequence.
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()()
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_x = __detail::__mod<_UIntType, __m, __a, __c>(_M_x);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	return _M_x;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 23


 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two linear congruential random number generator
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * objects of the same type for equality.
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A linear congruential random number generator object.
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another linear congruential random number generator
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const linear_congruential_engine& __lhs,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const linear_congruential_engine& __rhs)
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __lhs._M_x == __rhs._M_x; }
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Writes the textual representation of the state x(i) of x to
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os  The output stream.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns __os.
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::linear_congruential_engine<_UIntType1,
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __a1, __c1, __m1>& __lcr);
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Sets the state of the engine by reading its textual
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        representation from @p __is.
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The textual representation must have been previously written using
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an output stream whose imbued locale and whose type's template
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * specialization arguments _CharT and _Traits were the same as those
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * of @p __is.
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is  The input stream.
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns __is.
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::linear_congruential_engine<_UIntType1, __a1,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __c1, __m1>& __lcr);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType _M_x;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 24


 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two linear congruential random number generator
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * objects of the same type for inequality.
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A linear congruential random number generator object.
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another linear congruential random number generator
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::linear_congruential_engine<_UIntType, __a,
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __c, __m>& __lhs,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::linear_congruential_engine<_UIntType, __a,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __c, __m>& __rhs)
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A generalized feedback shift register discrete random number generator.
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * This algorithm avoids multiplication and division and is designed to be
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * friendly to a pipelined architecture.  If the parameters are chosen
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * correctly, this generator will produce numbers with a very long period and
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * fairly good apparent entropy, although still not cryptographically strong.
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The best way to use this generator is with the predefined mt19937 class.
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * This algorithm was originally invented by Makoto Matsumoto and
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Takuji Nishimura.
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __w  Word size, the number of bits in each element of 
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              the state vector.
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __n  The degree of recursion.
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __m  The period parameter.
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __r  The separation point bit index.
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __a  The last row of the twist matrix.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __u  The first right-shift tempering matrix parameter.
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __d  The first right-shift tempering matrix mask.
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __s  The first left-shift tempering matrix parameter.
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __b  The first left-shift tempering matrix mask.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __t  The second left-shift tempering matrix parameter.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __c  The second left-shift tempering matrix mask.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __l  The second right-shift tempering matrix parameter.
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __f  Initialization multiplier.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w,
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   size_t __n, size_t __m, size_t __r,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __b, size_t __t,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class mersenne_twister_engine
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(1u <= __m && __m <= __n,
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 25


 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __m out of bounds");
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__r <= __w, "template argument substituting "
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__r out of bound");
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__u <= __w, "template argument substituting "
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__u out of bound");
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__s <= __w, "template argument substituting "
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__s out of bound");
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__t <= __w, "template argument substituting "
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__t out of bound");
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__l <= __w, "template argument substituting "
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__l out of bound");
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__w <= std::numeric_limits<_UIntType>::digits,
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __w out of bound");
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__a <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __a out of bound");
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__b <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __b out of bound");
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__c <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __c out of bound");
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__d <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __d out of bound");
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__f <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __f out of bound");
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, mersenne_twister_engine, _UIntType>::value>::type;
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // parameter values
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      word_size                 = __w;
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      state_size                = __n;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      shift_size                = __m;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      mask_bits                 = __r;
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type xor_mask                  = __a;
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_u               = __u;
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type tempering_d               = __d;
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_s               = __s;
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type tempering_b               = __b;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_t               = __t;
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type tempering_c               = __c;
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_l               = __l;
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type initialization_multiplier = __f;
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type default_seed = 5489u;
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // constructors and member functions
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       mersenne_twister_engine() : mersenne_twister_engine(default_seed) { }
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       mersenne_twister_engine(result_type __sd)
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__sd); }
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 26


 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %mersenne_twister_engine random number generator
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        engine seeded from the seed sequence @p __q.
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         mersenne_twister_engine(_Sseq& __q)
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { seed(__q); }
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __sd = default_seed);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q);
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the smallest possible value in the output range.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0; }
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the largest possible value in the output range.
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z);
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two % mersenne_twister_engine random number generator
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        objects of the same type for equality.
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A % mersenne_twister_engine random number generator
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another % mersenne_twister_engine random number
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              generator object.
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const mersenne_twister_engine& __lhs,
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const mersenne_twister_engine& __rhs)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + state_size, __rhs._M_x)
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_p == __rhs._M_p); }
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 27


 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a % mersenne_twister_engine
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x into the output stream
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1,
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __w1, size_t __n1,
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __m1, size_t __r1,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __a1, size_t __u1,
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __d1, size_t __s1,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __b1, size_t __t1,
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::mersenne_twister_engine<_UIntType1, __w1, __n1,
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __l1, __f1>& __x);
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % mersenne_twister_engine
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1,
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __w1, size_t __n1,
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __m1, size_t __r1,
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __a1, size_t __u1,
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __d1, size_t __s1,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __b1, size_t __t1,
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::mersenne_twister_engine<_UIntType1, __w1, __n1, __m1,
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __l1, __f1>& __x);
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void _M_gen_rand();
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType _M_x[state_size];
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 28


 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       size_t    _M_p;
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two % mersenne_twister_engine random number generator
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        objects of the same type for inequality.
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A % mersenne_twister_engine random number generator
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another % mersenne_twister_engine random number
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              generator object.
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w,
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   size_t __n, size_t __m, size_t __r,
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __b, size_t __t,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __lhs,
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __rhs)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief The Marsaglia-Zaman generator.
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * This is a model of a Generalized Fibonacci discrete random number
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * generator, sometimes referred to as the SWC generator.
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A discrete random number generator that produces pseudorandom
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * numbers using:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f[
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *     x_{i}\leftarrow(x_{i - s} - x_{i - r} - carry_{i-1}) \bmod m 
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f]
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The size of the state is @f$r@f$
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * and the maximum period of the generator is @f$(m^r - m^s - 1)@f$.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class subtract_with_carry_engine
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(0u < __s && __s < __r,
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "0 < s < r");
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __w out of bounds");
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, subtract_with_carry_engine, _UIntType>::value>::type;
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 29


 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // parameter values
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      word_size    = __w;
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      short_lag    = __s;
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      long_lag     = __r;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type default_seed = 19780503u;
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       subtract_with_carry_engine() : subtract_with_carry_engine(default_seed)
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs an explicitly seeded %subtract_with_carry_engine
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator.
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       subtract_with_carry_engine(result_type __sd)
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__sd); }
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %subtract_with_carry_engine random number engine
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seeded from the seed sequence @p __q.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         subtract_with_carry_engine(_Sseq& __q)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { seed(__q); }
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the random number
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator.
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * N1688[4.19] modifies this as follows.  If @p __value == 0,
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * sets value to 19780503.  In any case, with a linear
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * congruential generator lcg(i) having parameters @f$ m_{lcg} =
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * 2147483563, a_{lcg} = 40014, c_{lcg} = 0, and lcg(0) = value
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @f$, sets @f$ x_{-r} \dots x_{-1} @f$ to @f$ lcg(1) \bmod m
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * \dots lcg(r) \bmod m @f$ respectively.  If @f$ x_{-1} = 0 @f$
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * set carry to 1, otherwise sets carry to 0.
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __sd = default_seed);
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * % subtract_with_carry_engine random number generator.
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_If_seed_seq<_Sseq>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q);
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the inclusive minimum value of the range of random
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 30


 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * integers returned by this generator.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0; }
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the inclusive maximum value of the range of random
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * integers returned by this generator.
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next random number in the sequence.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two % subtract_with_carry_engine random number
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator objects of the same type for equality.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A % subtract_with_carry_engine random number generator
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another % subtract_with_carry_engine random number
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              generator object.
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       */
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const subtract_with_carry_engine& __lhs,
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const subtract_with_carry_engine& __rhs)
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + long_lag, __rhs._M_x)
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_carry == __rhs._M_carry
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a % subtract_with_carry_engine
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x into the output stream
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 31


 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::subtract_with_carry_engine<_UIntType1, __w1,
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __s1, __r1>& __x);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::subtract_with_carry_engine<_UIntType1, __w1,
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __s1, __r1>& __x);
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /// The state of the generator.  This is a ring buffer.
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType  _M_x[long_lag];
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType  _M_carry;		///< The carry
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       size_t     _M_p;			///< Current index of x(i - r).
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two % subtract_with_carry_engine random number
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        generator objects of the same type for inequality.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A % subtract_with_carry_engine random number generator
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another % subtract_with_carry_engine random number
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              generator object.
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::subtract_with_carry_engine<_UIntType, __w,
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __s, __r>& __lhs,
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::subtract_with_carry_engine<_UIntType, __w,
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __s, __r>& __rhs)
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 32


 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Produces random numbers from some base engine by discarding blocks of
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * data.
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * 0 <= @p __r <= @p __p
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class discard_block_engine
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(1 <= __r && __r <= __p,
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __r out of bounds");
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, discard_block_engine, result_type>::value>::type;
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // parameter values
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t block_size = __p;
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t used_block = __r;
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a default %discard_block_engine engine.
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The underlying engine is default constructed as well.
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine()
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(), _M_n(0) { }
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Copy constructs a %discard_block_engine engine.
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine(const _RandomNumberEngine& __rng)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__rng), _M_n(0) { }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Move constructs a %discard_block_engine engine.
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine(_RandomNumberEngine&& __rng)
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(std::move(__rng)), _M_n(0) { }
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seed constructs a %discard_block_engine engine.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs the underlying generator engine seeded with @p __s.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 33


 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s A seed value for the base class engine.
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine(result_type __s)
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__s), _M_n(0) { }
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generator construct a %discard_block_engine engine.
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed sequence.
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         discard_block_engine(_Sseq& __q)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_b(__q), _M_n(0)
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { }
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed()
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed();
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_n = 0;
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed(__s);
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_n = 0;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %discard_block_engine object with the given seed
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        sequence.
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed generator function.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q)
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         {
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_b.seed(__q);
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_n = 0;
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets a const reference to the underlying generator engine
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        object.
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       const _RandomNumberEngine&
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 34


 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       base() const noexcept
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_b; }
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the minimum value in the generated random number range.
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::min(); }
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the maximum value in the generated random number range.
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::max(); }
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next value in the generated random number sequence.
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two %discard_block_engine random number generator
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        objects of the same type for equality.
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A %discard_block_engine random number generator object.
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another %discard_block_engine random number generator
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const discard_block_engine& __lhs,
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const discard_block_engine& __rhs)
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __lhs._M_b == __rhs._M_b && __lhs._M_n == __rhs._M_n; }
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a %discard_block_engine random
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        number generator engine @p __x into the output stream
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 35


1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::discard_block_engine<_RandomNumberEngine1,
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __p1, __r1>& __x);
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::discard_block_engine<_RandomNumberEngine1,
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __p1, __r1>& __x);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _RandomNumberEngine _M_b;
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       size_t _M_n;
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two %discard_block_engine random number generator
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        objects of the same type for inequality.
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A %discard_block_engine random number generator object.
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another %discard_block_engine random number generator
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::discard_block_engine<_RandomNumberEngine, __p,
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r>& __lhs,
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::discard_block_engine<_RandomNumberEngine, __p,
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r>& __rhs)
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Produces random numbers by combining random numbers from some base
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * engine to produce random numbers with a specifies number of bits @p __w.
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 36


1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class independent_bits_engine
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __w out of bounds");
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, independent_bits_engine, _UIntType>::value>::type;
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a default %independent_bits_engine engine.
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The underlying engine is default constructed as well.
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine()
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b() { }
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Copy constructs a %independent_bits_engine engine.
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine(const _RandomNumberEngine& __rng)
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__rng) { }
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Move constructs a %independent_bits_engine engine.
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine(_RandomNumberEngine&& __rng)
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(std::move(__rng)) { }
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seed constructs a %independent_bits_engine engine.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s A seed value for the base class engine.
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine(result_type __s)
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__s) { }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generator construct a %independent_bits_engine engine.
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 37


1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed sequence.
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         independent_bits_engine(_Sseq& __q)
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         : _M_b(__q)
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed()
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_b.seed(); }
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s)
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_b.seed(__s); }
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %independent_bits_engine object with the given
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed sequence.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed generator function.
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q)
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { _M_b.seed(__q); }
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets a const reference to the underlying generator engine
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        object.
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       const _RandomNumberEngine&
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       base() const noexcept
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_b; }
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the minimum value in the generated random number range.
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0U; }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the maximum value in the generated random number range.
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 38


1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next value in the generated random number sequence.
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two %independent_bits_engine random number generator
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * objects of the same type for equality.
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A %independent_bits_engine random number generator
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another %independent_bits_engine random number generator
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const independent_bits_engine& __lhs,
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const independent_bits_engine& __rhs)
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __lhs._M_b == __rhs._M_b; }
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %independent_bits_engine random number generator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          an error state.
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _CharT, typename _Traits>
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::independent_bits_engine<_RandomNumberEngine,
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __w, _UIntType>& __x)
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  __is >> __x._M_b;
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __is;
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _RandomNumberEngine _M_b;
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 39


1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two %independent_bits_engine random number generator
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * objects of the same type for inequality.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A %independent_bits_engine random number generator
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another %independent_bits_engine random number generator
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::independent_bits_engine<_RandomNumberEngine, __w,
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType>& __lhs,
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine, __w,
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType>& __rhs)
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Inserts the current state of a %independent_bits_engine random
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        number generator engine @p __x into the output stream @p __os.
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __os An output stream.
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __x  A %independent_bits_engine random number generator engine.
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns The output stream with the state of @p __x inserted or in
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          an error state.
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType,
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   typename _CharT, typename _Traits>
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     std::basic_ostream<_CharT, _Traits>&
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine,
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __w, _UIntType>& __x)
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       __os << __x.base();
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       return __os;
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     }
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Produces random numbers by combining random numbers from some
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * base engine to produce random numbers with a specifies number of bits
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @p __k.
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __k>
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class shuffle_order_engine
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(1u <= __k, "template argument substituting "
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__k out of bound");
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 40


1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, shuffle_order_engine, result_type>::value>::type;
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t table_size = __k;
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a default %shuffle_order_engine engine.
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The underlying engine is default constructed as well.
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine()
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b()
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Copy constructs a %shuffle_order_engine engine.
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine(const _RandomNumberEngine& __rng)
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__rng)
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Move constructs a %shuffle_order_engine engine.
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine(_RandomNumberEngine&& __rng)
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(std::move(__rng))
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seed constructs a %shuffle_order_engine engine.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s A seed value for the base class engine.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine(result_type __s)
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__s)
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generator construct a %shuffle_order_engine engine.
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed sequence.
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         shuffle_order_engine(_Sseq& __q)
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 41


1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         : _M_b(__q)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { _M_initialize(); }
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****                 for the underlying base class generator engine.
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed()
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed();
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_initialize();
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        for the underlying base class generator engine.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s)
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed(__s);
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_initialize();
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %shuffle_order_engine object with the given seed
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        sequence.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed generator function.
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q)
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         {
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_b.seed(__q);
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_initialize();
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets a const reference to the underlying generator engine object.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       const _RandomNumberEngine&
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       base() const noexcept
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_b; }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets the minimum value in the generated random number range.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::min(); }
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets the maximum value in the generated random number range.
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 42


1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::max(); }
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Discard a sequence of random numbers.
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets the next value in the generated random number sequence.
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Compares two %shuffle_order_engine random number generator objects
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * of the same type for equality.
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A %shuffle_order_engine random number generator object.
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another %shuffle_order_engine random number generator
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       */
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const shuffle_order_engine& __lhs,
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const shuffle_order_engine& __rhs)
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return (__lhs._M_b == __rhs._M_b
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& std::equal(__lhs._M_v, __lhs._M_v + __k, __rhs._M_v)
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_y == __rhs._M_y); }
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a %shuffle_order_engine random
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        number generator engine @p __x into the output stream
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	@p __os.
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::shuffle_order_engine<_RandomNumberEngine1,
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __k1>& __x);
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 43


1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::shuffle_order_engine<_RandomNumberEngine1, __k1>& __x);
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void _M_initialize()
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (size_t __i = 0; __i < __k; ++__i)
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_v[__i] = _M_b();
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_y = _M_b();
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _RandomNumberEngine _M_b;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type _M_v[__k];
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type _M_y;
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Compares two %shuffle_order_engine random number generator objects
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * of the same type for inequality.
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A %shuffle_order_engine random number generator object.
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another %shuffle_order_engine random number generator
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __k>
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::shuffle_order_engine<_RandomNumberEngine,
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __k>& __lhs,
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::shuffle_order_engine<_RandomNumberEngine,
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __k>& __rhs)
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The classic Minimum Standard rand0 of Lewis, Goodman, and Miller.
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef linear_congruential_engine<uint_fast32_t, 16807UL, 0UL, 2147483647UL>
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   minstd_rand0;
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * An alternative LCR (Lehmer Generator function).
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef linear_congruential_engine<uint_fast32_t, 48271UL, 0UL, 2147483647UL>
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 44


1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   minstd_rand;
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The classic Mersenne Twister.
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Reference:
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * M. Matsumoto and T. Nishimura, Mersenne Twister: A 623-Dimensionally
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Equidistributed Uniform Pseudo-Random Number Generator, ACM Transactions
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3-30.
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef mersenne_twister_engine<
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     uint_fast32_t,
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     32, 624, 397, 31,
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x9908b0dfUL, 11,
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xffffffffUL, 7,
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x9d2c5680UL, 15,
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xefc60000UL, 18, 1812433253UL> mt19937;
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * An alternative Mersenne Twister.
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef mersenne_twister_engine<
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     uint_fast64_t,
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     64, 312, 156, 31,
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xb5026f5aa96619e9ULL, 29,
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x5555555555555555ULL, 17,
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x71d67fffeda60000ULL, 37,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xfff7eee000000000ULL, 43,
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     6364136223846793005ULL> mt19937_64;
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     ranlux24_base;
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     ranlux48_base;
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef shuffle_order_engine<minstd_rand0, 256> knuth_b;
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef minstd_rand0 default_random_engine;
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A standard interface to a platform-specific non-deterministic
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * random number generator (if any are available).
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   class random_device
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   {
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   public:
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     /** The type of the generated random value. */
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     typedef unsigned int result_type;
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // constructors, destructors and member functions
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     random_device() { _M_init("default"); }
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 45


 264              		.loc 16 1607 5 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 24
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              	.LBB662:
 269              		.loc 16 1607 23 view .LVU48
 270              	.LBB663:
 271              	.LBI663:
 272              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 46


  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 47


 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 273              		.loc 17 144 7 view .LVU49
 274              	.LBB664:
 275              	.LBI664:
 276              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 48


  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 49


  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 277              		.loc 18 79 7 view .LVU50
 278              		.loc 18 79 7 is_stmt 0 view .LVU51
 279              	.LBE664:
 280              	.LBE663:
 281              	.LBE662:
 282              		.loc 16 1607 5 view .LVU52
 283 0000 30B5     		push	{r4, r5, lr}
 284              		.cfi_def_cfa_offset 12
 285              		.cfi_offset 4, -12
 286              		.cfi_offset 5, -8
 287              		.cfi_offset 14, -4
 288              	.LBB780:
 289              	.LBB665:
 290              	.LBB666:
 291              	.LBB667:
 292              	.LBB668:
 293              	.LBB669:
 294              	.LBB670:
 295              	.LBB671:
 296              	.LBB672:
 297              	.LBB673:
 298              	.LBB674:
 299              	.LBB675:
 300              	.LBB676:
 301              	.LBB677:
 302              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\char_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 50


  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 51


  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 52


 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 53


 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 54


 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 55


 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 56


 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 303              		.loc 19 395 49 view .LVU53
 304 0002 104B     		ldr	r3, .L10
 305              	.LBE677:
 306              	.LBE676:
 307              	.LBE675:
 308              	.LBE674:
 309              	.LBE673:
 310              	.LBE672:
 311              	.LBE671:
 312              	.LBE670:
 313              	.LBE669:
 314              	.LBE668:
 315              	.LBE667:
 316              	.LBE666:
 317              	.LBE665:
 318              	.LBE780:
 319              		.loc 16 1607 5 view .LVU54
 320 0004 87B0     		sub	sp, sp, #28
 321              		.cfi_def_cfa_offset 40
 322              	.LVL4:
 323              	.LBB781:
 324              	.LBB756:
 325              	.LBI665:
 326              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 57


   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 58


  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 59


 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 60


 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 61


 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 62


 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 63


 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 64


 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 65


 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 66


 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 327              		.loc 20 525 7 is_stmt 1 view .LVU55
 328              	.LBB752:
 329              	.LBB739:
 330              	.LBI739:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331              		.loc 20 190 7 view .LVU56
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 332              		.loc 20 190 7 is_stmt 0 view .LVU57
 333              	.LBE739:
 334              	.LBB740:
 335              	.LBI740:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 336              		.loc 20 156 2 is_stmt 1 view .LVU58
 337              	.LBB741:
 338              	.LBB742:
 339              	.LBB743:
 340              	.LBI743:
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 341              		.loc 17 147 7 view .LVU59
 342              	.LBB744:
 343              	.LBI744:
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 344              		.loc 18 82 7 view .LVU60
 345              		.loc 18 82 7 is_stmt 0 view .LVU61
 346              	.LBE744:
 347              	.LBE743:
 348              	.LBE742:
 349              	.LBE741:
 350              	.LBE740:
 351              	.LBE752:
 352              	.LBE756:
 353              	.LBE781:
 354              		.loc 16 1607 5 view .LVU62
 355 0006 0446     		mov	r4, r0
 356              	.LBB782:
 357              	.LBB757:
 358              	.LBB753:
 359              	.LBB747:
 360              	.LBB735:
 361              	.LBB731:
 362              	.LBB727:
 363              	.LBB723:
 364              	.LBB719:
 365              	.LBB698:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 67


 366              	.LBB699:
 367              	.LBB700:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 368              		.loc 20 183 26 view .LVU63
 369 0008 0722     		movs	r2, #7
 370              	.LBE700:
 371              	.LBE699:
 372              	.LBE698:
 373              	.LBE719:
 374              	.LBE723:
 375              	.LBE727:
 376              	.LBE731:
 377              	.LBE735:
 378              	.LBE747:
 379              	.LBB748:
 380              	.LBB746:
 381              	.LBB745:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382              		.loc 20 157 35 view .LVU64
 383 000a 02AD     		add	r5, sp, #8
 384              	.LVL5:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 385              		.loc 20 157 35 view .LVU65
 386              	.LBE745:
 387              	.LBE746:
 388              	.LBE748:
 389              	.LBB749:
 390              	.LBB736:
 391              	.LBB732:
 392              	.LBB728:
 393              	.LBB724:
 394              	.LBB720:
 395              	.LBB710:
 396              	.LBB693:
 397              	.LBB688:
 398              	.LBB683:
 399              	.LBB678:
 400              		.loc 19 395 49 view .LVU66
 401 000c 93E80300 		ldm	r3, {r0, r1}
 402              	.LVL6:
 403              		.loc 19 395 49 view .LVU67
 404              	.LBE678:
 405              	.LBE683:
 406              	.LBE688:
 407              	.LBE693:
 408              	.LBE710:
 409              	.LBB711:
 410              	.LBB702:
 411              	.LBB701:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 412              		.loc 20 183 26 view .LVU68
 413 0010 CDE90052 		strd	r5, r2, [sp]
 414              	.LBE701:
 415              	.LBE702:
 416              	.LBE711:
 417              	.LBB712:
 418              	.LBB694:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 68


 419              	.LBB689:
 420              	.LBB684:
 421              	.LBB679:
 422              		.loc 19 395 49 view .LVU69
 423 0014 0B0C     		lsrs	r3, r1, #16
 424              	.LBE679:
 425              	.LBE684:
 426              	.LBE689:
 427              	.LBE694:
 428              	.LBE712:
 429              	.LBB713:
 430              	.LBB703:
 431              	.LBB704:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 432              		.loc 19 322 14 view .LVU70
 433 0016 0022     		movs	r2, #0
 434              	.LBE704:
 435              	.LBE703:
 436              	.LBE713:
 437              	.LBB714:
 438              	.LBB695:
 439              	.LBB690:
 440              	.LBB685:
 441              	.LBB680:
 442              		.loc 19 395 49 view .LVU71
 443 0018 0290     		str	r0, [sp, #8]
 444              	.LBE680:
 445              	.LBE685:
 446              	.LBE690:
 447              	.LBE695:
 448              	.LBE714:
 449              	.LBE720:
 450              	.LBE724:
 451              	.LBE728:
 452              	.LBE732:
 453              	.LBE736:
 454              	.LBE749:
 455              	.LBE753:
 456              	.LBE757:
 457              		.loc 16 1607 30 view .LVU72
 458 001a 2046     		mov	r0, r4
 459              	.LBB758:
 460              	.LBB754:
 461              	.LBB750:
 462              	.LBB737:
 463              	.LBB733:
 464              	.LBB729:
 465              	.LBB725:
 466              	.LBB721:
 467              	.LBB715:
 468              	.LBB696:
 469              	.LBB691:
 470              	.LBB686:
 471              	.LBB681:
 472              		.loc 19 395 49 view .LVU73
 473 001c ADF80C10 		strh	r1, [sp, #12]	@ movhi
 474              	.LBE681:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 69


 475              	.LBE686:
 476              	.LBE691:
 477              	.LBE696:
 478              	.LBE715:
 479              	.LBE721:
 480              	.LBE725:
 481              	.LBE729:
 482              	.LBE733:
 483              	.LBE737:
 484              	.LBE750:
 485              	.LBE754:
 486              	.LBE758:
 487              		.loc 16 1607 30 view .LVU74
 488 0020 6946     		mov	r1, sp
 489              	.LBB759:
 490              	.LBB755:
 491              	.LBB751:
 492              	.LBB738:
 493              	.LBB734:
 494              	.LBB730:
 495              	.LBB726:
 496              	.LBB722:
 497              	.LBB716:
 498              	.LBB707:
 499              	.LBB705:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 500              		.loc 19 322 14 view .LVU75
 501 0022 8DF80F20 		strb	r2, [sp, #15]
 502              	.LBE705:
 503              	.LBE707:
 504              	.LBE716:
 505              	.LBB717:
 506              	.LBB697:
 507              	.LBB692:
 508              	.LBB687:
 509              	.LBB682:
 510              		.loc 19 395 49 view .LVU76
 511 0026 8DF80E30 		strb	r3, [sp, #14]
 512              	.LVL7:
 513              		.loc 19 395 49 view .LVU77
 514              	.LBE682:
 515              	.LBE687:
 516              	.LBE692:
 517              	.LBE697:
 518              	.LBE717:
 519              	.LBB718:
 520              	.LBI698:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 521              		.loc 20 214 7 is_stmt 1 view .LVU78
 522              	.LBB708:
 523              	.LBI699:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 524              		.loc 20 182 7 view .LVU79
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 525              		.loc 20 182 7 is_stmt 0 view .LVU80
 526              	.LBE708:
 527              	.LBB709:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 70


 528              	.LBI703:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 529              		.loc 19 321 7 is_stmt 1 view .LVU81
 530              	.LBB706:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 531              		.loc 19 322 9 view .LVU82
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 532              		.loc 19 322 9 is_stmt 0 view .LVU83
 533              	.LBE706:
 534              	.LBE709:
 535              	.LBE718:
 536              	.LBE722:
 537              	.LBE726:
 538              	.LBE730:
 539              	.LBE734:
 540              	.LBE738:
 541              	.LBE751:
 542              	.LBE755:
 543              	.LBE759:
 544              		.loc 16 1607 30 view .LVU84
 545 002a FFF7FEFF 		bl	_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 546              	.LVL8:
 547              	.LBB760:
 548              	.LBI760:
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 71


 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 72


 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 549              		.loc 20 657 7 is_stmt 1 view .LVU85
 550              	.LBB761:
 551              	.LBB762:
 552              	.LBI762:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 553              		.loc 20 229 7 view .LVU86
 554              	.LBB763:
 555              	.LBB764:
 556              	.LBI764:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 557              		.loc 20 221 7 view .LVU87
 558              	.LBB765:
 559              	.LBI765:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 560              		.loc 20 186 7 view .LVU88
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 73


 561              	.LBB766:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 562              		.loc 20 187 28 is_stmt 0 view .LVU89
 563 002e 0098     		ldr	r0, [sp]
 564              	.LVL9:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 565              		.loc 20 187 28 view .LVU90
 566              	.LBE766:
 567              	.LBE765:
 568              	.LBB767:
 569              	.LBI767:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 570              		.loc 20 200 7 is_stmt 1 view .LVU91
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 571              		.loc 20 200 7 is_stmt 0 view .LVU92
 572              	.LBE767:
 573              	.LBE764:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 574              		.loc 20 231 2 view .LVU93
 575 0030 A842     		cmp	r0, r5
 576 0032 03D0     		beq	.L8
 577              	.LVL10:
 578              	.LBB768:
 579              	.LBI768:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 580              		.loc 20 236 7 is_stmt 1 view .LVU94
 581              	.LBB769:
 582              	.LBB770:
 583              	.LBI770:
 584              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trai
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 74


  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 75


  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 76


 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 77


 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 78


 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 79


 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 80


 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 81


 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 82


 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 585              		.loc 21 491 7 view .LVU95
 586              	.LBB771:
 587              	.LBI771:
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 588              		.loc 18 120 7 view .LVU96
 589              	.LBE771:
 590              	.LBE770:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 591              		.loc 20 237 34 is_stmt 0 view .LVU97
 592 0034 0299     		ldr	r1, [sp, #8]
 593              	.LBB774:
 594              	.LBB773:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 83


 595              	.LBB772:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 596              		.loc 18 133 19 view .LVU98
 597 0036 0131     		adds	r1, r1, #1
 598              	.LVL11:
 599              		.loc 18 133 19 view .LVU99
 600 0038 FFF7FEFF 		bl	_ZdlPvj
 601              	.LVL12:
 602              	.L8:
 603              		.loc 18 133 19 view .LVU100
 604              	.LBE772:
 605              	.LBE773:
 606              	.LBE774:
 607              	.LBE769:
 608              	.LBE768:
 609              	.LBE763:
 610              	.LBE762:
 611              	.LBB775:
 612              	.LBI775:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 613              		.loc 20 150 14 is_stmt 1 view .LVU101
 614              	.LBB776:
 615              	.LBI776:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 616              		.loc 17 162 7 view .LVU102
 617              	.LBB777:
 618              	.LBI777:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 619              		.loc 18 89 7 view .LVU103
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 620              		.loc 18 89 7 is_stmt 0 view .LVU104
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 84


 621              	.LBE777:
 622              	.LBE776:
 623              	.LBE775:
 624              	.LBE761:
 625              	.LBE760:
 626              	.LBB778:
 627              	.LBI778:
 628              		.loc 17 162 7 is_stmt 1 view .LVU105
 629              	.LBB779:
 630              	.LBI779:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 631              		.loc 18 89 7 view .LVU106
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 632              		.loc 18 89 7 is_stmt 0 view .LVU107
 633              	.LBE779:
 634              	.LBE778:
 635              	.LBE782:
 636              		.loc 16 1607 43 view .LVU108
 637 003c 2046     		mov	r0, r4
 638 003e 07B0     		add	sp, sp, #28
 639              		.cfi_def_cfa_offset 12
 640              	.LVL13:
 641              		.loc 16 1607 43 view .LVU109
 642              		@ sp needed
 643 0040 30BD     		pop	{r4, r5, pc}
 644              	.LVL14:
 645              	.L11:
 646              		.loc 16 1607 43 view .LVU110
 647 0042 00BF     		.align	2
 648              	.L10:
 649 0044 00000000 		.word	.LC2
 650              		.cfi_endproc
 651              	.LFE3611:
 653              		.weak	_ZNSt13random_deviceC1Ev
 654              		.thumb_set _ZNSt13random_deviceC1Ev,_ZNSt13random_deviceC2Ev
 655              		.section	.text._Z7InitOscv,"ax",%progbits
 656              		.align	1
 657              		.p2align 2,,3
 658              		.global	_Z7InitOscv
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv5-d16
 664              	_Z7InitOscv:
 665              	.LFB4795:
  23:ExampleProject.cpp **** Color led2Color[101];
  24:ExampleProject.cpp **** int color = 0;
  25:ExampleProject.cpp **** int color2 = 0;
  26:ExampleProject.cpp **** float osc_freq = 440.f;
  27:ExampleProject.cpp **** 
  28:ExampleProject.cpp **** void UpdateControls();
  29:ExampleProject.cpp **** void SetOsc();
  30:ExampleProject.cpp **** 
  31:ExampleProject.cpp **** void InitOsc()
  32:ExampleProject.cpp **** {
 666              		.loc 15 32 1 is_stmt 1 view -0
 667              		.cfi_startproc
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 85


 668              		@ args = 0, pretend = 0, frame = 32
 669              		@ frame_needed = 0, uses_anonymous_args = 0
  33:ExampleProject.cpp **** 	knob1.Init(hw.knob1, -0.4999, 6.4999, Parameter::LINEAR);
 670              		.loc 15 33 2 view .LVU112
  32:ExampleProject.cpp **** 	knob1.Init(hw.knob1, -0.4999, 6.4999, Parameter::LINEAR);
 671              		.loc 15 32 1 is_stmt 0 view .LVU113
 672 0000 30B5     		push	{r4, r5, lr}
 673              		.cfi_def_cfa_offset 12
 674              		.cfi_offset 4, -12
 675              		.cfi_offset 5, -8
 676              		.cfi_offset 14, -4
 677              		.loc 15 33 16 view .LVU114
 678 0002 1E4D     		ldr	r5, .L14
  32:ExampleProject.cpp **** 	knob1.Init(hw.knob1, -0.4999, 6.4999, Parameter::LINEAR);
 679              		.loc 15 32 1 view .LVU115
 680 0004 89B0     		sub	sp, sp, #36
 681              		.cfi_def_cfa_offset 48
 682              		.loc 15 33 12 view .LVU116
 683 0006 DFED1E0A 		vldr.32	s1, .L14+4
 684              		.loc 15 33 16 view .LVU117
 685 000a 05F1640E 		add	lr, r5, #100
 686 000e EC46     		mov	ip, sp
 687              		.loc 15 33 12 view .LVU118
 688 0010 9FED1C0A 		vldr.32	s0, .L14+8
 689              	.LBB787:
 690              	.LBB788:
  17:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  19:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
  20:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  21:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  31:../../DaisySP//Source/Synthesis/oscillator.h **** 
  32:../../DaisySP//Source/Synthesis/oscillator.h **** 
  33:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../../DaisySP//Source/Synthesis/oscillator.h **** 
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../../DaisySP//Source/Synthesis/oscillator.h **** 
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  38:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  42:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  44:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
 691              		.loc 14 44 20 view .LVU119
 692 0014 1C4C     		ldr	r4, .L14+12
 693              	.LBE788:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 86


 694              	.LBE787:
 695              		.loc 15 33 16 view .LVU120
 696 0016 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 697 001a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 698 001e 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 699 0022 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 700              		.loc 15 33 12 view .LVU121
 701 0026 6946     		mov	r1, sp
 702 0028 0022     		movs	r2, #0
 703 002a 1848     		ldr	r0, .L14+16
 704 002c FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 705              	.LVL15:
 706              	.LBB791:
 707              	.LBI791:
 708              		.loc 2 23 5 is_stmt 1 view .LVU122
 709              		.loc 2 23 5 is_stmt 0 view .LVU123
 710              	.LBE791:
  34:ExampleProject.cpp **** 	osc.Init(hw.AudioSampleRate());
 711              		.loc 15 34 2 is_stmt 1 view .LVU124
 712              		.loc 15 34 10 is_stmt 0 view .LVU125
 713 0030 2846     		mov	r0, r5
 714 0032 FFF7FEFF 		bl	_ZN5daisy8DaisyPod15AudioSampleRateEv
 715              	.LVL16:
 716              	.LBB792:
 717              	.LBB789:
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 718              		.loc 14 45 27 view .LVU126
 719 0036 F7EE006A 		vmov.f32	s13, #1.0e+0
 720              	.LBE789:
 721              	.LBE792:
 722              		.loc 15 34 10 view .LVU127
 723 003a F0EE407A 		vmov.f32	s15, s0
 724              	.LVL17:
 725              	.LBB793:
 726              	.LBI787:
  42:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 727              		.loc 14 42 10 is_stmt 1 view .LVU128
 728              	.LBB790:
  44:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 729              		.loc 14 44 9 view .LVU129
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 730              		.loc 14 47 20 is_stmt 0 view .LVU130
 731 003e 4FF07C53 		mov	r3, #1056964608
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  49:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_rad_    = pw_ * TWOPI_F;
 732              		.loc 14 49 20 view .LVU131
 733 0042 1349     		ldr	r1, .L14+20
  50:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 734              		.loc 14 50 20 view .LVU132
 735 0044 0022     		movs	r2, #0
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 736              		.loc 14 46 20 view .LVU133
 737 0046 9FED130A 		vldr.32	s0, .L14+24
 738              	.LVL18:
  51:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 739              		.loc 14 51 34 view .LVU134
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 87


 740 004a 2046     		mov	r0, r4
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 741              		.loc 14 45 27 view .LVU135
 742 004c 86EEA77A 		vdiv.f32	s14, s13, s15
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 743              		.loc 14 47 20 view .LVU136
 744 0050 6360     		str	r3, [r4, #4]	@ float
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_rad_    = pw_ * TWOPI_F;
 745              		.loc 14 48 20 view .LVU137
 746 0052 E360     		str	r3, [r4, #12]	@ float
  50:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 747              		.loc 14 50 20 view .LVU138
 748 0054 E261     		str	r2, [r4, #28]	@ float
  44:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 749              		.loc 14 44 20 view .LVU139
 750 0056 C4ED057A 		vstr.32	s15, [r4, #20]
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 751              		.loc 14 45 9 is_stmt 1 view .LVU140
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 752              		.loc 14 46 20 is_stmt 0 view .LVU141
 753 005a 84ED020A 		vstr.32	s0, [r4, #8]
  49:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 754              		.loc 14 49 20 view .LVU142
 755 005e 2161     		str	r1, [r4, #16]	@ float
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 756              		.loc 14 45 20 view .LVU143
 757 0060 84ED067A 		vstr.32	s14, [r4, #24]
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 758              		.loc 14 46 9 is_stmt 1 view .LVU144
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 759              		.loc 14 47 9 view .LVU145
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_rad_    = pw_ * TWOPI_F;
 760              		.loc 14 48 9 view .LVU146
  49:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 761              		.loc 14 49 9 view .LVU147
  50:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 762              		.loc 14 50 9 view .LVU148
 763              		.loc 14 51 9 view .LVU149
 764              		.loc 14 51 34 is_stmt 0 view .LVU150
 765 0064 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 766              	.LVL19:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 767              		.loc 14 52 20 view .LVU151
 768 0068 0022     		movs	r2, #0
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 769              		.loc 14 54 20 view .LVU152
 770 006a 40F20113 		movw	r3, #257
  51:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 771              		.loc 14 51 20 view .LVU153
 772 006e 84ED080A 		vstr.32	s0, [r4, #32]
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 773              		.loc 14 52 9 is_stmt 1 view .LVU154
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 774              		.loc 14 52 20 is_stmt 0 view .LVU155
 775 0072 2270     		strb	r2, [r4]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 88


 776              		.loc 14 53 9 is_stmt 1 view .LVU156
 777              		.loc 14 54 9 view .LVU157
 778              		.loc 14 54 20 is_stmt 0 view .LVU158
 779 0074 A385     		strh	r3, [r4, #44]	@ movhi
 780              	.LVL20:
 781              		.loc 14 54 20 view .LVU159
 782              	.LBE790:
 783              	.LBE793:
  35:ExampleProject.cpp **** }
 784              		.loc 15 35 1 view .LVU160
 785 0076 09B0     		add	sp, sp, #36
 786              		.cfi_def_cfa_offset 12
 787              		@ sp needed
 788 0078 30BD     		pop	{r4, r5, pc}
 789              	.L15:
 790 007a 00BF     		.align	2
 791              	.L14:
 792 007c 00000000 		.word	hw
 793 0080 2EFFCF40 		.word	1087373102
 794 0084 E5F2FFBE 		.word	-1090522395
 795 0088 00000000 		.word	.LANCHOR1
 796 008c 00000000 		.word	.LANCHOR0
 797 0090 DB0F4940 		.word	1078530011
 798 0094 0000C842 		.word	1120403456
 799              		.cfi_endproc
 800              	.LFE4795:
 802              		.section	.text._Z7InitLEDv,"ax",%progbits
 803              		.align	1
 804              		.p2align 2,,3
 805              		.global	_Z7InitLEDv
 806              		.syntax unified
 807              		.thumb
 808              		.thumb_func
 809              		.fpu fpv5-d16
 811              	_Z7InitLEDv:
 812              	.LFB4796:
  36:ExampleProject.cpp **** 
  37:ExampleProject.cpp **** void InitLED()
  38:ExampleProject.cpp **** {
 813              		.loc 15 38 1 is_stmt 1 view -0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 32
 816              		@ frame_needed = 0, uses_anonymous_args = 0
  39:ExampleProject.cpp ****     led1Color[0].Init(0,0,0);
 817              		.loc 15 39 5 view .LVU162
 818              		.loc 15 39 22 is_stmt 0 view .LVU163
 819 0000 9FED2D1A 		vldr.32	s2, .L20+8
 820 0004 2D48     		ldr	r0, .L20+12
 821 0006 F0EE410A 		vmov.f32	s1, s2
 822 000a B0EE410A 		vmov.f32	s0, s2
  38:ExampleProject.cpp ****     led1Color[0].Init(0,0,0);
 823              		.loc 15 38 1 view .LVU164
 824 000e 70B5     		push	{r4, r5, r6, lr}
 825              		.cfi_def_cfa_offset 16
 826              		.cfi_offset 4, -16
 827              		.cfi_offset 5, -12
 828              		.cfi_offset 6, -8
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 89


 829              		.cfi_offset 14, -4
 830 0010 88B0     		sub	sp, sp, #32
 831              		.cfi_def_cfa_offset 48
 832 0012 2B4C     		ldr	r4, .L20+16
 833              		.loc 15 39 22 view .LVU165
 834 0014 FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 835              	.LVL21:
  40:ExampleProject.cpp **** 	led1Color[1].Init(0,0,1);
 836              		.loc 15 40 2 is_stmt 1 view .LVU166
 837              		.loc 15 40 19 is_stmt 0 view .LVU167
 838 0018 DFED270A 		vldr.32	s1, .L20+8
 839 001c B7EE001A 		vmov.f32	s2, #1.0e+0
 840 0020 2848     		ldr	r0, .L20+20
 841 0022 B0EE600A 		vmov.f32	s0, s1
 842              	.LBB794:
  41:ExampleProject.cpp **** 	led1Color[2].Init(0,0.67,0.67);
  42:ExampleProject.cpp **** 	led1Color[3].Init(0.5,0.5,0.5);
  43:ExampleProject.cpp **** 
  44:ExampleProject.cpp **** 	for(int count = 0; count <= 100; count++)
 843              		.loc 15 44 10 view .LVU168
 844 0026 0025     		movs	r5, #0
 845              	.LBE794:
  40:ExampleProject.cpp **** 	led1Color[1].Init(0,0,1);
 846              		.loc 15 40 19 view .LVU169
 847 0028 FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 848              	.LVL22:
  41:ExampleProject.cpp **** 	led1Color[2].Init(0,0.67,0.67);
 849              		.loc 15 41 2 is_stmt 1 view .LVU170
  41:ExampleProject.cpp **** 	led1Color[2].Init(0,0.67,0.67);
 850              		.loc 15 41 19 is_stmt 0 view .LVU171
 851 002c 9FED261A 		vldr.32	s2, .L20+24
 852 0030 9FED210A 		vldr.32	s0, .L20+8
 853 0034 04F2BC46 		addw	r6, r4, #1212
 854 0038 F0EE410A 		vmov.f32	s1, s2
 855 003c 2348     		ldr	r0, .L20+28
 856 003e FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 857              	.LVL23:
  42:ExampleProject.cpp **** 
 858              		.loc 15 42 2 is_stmt 1 view .LVU172
  42:ExampleProject.cpp **** 
 859              		.loc 15 42 19 is_stmt 0 view .LVU173
 860 0042 B6EE001A 		vmov.f32	s2, #5.0e-1
 861 0046 2248     		ldr	r0, .L20+32
 862 0048 F0EE410A 		vmov.f32	s1, s2
 863 004c B0EE410A 		vmov.f32	s0, s2
 864 0050 FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 865              	.LVL24:
 866              		.loc 15 44 2 is_stmt 1 view .LVU174
 867              	.LBB795:
 868              		.loc 15 44 27 view .LVU175
 869              	.L17:
  45:ExampleProject.cpp **** 	{
  46:ExampleProject.cpp **** 		led2Color[count].Init(count*0.01, 1-count*0.01, 0);
 870              		.loc 15 46 3 discriminator 2 view .LVU176
 871              		.loc 15 46 30 is_stmt 0 discriminator 2 view .LVU177
 872 0054 07EE905A 		vmov	s15, r5	@ int
 873              		.loc 15 46 24 discriminator 2 view .LVU178
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 90


 874 0058 2046     		mov	r0, r4
  44:ExampleProject.cpp **** 	{
 875              		.loc 15 44 27 discriminator 2 view .LVU179
 876 005a 0C34     		adds	r4, r4, #12
 877              		.loc 15 46 24 discriminator 2 view .LVU180
 878 005c 9FED161A 		vldr.32	s2, .L20+8
 879              		.loc 15 46 30 discriminator 2 view .LVU181
 880 0060 B8EEE70B 		vcvt.f64.s32	d0, s15
  44:ExampleProject.cpp **** 	{
 881              		.loc 15 44 2 discriminator 2 view .LVU182
 882 0064 0135     		adds	r5, r5, #1
 883              	.LVL25:
 884              		.loc 15 46 38 discriminator 2 view .LVU183
 885 0066 B7EE007B 		vmov.f64	d7, #1.0e+0
 886              		.loc 15 46 30 discriminator 2 view .LVU184
 887 006a 9FED116B 		vldr.64	d6, .L20
 888 006e 20EE060B 		vmul.f64	d0, d0, d6
 889              		.loc 15 46 38 discriminator 2 view .LVU185
 890 0072 37EE407B 		vsub.f64	d7, d7, d0
 891              		.loc 15 46 24 discriminator 2 view .LVU186
 892 0076 B7EEC00B 		vcvt.f32.f64	s0, d0
 893 007a F7EEC70B 		vcvt.f32.f64	s1, d7
 894 007e FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 895              	.LVL26:
  44:ExampleProject.cpp **** 	{
 896              		.loc 15 44 2 is_stmt 1 discriminator 2 view .LVU187
  44:ExampleProject.cpp **** 	{
 897              		.loc 15 44 27 discriminator 2 view .LVU188
 898 0082 B442     		cmp	r4, r6
 899 0084 E6D1     		bne	.L17
 900              	.LBE795:
  47:ExampleProject.cpp **** 	}
  48:ExampleProject.cpp **** 
  49:ExampleProject.cpp **** 	knob2.Init(hw.knob2, 0, 100, Parameter::LINEAR);
 901              		.loc 15 49 2 view .LVU189
 902              		.loc 15 49 16 is_stmt 0 view .LVU190
 903 0086 134D     		ldr	r5, .L20+36
 904              	.LVL27:
 905              		.loc 15 49 16 view .LVU191
 906 0088 6C46     		mov	r4, sp
 907              		.loc 15 49 12 view .LVU192
 908 008a DFED130A 		vldr.32	s1, .L20+40
 909 008e 9FED0A0A 		vldr.32	s0, .L20+8
 910              		.loc 15 49 16 view .LVU193
 911 0092 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 912 0094 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 913 0096 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 914 009a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 915              		.loc 15 49 12 view .LVU194
 916 009e 0022     		movs	r2, #0
 917 00a0 6946     		mov	r1, sp
 918 00a2 0E48     		ldr	r0, .L20+44
 919 00a4 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 920              	.LVL28:
 921              	.LBB796:
 922              	.LBI796:
 923              		.loc 2 23 5 is_stmt 1 view .LVU195
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 91


 924              		.loc 2 23 5 is_stmt 0 view .LVU196
 925              	.LBE796:
  50:ExampleProject.cpp **** }
 926              		.loc 15 50 1 view .LVU197
 927 00a8 08B0     		add	sp, sp, #32
 928              		.cfi_def_cfa_offset 16
 929              		@ sp needed
 930 00aa 70BD     		pop	{r4, r5, r6, pc}
 931              	.L21:
 932 00ac AFF30080 		.align	3
 933              	.L20:
 934 00b0 7B14AE47 		.word	1202590843
 935 00b4 E17A843F 		.word	1065646817
 936 00b8 00000000 		.word	0
 937 00bc 00000000 		.word	.LANCHOR2
 938 00c0 00000000 		.word	.LANCHOR3
 939 00c4 0C000000 		.word	.LANCHOR2+12
 940 00c8 1F852B3F 		.word	1059816735
 941 00cc 18000000 		.word	.LANCHOR2+24
 942 00d0 24000000 		.word	.LANCHOR2+36
 943 00d4 84000000 		.word	hw+132
 944 00d8 0000C842 		.word	1120403456
 945 00dc 00000000 		.word	.LANCHOR4
 946              		.cfi_endproc
 947              	.LFE4796:
 949              		.section	.text.startup.main,"ax",%progbits
 950              		.align	1
 951              		.p2align 2,,3
 952              		.global	main
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 956              		.fpu fpv5-d16
 958              	main:
 959              	.LFB4798:
  51:ExampleProject.cpp **** 
  52:ExampleProject.cpp **** 
  53:ExampleProject.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  54:ExampleProject.cpp **** {
  55:ExampleProject.cpp **** 	UpdateControls();
  56:ExampleProject.cpp **** 
  57:ExampleProject.cpp **** 	SetOsc();
  58:ExampleProject.cpp **** 
  59:ExampleProject.cpp **** 	hw.ProcessAllControls();
  60:ExampleProject.cpp **** 
  61:ExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
  62:ExampleProject.cpp **** 	{
  63:ExampleProject.cpp **** 		//out[0][i] = in[0][i];
  64:ExampleProject.cpp **** 		//out[1][i] = in[1][i];
  65:ExampleProject.cpp **** 
  66:ExampleProject.cpp **** 		out[0][i] = osc.Process();
  67:ExampleProject.cpp **** 		out[1][i] = out[0][i];
  68:ExampleProject.cpp **** 
  69:ExampleProject.cpp **** 	}
  70:ExampleProject.cpp **** }
  71:ExampleProject.cpp **** 
  72:ExampleProject.cpp **** int main(void)
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 92


  73:ExampleProject.cpp **** {
 960              		.loc 15 73 1 is_stmt 1 view -0
 961              		.cfi_startproc
 962              		@ Volatile: function does not return.
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
  74:ExampleProject.cpp **** 	hw.Init();
 965              		.loc 15 74 2 view .LVU199
  73:ExampleProject.cpp **** 	hw.Init();
 966              		.loc 15 73 1 is_stmt 0 view .LVU200
 967 0000 08B5     		push	{r3, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 3, -8
 970              		.cfi_offset 14, -4
 971              		.loc 15 74 9 view .LVU201
 972 0002 0021     		movs	r1, #0
 973 0004 0B48     		ldr	r0, .L25
 974 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 975              	.LVL29:
  75:ExampleProject.cpp **** 	
  76:ExampleProject.cpp **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 976              		.loc 15 76 2 is_stmt 1 view .LVU202
 977              		.loc 15 76 22 is_stmt 0 view .LVU203
 978 000a 0421     		movs	r1, #4
 979 000c 0948     		ldr	r0, .L25
 980 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 981              	.LVL30:
  77:ExampleProject.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 982              		.loc 15 77 2 is_stmt 1 view .LVU204
 983              		.loc 15 77 23 is_stmt 0 view .LVU205
 984 0012 0321     		movs	r1, #3
 985 0014 0748     		ldr	r0, .L25
 986 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 987              	.LVL31:
  78:ExampleProject.cpp **** 	hw.StartAdc();
 988              		.loc 15 78 2 is_stmt 1 view .LVU206
 989              		.loc 15 78 13 is_stmt 0 view .LVU207
 990 001a 0648     		ldr	r0, .L25
 991 001c FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 992              	.LVL32:
  79:ExampleProject.cpp **** 	hw.StartAudio(AudioCallback);
 993              		.loc 15 79 2 is_stmt 1 view .LVU208
 994              		.loc 15 79 15 is_stmt 0 view .LVU209
 995 0020 0549     		ldr	r1, .L25+4
 996 0022 0448     		ldr	r0, .L25
 997 0024 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 998              	.LVL33:
  80:ExampleProject.cpp **** 
  81:ExampleProject.cpp **** 	InitLED();
 999              		.loc 15 81 2 is_stmt 1 view .LVU210
 1000              		.loc 15 81 9 is_stmt 0 view .LVU211
 1001 0028 FFF7FEFF 		bl	_Z7InitLEDv
 1002              	.LVL34:
  82:ExampleProject.cpp **** 	InitOsc();
 1003              		.loc 15 82 2 is_stmt 1 view .LVU212
 1004              		.loc 15 82 9 is_stmt 0 view .LVU213
 1005 002c FFF7FEFF 		bl	_Z7InitOscv
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 93


 1006              	.LVL35:
 1007              	.L23:
  83:ExampleProject.cpp **** 
  84:ExampleProject.cpp **** 	while(1)
 1008              		.loc 15 84 2 is_stmt 1 discriminator 1 view .LVU214
 1009              		.loc 15 84 2 discriminator 1 view .LVU215
 1010              		.loc 15 84 2 discriminator 1 view .LVU216
 1011              		.loc 15 84 2 discriminator 1 view .LVU217
 1012 0030 FEE7     		b	.L23
 1013              	.L26:
 1014 0032 00BF     		.align	2
 1015              	.L25:
 1016 0034 00000000 		.word	hw
 1017 0038 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 1018              		.cfi_endproc
 1019              	.LFE4798:
 1021              		.section	.text._Z13UpdateEncoderv,"ax",%progbits
 1022              		.align	1
 1023              		.p2align 2,,3
 1024              		.global	_Z13UpdateEncoderv
 1025              		.syntax unified
 1026              		.thumb
 1027              		.thumb_func
 1028              		.fpu fpv5-d16
 1030              	_Z13UpdateEncoderv:
 1031              	.LFB4799:
  85:ExampleProject.cpp **** 	{
  86:ExampleProject.cpp **** 
  87:ExampleProject.cpp **** 	}
  88:ExampleProject.cpp **** }
  89:ExampleProject.cpp **** 
  90:ExampleProject.cpp **** void UpdateEncoder()
  91:ExampleProject.cpp **** {
 1032              		.loc 15 91 1 view -0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
  92:ExampleProject.cpp **** 	color = color + hw.encoder.Increment();
 1037              		.loc 15 92 2 view .LVU219
 1038              	.LVL36:
 1039              	.LBB809:
 1040              	.LBI809:
  22:../../libDaisy//src/hid/encoder.h **** 
  23:../../libDaisy//src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libDaisy//src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../../libDaisy//src/hid/encoder.h ****      */
  26:../../libDaisy//src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../../libDaisy//src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../../libDaisy//src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../../libDaisy//src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../../libDaisy//src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../../libDaisy//src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../../libDaisy//src/hid/encoder.h ****      */
  33:../../libDaisy//src/hid/encoder.h ****     void Debounce();
  34:../../libDaisy//src/hid/encoder.h **** 
  35:../../libDaisy//src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 94


  36:../../libDaisy//src/hid/encoder.h ****     inline int32_t Increment() const { return updated_ ? inc_ : 0; }
 1041              		.loc 8 36 20 view .LVU220
 1042              	.LBB810:
 1043              		.loc 8 36 40 view .LVU221
 1044              		.loc 8 36 47 is_stmt 0 view .LVU222
 1045 0000 0C4A     		ldr	r2, .L39
 1046              		.loc 8 36 56 view .LVU223
 1047 0002 92F84030 		ldrb	r3, [r2, #64]	@ zero_extendqisi2
 1048 0006 03B1     		cbz	r3, .L28
 1049 0008 136E     		ldr	r3, [r2, #96]
 1050              	.L28:
 1051              	.LVL37:
 1052              		.loc 8 36 56 view .LVU224
 1053              	.LBE810:
 1054              	.LBE809:
  93:ExampleProject.cpp **** 
  94:ExampleProject.cpp **** 	if(color < 0)
 1055              		.loc 15 94 2 is_stmt 1 view .LVU225
  92:ExampleProject.cpp **** 
 1056              		.loc 15 92 10 is_stmt 0 view .LVU226
 1057 000a 0B49     		ldr	r1, .L39+4
  92:ExampleProject.cpp **** 
 1058              		.loc 15 92 16 view .LVU227
 1059 000c 0868     		ldr	r0, [r1]
 1060              		.loc 15 94 2 view .LVU228
 1061 000e 1B18     		adds	r3, r3, r0
 1062 0010 0DD4     		bmi	.L38
  95:ExampleProject.cpp **** 	{
  96:ExampleProject.cpp **** 		color = 3;
  97:ExampleProject.cpp **** 	}
  98:ExampleProject.cpp **** 	else if(color > 3)
 1063              		.loc 15 98 7 is_stmt 1 view .LVU229
 1064 0012 032B     		cmp	r3, #3
  99:ExampleProject.cpp **** 	{
 100:ExampleProject.cpp **** 		color = 0;
 1065              		.loc 15 100 3 view .LVU230
 1066              		.loc 15 100 9 is_stmt 0 view .LVU231
 1067 0014 C8BF     		it	gt
 1068 0016 0023     		movgt	r3, #0
 1069 0018 0B60     		str	r3, [r1]
 1070              	.L30:
 101:ExampleProject.cpp **** 	}
 102:ExampleProject.cpp **** 
 103:ExampleProject.cpp **** 	if(hw.encoder.RisingEdge())
 1071              		.loc 15 103 2 is_stmt 1 view .LVU232
 1072              	.LVL38:
 1073              	.LBB811:
 1074              	.LBI811:
  37:../../libDaisy//src/hid/encoder.h **** 
  38:../../libDaisy//src/hid/encoder.h ****     /** Returns true if the encoder was just pressed. */
  39:../../libDaisy//src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 1075              		.loc 8 39 17 view .LVU233
 1076              	.LBE811:
 1077              		.loc 8 39 38 view .LVU234
 1078              	.LBB814:
 1079              	.LBB812:
 1080              	.LBI812:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 95


  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 1081              		.loc 7 70 17 view .LVU235
 1082              	.LBB813:
 1083              		.loc 7 70 38 view .LVU236
 1084              		.loc 7 70 54 is_stmt 0 view .LVU237
 1085 001a 92F84830 		ldrb	r3, [r2, #72]	@ zero_extendqisi2
 1086 001e 2BB1     		cbz	r3, .L27
 1087              	.LBE813:
 1088              	.LBE812:
 1089              	.LBE814:
 1090              	.LBB815:
 1091              	.LBI815:
  90:ExampleProject.cpp **** {
 1092              		.loc 15 90 6 is_stmt 1 view .LVU238
 1093              	.LBB816:
 1094              		.loc 15 103 2 is_stmt 0 view .LVU239
 1095 0020 92F84E30 		ldrb	r3, [r2, #78]	@ zero_extendqisi2
 1096 0024 7F2B     		cmp	r3, #127
 1097 0026 01D1     		bne	.L27
 104:ExampleProject.cpp ****     {
 105:ExampleProject.cpp ****         color = 0;
 1098              		.loc 15 105 9 is_stmt 1 view .LVU240
 1099              		.loc 15 105 15 is_stmt 0 view .LVU241
 1100 0028 0023     		movs	r3, #0
 1101 002a 0B60     		str	r3, [r1]
 1102              	.LVL39:
 1103              	.L27:
 1104              		.loc 15 105 15 view .LVU242
 1105              	.LBE816:
 1106              	.LBE815:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 96


 106:ExampleProject.cpp ****     }
 107:ExampleProject.cpp **** 
 108:ExampleProject.cpp **** }
 1107              		.loc 15 108 1 view .LVU243
 1108 002c 7047     		bx	lr
 1109              	.L38:
  96:ExampleProject.cpp **** 	}
 1110              		.loc 15 96 3 is_stmt 1 view .LVU244
  96:ExampleProject.cpp **** 	}
 1111              		.loc 15 96 9 is_stmt 0 view .LVU245
 1112 002e 0323     		movs	r3, #3
 1113 0030 0B60     		str	r3, [r1]
 1114 0032 F2E7     		b	.L30
 1115              	.L40:
 1116              		.align	2
 1117              	.L39:
 1118 0034 00000000 		.word	hw
 1119 0038 00000000 		.word	.LANCHOR5
 1120              		.cfi_endproc
 1121              	.LFE4799:
 1123              		.section	.text._Z11UpdateKnobsv,"ax",%progbits
 1124              		.align	1
 1125              		.p2align 2,,3
 1126              		.global	_Z11UpdateKnobsv
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1130              		.fpu fpv5-d16
 1132              	_Z11UpdateKnobsv:
 1133              	.LFB4800:
 109:ExampleProject.cpp **** 
 110:ExampleProject.cpp **** void UpdateKnobs()
 111:ExampleProject.cpp **** {
 1134              		.loc 15 111 1 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 112:ExampleProject.cpp **** 	color2 = (int)knob2.Process();
 1138              		.loc 15 112 2 view .LVU247
 111:ExampleProject.cpp **** 	color2 = (int)knob2.Process();
 1139              		.loc 15 111 1 is_stmt 0 view .LVU248
 1140 0000 08B5     		push	{r3, lr}
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 3, -8
 1143              		.cfi_offset 14, -4
 1144              		.loc 15 112 29 view .LVU249
 1145 0002 0448     		ldr	r0, .L43
 1146 0004 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1147              	.LVL40:
 1148              		.loc 15 112 11 view .LVU250
 1149 0008 BDEEC00A 		vcvt.s32.f32	s0, s0
 1150              		.loc 15 112 9 view .LVU251
 1151 000c 024B     		ldr	r3, .L43+4
 1152              		.loc 15 112 11 view .LVU252
 1153 000e 83ED000A 		vstr.32	s0, [r3]	@ int
 113:ExampleProject.cpp **** 	
 114:ExampleProject.cpp **** }
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 97


 1154              		.loc 15 114 1 view .LVU253
 1155 0012 08BD     		pop	{r3, pc}
 1156              	.L44:
 1157              		.align	2
 1158              	.L43:
 1159 0014 00000000 		.word	.LANCHOR4
 1160 0018 00000000 		.word	.LANCHOR6
 1161              		.cfi_endproc
 1162              	.LFE4800:
 1164              		.section	.text._Z10UpdateLedsv,"ax",%progbits
 1165              		.align	1
 1166              		.p2align 2,,3
 1167              		.global	_Z10UpdateLedsv
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1171              		.fpu fpv5-d16
 1173              	_Z10UpdateLedsv:
 1174              	.LFB4801:
 115:ExampleProject.cpp **** 
 116:ExampleProject.cpp **** void UpdateLeds()
 117:ExampleProject.cpp **** {
 1175              		.loc 15 117 1 is_stmt 1 view -0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 16
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 118:ExampleProject.cpp **** 	hw.led1.SetColor(led1Color[color]);
 1179              		.loc 15 118 2 view .LVU255
 1180              		.loc 15 118 34 is_stmt 0 view .LVU256
 1181 0000 144A     		ldr	r2, .L47
 1182 0002 154B     		ldr	r3, .L47+4
 1183 0004 1268     		ldr	r2, [r2]
 1184 0006 02EB4202 		add	r2, r2, r2, lsl #1
 117:ExampleProject.cpp **** 	hw.led1.SetColor(led1Color[color]);
 1185              		.loc 15 117 1 view .LVU257
 1186 000a 30B5     		push	{r4, r5, lr}
 1187              		.cfi_def_cfa_offset 12
 1188              		.cfi_offset 4, -12
 1189              		.cfi_offset 5, -8
 1190              		.cfi_offset 14, -4
 1191              		.loc 15 118 34 view .LVU258
 1192 000c 03EB8203 		add	r3, r3, r2, lsl #2
 117:ExampleProject.cpp **** 	hw.led1.SetColor(led1Color[color]);
 1193              		.loc 15 117 1 view .LVU259
 1194 0010 85B0     		sub	sp, sp, #20
 1195              		.cfi_def_cfa_offset 32
 1196              		.loc 15 118 18 view .LVU260
 1197 0012 124D     		ldr	r5, .L47+8
 1198              		.loc 15 118 34 view .LVU261
 1199 0014 01AC     		add	r4, sp, #4
 1200 0016 93E80700 		ldm	r3, {r0, r1, r2}
 1201 001a 84E80700 		stm	r4, {r0, r1, r2}
 1202              		.loc 15 118 18 view .LVU262
 1203 001e 2146     		mov	r1, r4
 1204 0020 2846     		mov	r0, r5
 1205 0022 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 1206              	.LVL41:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 98


 1207              	.LBB817:
 1208              	.LBI817:
 1209              		.file 22 "../../libDaisy//src/util/color.h"
   1:../../libDaisy//src/util/color.h **** /* 
   2:../../libDaisy//src/util/color.h **** TODO:
   3:../../libDaisy//src/util/color.h **** - Add Blend(), Scale(), etc.
   4:../../libDaisy//src/util/color.h **** - I'd also like to change the way the Color names are accessed.
   5:../../libDaisy//src/util/color.h **** */
   6:../../libDaisy//src/util/color.h **** /**        I'd like for it to be easy and not `Color::PresetColor::Foo`
   7:../../libDaisy//src/util/color.h **** */
   8:../../libDaisy//src/util/color.h **** /** - There's no way to change a color once its been created (without unintuitively reiniting it).
   9:../../libDaisy//src/util/color.h **** */
  10:../../libDaisy//src/util/color.h **** #pragma once
  11:../../libDaisy//src/util/color.h **** #ifndef DSY_COLOR_H
  12:../../libDaisy//src/util/color.h **** #define DSY_COLOR_H
  13:../../libDaisy//src/util/color.h **** #include <stdint.h>
  14:../../libDaisy//src/util/color.h **** 
  15:../../libDaisy//src/util/color.h **** 
  16:../../libDaisy//src/util/color.h **** namespace daisy
  17:../../libDaisy//src/util/color.h **** {
  18:../../libDaisy//src/util/color.h **** /** @addtogroup utility
  19:../../libDaisy//src/util/color.h ****     @{
  20:../../libDaisy//src/util/color.h **** */
  21:../../libDaisy//src/util/color.h **** 
  22:../../libDaisy//src/util/color.h **** /** Class for handling simple colors */
  23:../../libDaisy//src/util/color.h **** class Color
  24:../../libDaisy//src/util/color.h **** {
  25:../../libDaisy//src/util/color.h ****   public:
  26:../../libDaisy//src/util/color.h ****     Color() {}
  27:../../libDaisy//src/util/color.h ****     ~Color() {}
 1210              		.loc 22 27 5 is_stmt 1 view .LVU263
 1211              		.loc 22 27 5 is_stmt 0 view .LVU264
 1212              	.LBE817:
 119:ExampleProject.cpp **** 	hw.led2.SetColor(led2Color[color2]);
 1213              		.loc 15 119 2 is_stmt 1 view .LVU265
 1214              		.loc 15 119 35 is_stmt 0 view .LVU266
 1215 0026 0E4A     		ldr	r2, .L47+12
 1216 0028 0E4B     		ldr	r3, .L47+16
 1217 002a 1268     		ldr	r2, [r2]
 1218 002c 02EB4202 		add	r2, r2, r2, lsl #1
 1219 0030 03EB8203 		add	r3, r3, r2, lsl #2
 1220 0034 93E80700 		ldm	r3, {r0, r1, r2}
 1221 0038 84E80700 		stm	r4, {r0, r1, r2}
 1222              		.loc 15 119 18 view .LVU267
 1223 003c 05F15400 		add	r0, r5, #84
 1224 0040 2146     		mov	r1, r4
 1225 0042 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 1226              	.LVL42:
 1227              	.LBB818:
 1228              	.LBI818:
 1229              		.loc 22 27 5 is_stmt 1 view .LVU268
 1230              		.loc 22 27 5 is_stmt 0 view .LVU269
 1231              	.LBE818:
 120:ExampleProject.cpp **** 	hw.UpdateLeds();
 1232              		.loc 15 120 2 is_stmt 1 view .LVU270
 1233              		.loc 15 120 15 is_stmt 0 view .LVU271
 1234 0046 A5F1D400 		sub	r0, r5, #212
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 99


 121:ExampleProject.cpp **** }
 1235              		.loc 15 121 1 view .LVU272
 1236 004a 05B0     		add	sp, sp, #20
 1237              		.cfi_def_cfa_offset 12
 1238              		@ sp needed
 1239 004c BDE83040 		pop	{r4, r5, lr}
 1240              		.cfi_restore 14
 1241              		.cfi_restore 5
 1242              		.cfi_restore 4
 1243              		.cfi_def_cfa_offset 0
 120:ExampleProject.cpp **** 	hw.UpdateLeds();
 1244              		.loc 15 120 15 view .LVU273
 1245 0050 FFF7FEBF 		b	_ZN5daisy8DaisyPod10UpdateLedsEv
 1246              	.LVL43:
 1247              	.L48:
 1248              		.align	2
 1249              	.L47:
 1250 0054 00000000 		.word	.LANCHOR5
 1251 0058 00000000 		.word	.LANCHOR2
 1252 005c D4000000 		.word	hw+212
 1253 0060 00000000 		.word	.LANCHOR6
 1254 0064 00000000 		.word	.LANCHOR3
 1255              		.cfi_endproc
 1256              	.LFE4801:
 1258              		.section	.text._Z14UpdateControlsv,"ax",%progbits
 1259              		.align	1
 1260              		.p2align 2,,3
 1261              		.global	_Z14UpdateControlsv
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1265              		.fpu fpv5-d16
 1267              	_Z14UpdateControlsv:
 1268              	.LFB4802:
 122:ExampleProject.cpp **** 
 123:ExampleProject.cpp **** void UpdateControls()
 124:ExampleProject.cpp **** {
 1269              		.loc 15 124 1 is_stmt 1 view -0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 125:ExampleProject.cpp **** 	hw.ProcessAnalogControls();
 1273              		.loc 15 125 2 view .LVU275
 124:ExampleProject.cpp **** 	hw.ProcessAnalogControls();
 1274              		.loc 15 124 1 is_stmt 0 view .LVU276
 1275 0000 08B5     		push	{r3, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 3, -8
 1278              		.cfi_offset 14, -4
 1279              		.loc 15 125 26 view .LVU277
 1280 0002 0A48     		ldr	r0, .L51
 1281 0004 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 1282              	.LVL44:
 126:ExampleProject.cpp ****     hw.ProcessDigitalControls();
 1283              		.loc 15 126 5 is_stmt 1 view .LVU278
 1284              		.loc 15 126 30 is_stmt 0 view .LVU279
 1285 0008 0848     		ldr	r0, .L51
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 100


 1286 000a FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 1287              	.LVL45:
 127:ExampleProject.cpp **** 
 128:ExampleProject.cpp ****     UpdateEncoder();
 1288              		.loc 15 128 5 is_stmt 1 view .LVU280
 1289              		.loc 15 128 18 is_stmt 0 view .LVU281
 1290 000e FFF7FEFF 		bl	_Z13UpdateEncoderv
 1291              	.LVL46:
 129:ExampleProject.cpp ****     UpdateKnobs();
 1292              		.loc 15 129 5 is_stmt 1 view .LVU282
 1293              	.LBB821:
 1294              	.LBI821:
 110:ExampleProject.cpp **** {
 1295              		.loc 15 110 6 view .LVU283
 1296              	.LBB822:
 112:ExampleProject.cpp **** 	
 1297              		.loc 15 112 2 view .LVU284
 112:ExampleProject.cpp **** 	
 1298              		.loc 15 112 29 is_stmt 0 view .LVU285
 1299 0012 0748     		ldr	r0, .L51+4
 1300 0014 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1301              	.LVL47:
 112:ExampleProject.cpp **** 	
 1302              		.loc 15 112 11 view .LVU286
 1303 0018 BDEEC00A 		vcvt.s32.f32	s0, s0
 112:ExampleProject.cpp **** 	
 1304              		.loc 15 112 9 view .LVU287
 1305 001c 054B     		ldr	r3, .L51+8
 112:ExampleProject.cpp **** 	
 1306              		.loc 15 112 11 view .LVU288
 1307 001e 83ED000A 		vstr.32	s0, [r3]	@ int
 1308              	.LBE822:
 1309              	.LBE821:
 130:ExampleProject.cpp ****     UpdateLeds();
 1310              		.loc 15 130 5 is_stmt 1 view .LVU289
 131:ExampleProject.cpp **** 
 132:ExampleProject.cpp **** 	
 133:ExampleProject.cpp **** }
 1311              		.loc 15 133 1 is_stmt 0 view .LVU290
 1312 0022 BDE80840 		pop	{r3, lr}
 1313              		.cfi_restore 14
 1314              		.cfi_restore 3
 1315              		.cfi_def_cfa_offset 0
 130:ExampleProject.cpp ****     UpdateLeds();
 1316              		.loc 15 130 15 view .LVU291
 1317 0026 FFF7FEBF 		b	_Z10UpdateLedsv
 1318              	.LVL48:
 1319              	.L52:
 1320 002a 00BF     		.align	2
 1321              	.L51:
 1322 002c 00000000 		.word	hw
 1323 0030 00000000 		.word	.LANCHOR4
 1324 0034 00000000 		.word	.LANCHOR6
 1325              		.cfi_endproc
 1326              	.LFE4802:
 1328              		.section	.text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj429496729
 1329              		.align	1
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 101


 1330              		.p2align 2,,3
 1331              		.weak	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2
 1332              		.syntax unified
 1333              		.thumb
 1334              		.thumb_func
 1335              		.fpu fpv5-d16
 1337              	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj26369286
 1338              	.LVL49:
 1339              	.LFB5332:
 1340              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\random.tcc
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // random number generation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // Copyright (C) 2009-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** /** @file bits/random.tcc
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****  *  Do not attempt to use it directly. @headername{random}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #ifndef _RANDOM_TCC
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #define _RANDOM_TCC 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #include <numeric> // std::accumulate and std::partial_sum
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** {
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /*
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * (Further) implementation-space details.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   namespace __detail
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   {
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // General case for x = (ax + c) mod m -- use Schrage's algorithm
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // to avoid integer overflow.
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     //
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // Preconditions:  a > 0, m > 0.
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 102


  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     //
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // Note: only works correctly for __m % __a < __m / __a.
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _Tp
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _Mod<_Tp, __m, __a, __c, false, true>::
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __calc(_Tp __x)
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__a == 1)
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x %= __m;
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	else
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    static const _Tp __q = __m / __a;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    static const _Tp __r = __m % __a;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _Tp __t1 = __a * (__x % __q);
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _Tp __t2 = __r * (__x / __q);
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__t1 >= __t2)
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x = __t1 - __t2;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    else
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x = __m - __t2 + __t1;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__c != 0)
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const _Tp __d = __m - __x;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__d > __c)
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x += __c;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    else
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x = __c - __d;
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __x;
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _InputIterator, typename _OutputIterator,
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _Tp>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _OutputIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __normalize(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  _OutputIterator __result, const _Tp& __factor)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (; __first != __last; ++__first, ++__result)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__result = *__first / __factor;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __result;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   } // namespace __detail
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::multiplier;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::increment;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::modulus;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 103


 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::default_seed;
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /**
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Seeds the LCR with integral value @p __s, adjusted so that the
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * ring identity is never a member of the convergence set.
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __s)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if ((__detail::__mod<_UIntType, __m>(__c) == 0)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  && (__detail::__mod<_UIntType, __m>(__s) == 0))
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_x = 1;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       else
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_x = __detail::__mod<_UIntType, __m>(__s);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /**
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Seeds the LCR engine with a value generated by @p __q.
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Sseq>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       auto
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       linear_congruential_engine<_UIntType, __a, __c, __m>::
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       seed(_Sseq& __q)
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       -> _If_seed_seq<_Sseq>
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _UIntType __k0 = __m == 0 ? std::numeric_limits<_UIntType>::digits
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	                                : std::__lg(__m);
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _UIntType __k = (__k0 + 31) / 32;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	uint_least32_t __arr[__k + 3];
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__q.generate(__arr + 0, __arr + __k + 3);
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_UIntType __factor = 1u;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_UIntType __sum = 0u;
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __j = 0; __j < __k; ++__j)
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __sum += __arr[__j + 3] * __factor;
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __factor *= __detail::_Shift<_UIntType, 32>::__value;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	seed(__sum);
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const linear_congruential_engine<_UIntType,
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 						__a, __c, __m>& __lcr)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 104


 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__os.widen(' '));
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __lcr._M_x;
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       linear_congruential_engine<_UIntType, __a, __c, __m>& __lcr)
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec);
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is >> __lcr._M_x;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::word_size;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::state_size;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::shift_size;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 105


 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::mask_bits;
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::xor_mask;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_u;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_d;
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_s;
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_b;
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 106


 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_t;
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_c;
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_l;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****                                               initialization_multiplier;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::default_seed;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __sd)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_x[0] = __detail::__mod<_UIntType,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Shift<_UIntType, __w>::__value>(__sd);
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _UIntType __x = _M_x[__i - 1];
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 107


 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x ^= __x >> (__w - 2);
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x *= __f;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x += __detail::__mod<_UIntType, __n>(__i);
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__x);
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = state_size;
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Sseq>
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       auto
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			      __s, __b, __t, __c, __l, __f>::
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       seed(_Sseq& __q)
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       -> _If_seed_seq<_Sseq>
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _UIntType __upper_mask = (~_UIntType()) << __r;
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const size_t __k = (__w + 31) / 32;
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	uint_least32_t __arr[__n * __k];
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__q.generate(__arr + 0, __arr + __n * __k);
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	bool __zero = true;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __i = 0; __i < state_size; ++__i)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _UIntType __factor = 1u;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _UIntType __sum = 0u;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    for (size_t __j = 0; __j < __k; ++__j)
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__sum += __arr[__k * __i + __j] * __factor;
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__factor *= __detail::_Shift<_UIntType, 32>::__value;
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_x[__i] = __detail::__mod<_UIntType,
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __detail::_Shift<_UIntType, __w>::__value>(__sum);
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__zero)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		if (__i == 0)
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    if ((_M_x[0] & __upper_mask) != 0u)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      __zero = false;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else if (_M_x[__i] != 0u)
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __zero = false;
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         if (__zero)
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****           _M_x[0] = __detail::_Shift<_UIntType, __w - 1>::__value;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_p = state_size;
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w,
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __n, size_t __m, size_t __r,
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 108


 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 1341              		.loc 23 394 5 is_stmt 1 view -0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345              	.LBB823:
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     _M_gen_rand(void)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _UIntType __upper_mask = (~_UIntType()) << __r;
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _UIntType __lower_mask = ~__upper_mask;
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = 0; __k < (__n - __m); ++__k)
 1346              		.loc 23 401 32 view .LVU293
 1347 0000 00F5637C 		add	ip, r0, #908
 1348              	.LBE823:
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 1349              		.loc 23 394 5 is_stmt 0 view .LVU294
 1350 0004 0146     		mov	r1, r0
 1351 0006 10B5     		push	{r4, lr}
 1352              		.cfi_def_cfa_offset 8
 1353              		.cfi_offset 4, -8
 1354              		.cfi_offset 14, -4
 1355              	.LVL50:
 1356              	.L55:
 1357              	.LBB826:
 1358              	.LBB824:
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 1359              		.loc 23 403 26 view .LVU295
 1360 0008 0C68     		ldr	r4, [r1]
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 1361              		.loc 23 404 24 view .LVU296
 1362 000a 51F8042F 		ldr	r2, [r1, #4]!
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 1363              		.loc 23 403 32 view .LVU297
 1364 000e 04F00044 		and	r4, r4, #-2147483648
 1365              		.loc 23 404 24 view .LVU298
 1366 0012 22F00042 		bic	r2, r2, #-2147483648
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 1367              		.loc 23 405 33 view .LVU299
 1368 0016 D1F83036 		ldr	r3, [r1, #1584]
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 1369              		.loc 23 403 14 view .LVU300
 1370 001a 2243     		orrs	r2, r2, r4
 1371              	.LVL51:
 1372              		.loc 23 405 33 view .LVU301
 1373 001c 83EA5203 		eor	r3, r3, r2, lsr #1
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 1374              		.loc 23 406 26 view .LVU302
 1375 0020 D207     		lsls	r2, r2, #31
 1376              	.LVL52:
 1377              		.loc 23 406 26 view .LVU303
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 109


 1378 0022 05D5     		bpl	.L54
 1379              		.loc 23 406 10 view .LVU304
 1380 0024 83F01943 		eor	r3, r3, #-1728053248
 1381 0028 83F40B23 		eor	r3, r3, #569344
 1382 002c 83F0DF03 		eor	r3, r3, #223
 1383              	.L54:
 1384              	.LBE824:
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 1385              		.loc 23 401 32 discriminator 4 view .LVU305
 1386 0030 8C45     		cmp	ip, r1
 1387              	.LBB825:
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 1388              		.loc 23 405 14 discriminator 4 view .LVU306
 1389 0032 41F8043C 		str	r3, [r1, #-4]
 1390              	.LBE825:
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 1391              		.loc 23 401 7 is_stmt 1 discriminator 4 view .LVU307
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 1392              		.loc 23 401 32 discriminator 4 view .LVU308
 1393 0036 E7D1     		bne	.L55
 1394 0038 011F     		subs	r1, r0, #4
 1395              	.LVL53:
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 1396              		.loc 23 401 32 is_stmt 0 discriminator 4 view .LVU309
 1397 003a 00F22C6E 		addw	lr, r0, #1580
 1398              	.L57:
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 1399              		.loc 23 401 32 discriminator 4 view .LVU310
 1400              	.LBE826:
 1401              	.LBB827:
 1402              	.LBB828:
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         }
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 1403              		.loc 23 412 24 view .LVU311
 1404 003e D1E9E424 		ldrd	r2, r4, [r1, #912]
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 1405              		.loc 23 413 41 view .LVU312
 1406 0042 51F8043F 		ldr	r3, [r1, #4]!
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 1407              		.loc 23 412 24 view .LVU313
 1408 0046 24F0004C 		bic	ip, r4, #-2147483648
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 1409              		.loc 23 411 32 view .LVU314
 1410 004a 02F00042 		and	r2, r2, #-2147483648
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 1411              		.loc 23 411 14 view .LVU315
 1412 004e 42EA0C02 		orr	r2, r2, ip
 1413              	.LVL54:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 1414              		.loc 23 414 26 view .LVU316
 1415 0052 D407     		lsls	r4, r2, #31
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 1416              		.loc 23 413 41 view .LVU317
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 110


 1417 0054 83EA5203 		eor	r3, r3, r2, lsr #1
 1418              		.loc 23 414 26 view .LVU318
 1419 0058 05D5     		bpl	.L56
 1420              		.loc 23 414 10 view .LVU319
 1421 005a 83F01943 		eor	r3, r3, #-1728053248
 1422 005e 83F40B23 		eor	r3, r3, #569344
 1423 0062 83F0DF03 		eor	r3, r3, #223
 1424              	.L56:
 1425              	.LBE828:
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 1426              		.loc 23 409 42 discriminator 4 view .LVU320
 1427 0066 8E45     		cmp	lr, r1
 1428              	.LBB829:
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 1429              		.loc 23 413 14 discriminator 4 view .LVU321
 1430 0068 C1F88C33 		str	r3, [r1, #908]
 1431              	.LBE829:
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 1432              		.loc 23 409 7 is_stmt 1 discriminator 4 view .LVU322
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 1433              		.loc 23 409 42 discriminator 4 view .LVU323
 1434 006c E7D1     		bne	.L57
 1435              	.LBE827:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
 1436              		.loc 23 417 39 is_stmt 0 view .LVU324
 1437 006e D0F8BC29 		ldr	r2, [r0, #2492]
 1438              	.LVL55:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       | (_M_x[0] & __lower_mask));
 1439              		.loc 23 418 21 view .LVU325
 1440 0072 0168     		ldr	r1, [r0]
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       | (_M_x[0] & __lower_mask));
 1441              		.loc 23 417 39 view .LVU326
 1442 0074 02F00042 		and	r2, r2, #-2147483648
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 1443              		.loc 23 419 38 view .LVU327
 1444 0078 D0F83036 		ldr	r3, [r0, #1584]
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       | (_M_x[0] & __lower_mask));
 1445              		.loc 23 418 21 view .LVU328
 1446 007c 21F00041 		bic	r1, r1, #-2147483648
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       | (_M_x[0] & __lower_mask));
 1447              		.loc 23 417 17 view .LVU329
 1448 0080 0A43     		orrs	r2, r2, r1
 1449              	.LVL56:
 1450              		.loc 23 419 38 view .LVU330
 1451 0082 83EA5203 		eor	r3, r3, r2, lsr #1
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 1452              		.loc 23 420 26 view .LVU331
 1453 0086 D207     		lsls	r2, r2, #31
 1454              	.LVL57:
 1455              		.loc 23 420 26 view .LVU332
 1456 0088 05D5     		bpl	.L58
 1457              		.loc 23 420 10 view .LVU333
 1458 008a 83F01943 		eor	r3, r3, #-1728053248
 1459 008e 83F40B23 		eor	r3, r3, #569344
 1460 0092 83F0DF03 		eor	r3, r3, #223
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 111


 1461              	.L58:
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = 0;
 1462              		.loc 23 421 12 discriminator 4 view .LVU334
 1463 0096 0022     		movs	r2, #0
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 1464              		.loc 23 419 21 discriminator 4 view .LVU335
 1465 0098 C0F8BC39 		str	r3, [r0, #2492]
 1466              	.LVL58:
 1467              		.loc 23 421 12 discriminator 4 view .LVU336
 1468 009c C0F8C029 		str	r2, [r0, #2496]
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 1469              		.loc 23 422 5 discriminator 4 view .LVU337
 1470 00a0 10BD     		pop	{r4, pc}
 1471              		.cfi_endproc
 1472              	.LFE5332:
 1474 00a2 00BF     		.section	.text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397E
 1475              		.align	1
 1476              		.p2align 2,,3
 1477              		.syntax unified
 1478              		.thumb
 1479              		.thumb_func
 1480              		.fpu fpv5-d16
 1482              	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj256748361
 1483              	.LVL59:
 1484              	.LFB5406:
 1485              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\uniform_in
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // Class template uniform_int_distribution -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // Copyright (C) 2009-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** /**
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****  * @file bits/uniform_int_dist.h
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****  *  This is an internal header file, included by other library headers.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****  *  Do not attempt to use it directly. @headername{random}
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****  */
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** #ifndef _GLIBCXX_BITS_UNIFORM_INT_DIST_H
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 112


  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** #define _GLIBCXX_BITS_UNIFORM_INT_DIST_H
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** #include <type_traits>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** #include <limits>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** #if __cplusplus > 201703L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** # include <concepts>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** namespace std _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** #ifdef __cpp_lib_concepts
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****   /// Requirements for a uniform random bit generator.
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****   template<typename _Gen>
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     concept uniform_random_bit_generator
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       = invocable<_Gen&> && unsigned_integral<invoke_result_t<_Gen&>>
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       && requires
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       {
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ _Gen::min() } -> same_as<invoke_result_t<_Gen&>>;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ _Gen::max() } -> same_as<invoke_result_t<_Gen&>>;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	requires bool_constant<(_Gen::min() < _Gen::max())>::value;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       };
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** #endif
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****   namespace __detail
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****   {
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     /* Determine whether number is a power of 2.  */
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     template<typename _Tp>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       inline bool
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       _Power_of_2(_Tp __x)
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       {
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	return ((__x - 1) & __x) == 0;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       }
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****   }
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****   /**
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****    * @brief Uniform discrete distribution for random numbers.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****    * A discrete random distribution on the range @f$[min, max]@f$ with equal
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****    * probability throughout the range.
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****    */
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****   template<typename _IntType = int>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     class uniform_int_distribution
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     {
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       static_assert(std::is_integral<_IntType>::value,
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		    "template argument must be an integral type");
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     public:
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /** The type of the range of the distribution. */
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       typedef _IntType result_type;
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /** Parameter type. */
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       struct param_type
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	typedef uniform_int_distribution<_IntType> distribution_type;
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	param_type() : param_type(0) { }
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 113


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	explicit
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	param_type(_IntType __a,
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		   _IntType __b = numeric_limits<_IntType>::max())
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	: _M_a(__a), _M_b(__b)
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	  __glibcxx_assert(_M_a <= _M_b);
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	}
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	result_type
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	a() const
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_a; }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	result_type
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	b() const
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_b; }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	friend bool
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	operator==(const param_type& __p1, const param_type& __p2)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return __p1._M_a == __p2._M_a && __p1._M_b == __p2._M_b; }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	friend bool
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	operator!=(const param_type& __p1, const param_type& __p2)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return !(__p1 == __p2); }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       private:
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	_IntType _M_a;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	_IntType _M_b;
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       };
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /**
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @brief Constructs a uniform distribution object.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        */
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       uniform_int_distribution() : uniform_int_distribution(0) { }
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /**
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @brief Constructs a uniform distribution object.
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        */
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       explicit
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       uniform_int_distribution(_IntType __a,
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 			       _IntType __b = numeric_limits<_IntType>::max())
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       : _M_param(__a, __b)
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       { }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       explicit
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       uniform_int_distribution(const param_type& __p)
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       : _M_param(__p)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       { }
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /**
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @brief Resets the distribution state.
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        *
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * Does nothing for the uniform integer distribution.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        */
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       void
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       reset() { }
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 114


 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       result_type
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       a() const
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       { return _M_param.a(); }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       result_type
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       b() const
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       { return _M_param.b(); }
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /**
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @brief Returns the parameter set of the distribution.
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        */
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       param_type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       param() const
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       { return _M_param; }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /**
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @brief Sets the parameter set of the distribution.
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @param __param The new parameter set of the distribution.
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        */
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       void
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       param(const param_type& __param)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       { _M_param = __param; }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /**
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @brief Returns the inclusive lower bound of the distribution range.
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        */
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       result_type
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       min() const
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       { return this->a(); }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /**
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @brief Returns the inclusive upper bound of the distribution range.
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        */
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       result_type
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       max() const
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       { return this->b(); }
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /**
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @brief Generating functions.
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        */
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       template<typename _UniformRandomNumberGenerator>
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	result_type
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	operator()(_UniformRandomNumberGenerator& __urng)
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****         { return this->operator()(__urng, _M_param); }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       template<typename _UniformRandomNumberGenerator>
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	result_type
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	operator()(_UniformRandomNumberGenerator& __urng,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		   const param_type& __p);
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       template<typename _ForwardIterator,
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	       typename _UniformRandomNumberGenerator>
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	void
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	__generate(_ForwardIterator __f, _ForwardIterator __t,
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		   _UniformRandomNumberGenerator& __urng)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ this->__generate(__f, __t, __urng, _M_param); }
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 115


 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       template<typename _ForwardIterator,
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	       typename _UniformRandomNumberGenerator>
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	void
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	__generate(_ForwardIterator __f, _ForwardIterator __t,
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		   _UniformRandomNumberGenerator& __urng,
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		   const param_type& __p)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ this->__generate_impl(__f, __t, __urng, __p); }
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       template<typename _UniformRandomNumberGenerator>
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	void
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	__generate(result_type* __f, result_type* __t,
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		   _UniformRandomNumberGenerator& __urng,
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		   const param_type& __p)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ this->__generate_impl(__f, __t, __urng, __p); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       /**
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        * @brief Return true if two uniform integer distributions have
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        *        the same parameters.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****        */
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       friend bool
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       operator==(const uniform_int_distribution& __d1,
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		 const uniform_int_distribution& __d2)
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       { return __d1._M_param == __d2._M_param; }
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     private:
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       template<typename _ForwardIterator,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	       typename _UniformRandomNumberGenerator>
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	void
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	__generate_impl(_ForwardIterator __f, _ForwardIterator __t,
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 			_UniformRandomNumberGenerator& __urng,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 			const param_type& __p);
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       param_type _M_param;
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     };
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****   template<typename _IntType>
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****     template<typename _UniformRandomNumberGenerator>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       typename uniform_int_distribution<_IntType>::result_type
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       uniform_int_distribution<_IntType>::
 1486              		.loc 24 241 7 is_stmt 1 view -0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490              		.loc 24 241 7 is_stmt 0 view .LVU339
 1491 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1492              		.cfi_def_cfa_offset 24
 1493              		.cfi_offset 3, -24
 1494              		.cfi_offset 4, -20
 1495              		.cfi_offset 5, -16
 1496              		.cfi_offset 6, -12
 1497              		.cfi_offset 7, -8
 1498              		.cfi_offset 14, -4
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       operator()(_UniformRandomNumberGenerator& __urng,
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		 const param_type& __param)
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       {
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	typedef typename _UniformRandomNumberGenerator::result_type
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	  _Gresult_type;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 116


 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	typedef typename std::make_unsigned<result_type>::type __utype;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	typedef typename std::common_type<_Gresult_type, __utype>::type
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	  __uctype;
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	const __uctype __urngmin = __urng.min();
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	const __uctype __urngmax = __urng.max();
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	const __uctype __urngrange = __urngmax - __urngmin;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	const __uctype __urange
 1499              		.loc 24 254 17 view .LVU340
 1500 0002 D1E90027 		ldrd	r2, r7, [r1]
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       operator()(_UniformRandomNumberGenerator& __urng,
 1501              		.loc 24 241 7 view .LVU341
 1502 0006 0C46     		mov	r4, r1
 1503 0008 0646     		mov	r6, r0
 1504              	.LVL60:
 1505              	.LBB843:
 1506              	.LBI843:
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_b; }
 1507              		.loc 24 102 2 is_stmt 1 view .LVU342
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_b; }
 1508              		.loc 24 102 2 is_stmt 0 view .LVU343
 1509              	.LBE843:
 1510              	.LBB844:
 1511              	.LBI844:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_a; }
 1512              		.loc 24 98 2 is_stmt 1 view .LVU344
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_a; }
 1513              		.loc 24 98 2 is_stmt 0 view .LVU345
 1514              	.LBE844:
 1515              		.loc 24 254 17 view .LVU346
 1516 000a BF1A     		subs	r7, r7, r2
 1517              	.LVL61:
 1518              	.LBB845:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	  = __uctype(__param.b()) - __uctype(__param.a());
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	__uctype __ret;
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	if (__urngrange > __urange)
 1519              		.loc 24 259 2 view .LVU347
 1520 000c 7B1C     		adds	r3, r7, #1
 1521 000e 2AD0     		beq	.L72
 1522              	.LBB846:
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	  {
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    // downscaling
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 1523              		.loc 24 262 21 view .LVU348
 1524 0010 0137     		adds	r7, r7, #1
 1525              	.LVL62:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    const __uctype __scaling = __urngrange / __uerange;
 1526              		.loc 24 263 21 view .LVU349
 1527 0012 4FF0FF33 		mov	r3, #-1
 1528              	.LVL63:
 1529              	.LBB847:
 1530              	.LBB848:
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __n, size_t __m, size_t __r,
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 117


 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     discard(unsigned long long __z)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       while (__z > state_size - _M_p)
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __z -= state_size - _M_p;
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_gen_rand();
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p += __z;
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     typename
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::result_type
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator()()
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Reload the vector - cost is O(n) amortized over n calls.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (_M_p >= state_size)
 1531              		.loc 23 455 11 view .LVU350
 1532 0016 D0F8C029 		ldr	r2, [r0, #2496]
 1533              	.LBE848:
 1534              	.LBE847:
 1535              		.loc 24 263 21 view .LVU351
 1536 001a B3FBF7F5 		udiv	r5, r3, r7
 1537              	.LVL64:
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    const __uctype __past = __uerange * __scaling;
 1538              		.loc 24 264 21 view .LVU352
 1539 001e 05FB07F7 		mul	r7, r5, r7
 1540              	.LVL65:
 1541              		.loc 24 264 21 view .LVU353
 1542 0022 12E0     		b	.L74
 1543              	.LVL66:
 1544              	.L73:
 1545              	.LBB851:
 1546              	.LBB849:
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_gen_rand();
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Calculate o(x(i)).
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       result_type __z = _M_x[_M_p++];
 1547              		.loc 23 459 19 view .LVU354
 1548 0024 56F82230 		ldr	r3, [r6, r2, lsl #2]
 1549              	.LVL67:
 1550              		.loc 23 459 29 view .LVU355
 1551 0028 0132     		adds	r2, r2, #1
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 118


 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __s) & __b;
 1552              		.loc 23 461 27 view .LVU356
 1553 002a 1E49     		ldr	r1, .L82
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 1554              		.loc 23 460 11 view .LVU357
 1555 002c 83EAD323 		eor	r3, r3, r3, lsr #11
 1556              	.LVL68:
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 1557              		.loc 23 462 27 view .LVU358
 1558 0030 1D48     		ldr	r0, .L82+4
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 1559              		.loc 23 459 29 view .LVU359
 1560 0032 C6F8C029 		str	r2, [r6, #2496]
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 1561              		.loc 23 461 27 view .LVU360
 1562 0036 01EAC311 		and	r1, r1, r3, lsl #7
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 1563              		.loc 23 461 11 view .LVU361
 1564 003a 4B40     		eors	r3, r3, r1
 1565              	.LVL69:
 1566              		.loc 23 462 27 view .LVU362
 1567 003c 00EAC330 		and	r0, r0, r3, lsl #15
 1568              		.loc 23 462 11 view .LVU363
 1569 0040 4340     		eors	r3, r3, r0
 1570              	.LVL70:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __l);
 1571              		.loc 23 463 11 view .LVU364
 1572 0042 83EA9343 		eor	r3, r3, r3, lsr #18
 1573              	.LVL71:
 1574              		.loc 23 463 11 view .LVU365
 1575              	.LBE849:
 1576              	.LBE851:
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    do
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      __ret = __uctype(__urng()) - __urngmin;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    while (__ret >= __past);
 1577              		.loc 24 267 19 is_stmt 1 view .LVU366
 1578 0046 9F42     		cmp	r7, r3
 1579 0048 08D8     		bhi	.L80
 1580              	.LVL72:
 1581              	.L74:
 1582              	.LBB852:
 1583              	.LBI847:
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 1584              		.loc 23 450 5 view .LVU367
 1585              	.LBB850:
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_gen_rand();
 1586              		.loc 23 455 7 is_stmt 0 view .LVU368
 1587 004a B2F51C7F 		cmp	r2, #624
 1588 004e E9D3     		bcc	.L73
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 1589              		.loc 23 456 13 view .LVU369
 1590 0050 3046     		mov	r0, r6
 1591 0052 FFF7FEFF 		bl	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636
 1592              	.LVL73:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 1593              		.loc 23 459 30 view .LVU370
 1594 0056 D6F8C029 		ldr	r2, [r6, #2496]
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 119


 1595 005a E3E7     		b	.L73
 1596              	.LVL74:
 1597              	.L80:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 1598              		.loc 23 459 30 view .LVU371
 1599              	.LBE850:
 1600              	.LBE852:
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    __ret /= __scaling;
 1601              		.loc 24 268 12 view .LVU372
 1602 005c B3FBF5F3 		udiv	r3, r3, r5
 1603              	.LVL75:
 1604              		.loc 24 268 12 view .LVU373
 1605              	.LBE846:
 1606              	.LBE845:
 1607              	.LBB862:
 1608              	.LBI862:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_a; }
 1609              		.loc 24 98 2 is_stmt 1 view .LVU374
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_a; }
 1610              		.loc 24 98 2 is_stmt 0 view .LVU375
 1611              	.LBE862:
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	  }
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	else if (__urngrange < __urange)
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	  {
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    // upscaling
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    /*
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      Note that every value in [0, urange]
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      can be written uniquely as
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      (urngrange + 1) * high + low
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      where
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      high in [0, urange / (urngrange + 1)]
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      and
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      low in [0, urngrange].
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    */
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    __uctype __tmp; // wraparound control
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    do
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      {
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		const __uctype __uerngrange = __urngrange + 1;
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		__tmp = (__uerngrange * operator()
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 			 (__urng, param_type(0, __urange / __uerngrange)));
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	      }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	    while (__ret > __urange || __ret < __tmp);
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	  }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	else
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	  __ret = __uctype(__urng()) - __urngmin;
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	return __ret + __param.a();
 1612              		.loc 24 300 26 view .LVU376
 1613 0060 2268     		ldr	r2, [r4]
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       }
 1614              		.loc 24 301 7 view .LVU377
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 120


 1615 0062 9818     		adds	r0, r3, r2
 1616 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1617              	.LVL76:
 1618              	.L72:
 1619              	.LBB863:
 1620              	.LBB853:
 1621              	.LBB854:
 1622              	.LBI854:
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 1623              		.loc 23 450 5 is_stmt 1 view .LVU378
 1624              	.LBB855:
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_gen_rand();
 1625              		.loc 23 455 11 is_stmt 0 view .LVU379
 1626 0066 D0F8C019 		ldr	r1, [r0, #2496]
 1627              	.LVL77:
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_gen_rand();
 1628              		.loc 23 455 7 view .LVU380
 1629 006a B1F51C7F 		cmp	r1, #624
 1630 006e 12D2     		bcs	.L81
 1631              	.LVL78:
 1632              	.L76:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 1633              		.loc 23 459 19 view .LVU381
 1634 0070 56F82130 		ldr	r3, [r6, r1, lsl #2]
 1635              	.LVL79:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 1636              		.loc 23 459 29 view .LVU382
 1637 0074 0131     		adds	r1, r1, #1
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 1638              		.loc 23 461 27 view .LVU383
 1639 0076 0B48     		ldr	r0, .L82
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __s) & __b;
 1640              		.loc 23 460 11 view .LVU384
 1641 0078 83EAD323 		eor	r3, r3, r3, lsr #11
 1642              	.LVL80:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 1643              		.loc 23 459 29 view .LVU385
 1644 007c C6F8C019 		str	r1, [r6, #2496]
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 1645              		.loc 23 461 27 view .LVU386
 1646 0080 00EAC311 		and	r1, r0, r3, lsl #7
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __l);
 1647              		.loc 23 462 27 view .LVU387
 1648 0084 0848     		ldr	r0, .L82+4
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 1649              		.loc 23 461 11 view .LVU388
 1650 0086 4B40     		eors	r3, r3, r1
 1651              	.LVL81:
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __l);
 1652              		.loc 23 462 27 view .LVU389
 1653 0088 00EAC330 		and	r0, r0, r3, lsl #15
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __l);
 1654              		.loc 23 462 11 view .LVU390
 1655 008c 4340     		eors	r3, r3, r0
 1656              	.LVL82:
 1657              		.loc 23 463 11 view .LVU391
 1658 008e 83EA9343 		eor	r3, r3, r3, lsr #18
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 121


 1659              	.LVL83:
 1660              		.loc 23 463 11 view .LVU392
 1661              	.LBE855:
 1662              	.LBE854:
 1663              	.LBE853:
 1664              	.LBE863:
 1665              	.LBB864:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_a; }
 1666              		.loc 24 98 2 is_stmt 1 view .LVU393
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{ return _M_a; }
 1667              		.loc 24 98 2 is_stmt 0 view .LVU394
 1668              	.LBE864:
 1669              		.loc 24 301 7 view .LVU395
 1670 0092 9818     		adds	r0, r3, r2
 1671 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1672              	.LVL84:
 1673              	.L81:
 1674              	.LBB865:
 1675              	.LBB860:
 1676              	.LBB858:
 1677              	.LBB856:
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 1678              		.loc 23 456 13 view .LVU396
 1679 0096 FFF7FEFF 		bl	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636
 1680              	.LVL85:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 1681              		.loc 23 459 30 view .LVU397
 1682 009a D6F8C019 		ldr	r1, [r6, #2496]
 1683              	.LBE856:
 1684              	.LBE858:
 1685              	.LBE860:
 1686              	.LBE865:
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****       }
 1687              		.loc 24 300 26 view .LVU398
 1688 009e 2268     		ldr	r2, [r4]
 1689              	.LBB866:
 1690              	.LBB861:
 1691              	.LBB859:
 1692              	.LBB857:
 1693 00a0 E6E7     		b	.L76
 1694              	.L83:
 1695 00a2 00BF     		.align	2
 1696              	.L82:
 1697 00a4 80562C9D 		.word	-1658038656
 1698 00a8 0000C6EF 		.word	-272236544
 1699              	.LBE857:
 1700              	.LBE859:
 1701              	.LBE861:
 1702              	.LBE866:
 1703              		.cfi_endproc
 1704              	.LFE5406:
 1706              		.section	.text._Z6SetOscv,"ax",%progbits
 1707              		.align	1
 1708              		.p2align 2,,3
 1709              		.global	_Z6SetOscv
 1710              		.syntax unified
 1711              		.thumb
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 122


 1712              		.thumb_func
 1713              		.fpu fpv5-d16
 1715              	_Z6SetOscv:
 1716              	.LFB4803:
 134:ExampleProject.cpp **** 
 135:ExampleProject.cpp **** void SetOsc()
 136:ExampleProject.cpp **** {
 1717              		.loc 15 136 1 is_stmt 1 view -0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 8
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 137:ExampleProject.cpp **** 	osc.SetWaveform((int)round(knob1.Process()));
 1721              		.loc 15 137 2 view .LVU400
 136:ExampleProject.cpp **** 	osc.SetWaveform((int)round(knob1.Process()));
 1722              		.loc 15 136 1 is_stmt 0 view .LVU401
 1723 0000 70B5     		push	{r4, r5, r6, lr}
 1724              		.cfi_def_cfa_offset 16
 1725              		.cfi_offset 4, -16
 1726              		.cfi_offset 5, -12
 1727              		.cfi_offset 6, -8
 1728              		.cfi_offset 14, -4
 1729              		.loc 15 137 28 view .LVU402
 1730 0002 3B48     		ldr	r0, .L98+8
 1731              	.LBB867:
 1732              	.LBB868:
  55:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  56:../../DaisySP//Source/Synthesis/oscillator.h **** 
  57:../../DaisySP//Source/Synthesis/oscillator.h **** 
  58:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  59:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  60:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  62:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
  63:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
  64:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  65:../../DaisySP//Source/Synthesis/oscillator.h **** 
  66:../../DaisySP//Source/Synthesis/oscillator.h **** 
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  69:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  72:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  73:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  74:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 1733              		.loc 14 74 19 view .LVU403
 1734 0004 3B4C     		ldr	r4, .L98+12
 1735              	.LBE868:
 1736              	.LBE867:
 1737              	.LBB870:
 1738              	.LBB871:
 1739              	.LBB872:
 1740              		.loc 7 70 45 view .LVU404
 1741 0006 3C4D     		ldr	r5, .L98+16
 1742              	.LBE872:
 1743              	.LBE871:
 1744              	.LBE870:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 123


 136:ExampleProject.cpp **** 	osc.SetWaveform((int)round(knob1.Process()));
 1745              		.loc 15 136 1 view .LVU405
 1746 0008 2DED028B 		vpush.64	{d8}
 1747              		.cfi_def_cfa_offset 24
 1748              		.cfi_offset 80, -24
 1749              		.cfi_offset 81, -20
 1750 000c 82B0     		sub	sp, sp, #8
 1751              		.cfi_def_cfa_offset 32
 1752              		.loc 15 137 28 view .LVU406
 1753 000e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1754              	.LVL86:
 1755              	.LBB885:
 1756              	.LBI885:
 1757              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 124


  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 125


 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 126


 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 127


 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 128


 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 129


 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 130


 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(long double __x)
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinl(__x); }
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sin(_Tp __x)
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sin(__x); }
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sinh;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 131


 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(float __x)
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhf(__x); }
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(long double __x)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhl(__x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sinh(_Tp __x)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sinh(__x); }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sqrt;
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sqrt(float __x)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtf(__x); }
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sqrt(long double __x)
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtl(__x); }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sqrt(_Tp __x)
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sqrt(__x); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tan;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tan(float __x)
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanf(__x); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tan(long double __x)
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanl(__x); }
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     tan(_Tp __x)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_tan(__x); }
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tanh;
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 132


 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tanh(float __x)
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanhf(__x); }
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tanh(long double __x)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanhl(__x); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     tanh(_Tp __x)
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_tanh(__x); }
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_USE_C99_MATH
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // These are possible macros imported from C99-land.
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fpclassify
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isfinite
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isinf
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isnan
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isnormal
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef signbit
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isgreater
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isgreaterequal
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isless
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef islessequal
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef islessgreater
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isunordered
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus >= 201103L
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(float __x)
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(double __x)
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(long double __x)
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               int>::__type
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fpclassify(_Tp __x)
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 133


 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(float __x)
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(double __x)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(long double __x)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isfinite(_Tp __x)
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return true; }
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(float __x)
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::isinf;
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(double __x)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(long double __x)
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isinf(_Tp __x)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return false; }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(float __x)
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 134


 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::isnan;
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(double __x)
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(long double __x)
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnan(_Tp __x)
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return false; }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(float __x)
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(double __x)
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(long double __x)
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnormal(_Tp __x)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x != 0 ? true : false; }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(float __x)
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(double __x)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(long double __x)
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 135


 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     signbit(_Tp __x)
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x < 0 ? true : false; }
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(float __x, float __y)
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(double __x, double __y)
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(long double __x, long double __y)
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreater(_Tp __x, _Up __y)
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(float __x, float __y)
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(double __x, double __y)
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(long double __x, long double __y)
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 136


 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(float __x, float __y)
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(double __x, double __y)
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(long double __x, long double __y)
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isless(_Tp __x, _Up __y)
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(float __x, float __y)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(double __x, double __y)
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(long double __x, long double __y)
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessequal(_Tp __x, _Up __y)
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 137


 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(float __x, float __y)
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(double __x, double __y)
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(long double __x, long double __y)
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessgreater(_Tp __x, _Up __y)
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(float __x, float __y)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(double __x, double __y)
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(long double __x, long double __y)
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isunordered(_Tp __x, _Up __y)
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 138


 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fpclassify(_Tp __f)
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isfinite(_Tp __f)
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isfinite(__type(__f));
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isinf(_Tp __f)
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isinf(__type(__f));
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnan(_Tp __f)
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isnan(__type(__f));
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnormal(_Tp __f)
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isnormal(__type(__f));
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     signbit(_Tp __f)
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_signbit(__type(__f));
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 139


 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isless(_Tp __f1, _Tp __f2)
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif // C++11
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus >= 201103L
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 140


 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acosh
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acoshf
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acoshl
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinh
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinhf
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinhl
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanh
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanhf
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanhl
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrt
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrtf
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrtl
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysign
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysignf
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysignl
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erf
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erff
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfl
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfc
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfcf
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfcl
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2f
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2l
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1f
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1l
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdim
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdimf
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdiml
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fma
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaf
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmal
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmax
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaxf
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaxl
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmin
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fminf
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fminl
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypot
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypotf
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypotl
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogb
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogbf
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogbl
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgamma
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgammaf
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgammal
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrint
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrintf
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrintl
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llround
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llroundf
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llroundl
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1p
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 141


1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1pf
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1pl
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2f
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2l
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logb
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logbf
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logbl
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrint
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrintf
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrintl
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lround
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lroundf
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lroundl
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nan
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nanf
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nanl
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyint
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyintf
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyintl
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafter
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafterf
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafterl
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttoward
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttowardf
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttowardl
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainder
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainderf
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainderl
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquo
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquof
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquol
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rint
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rintf
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rintl
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef round
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef roundf
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef roundl
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbln
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalblnf
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalblnl
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbn
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbnf
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbnl
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgamma
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgammaf
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgammal
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef trunc
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef truncf
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef truncl
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // types
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::double_t;
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::float_t;
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // functions
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acosh;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 142


1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acoshf;
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acoshl;
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinh;
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinhf;
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinhl;
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanh;
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanhf;
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanhl;
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrt;
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrtf;
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrtl;
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysign;
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysignf;
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysignl;
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erf;
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erff;
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfl;
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfc;
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfcf;
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfcl;
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2;
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2f;
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2l;
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1;
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1f;
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1l;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdim;
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdimf;
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdiml;
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fma;
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaf;
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmal;
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmax;
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaxf;
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaxl;
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmin;
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fminf;
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fminl;
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypot;
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypotf;
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypotl;
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogb;
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogbf;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 143


1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogbl;
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgamma;
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgammaf;
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgammal;
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrint;
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrintf;
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrintl;
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llround;
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llroundf;
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llroundl;
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1p;
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1pf;
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1pl;
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2;
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2f;
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2l;
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logb;
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logbf;
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logbl;
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrint;
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrintf;
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrintl;
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lround;
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lroundf;
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lroundl;
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nan;
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nanf;
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nanl;
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyint;
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyintf;
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyintl;
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafter;
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafterf;
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafterl;
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttoward;
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttowardf;
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttowardl;
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainder;
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainderf;
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainderl;
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquo;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 144


1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquof;
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquol;
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rint;
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rintf;
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rintl;
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::round;
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::roundf;
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::roundl;
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbln;
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalblnf;
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalblnl;
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbn;
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbnf;
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbnl;
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgamma;
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgammaf;
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgammal;
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::trunc;
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::truncf;
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::truncl;
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   /// Additional overloads.
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acosh(float __x)
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acoshf(__x); }
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acosh(long double __x)
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acoshl(__x); }
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acosh(_Tp __x)
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acosh(__x); }
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asinh(float __x)
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinhf(__x); }
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asinh(long double __x)
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinhl(__x); }
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 145


1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asinh(_Tp __x)
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asinh(__x); }
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atanh(float __x)
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanhf(__x); }
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atanh(long double __x)
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanhl(__x); }
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atanh(_Tp __x)
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atanh(__x); }
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cbrt(float __x)
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cbrtf(__x); }
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cbrt(long double __x)
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cbrtl(__x); }
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cbrt(_Tp __x)
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cbrt(__x); }
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   copysign(float __x, float __y)
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_copysignf(__x, __y); }
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   copysign(long double __x, long double __y)
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_copysignl(__x, __y); }
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     copysign(_Tp __x, _Up __y)
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 146


1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return copysign(__type(__x), __type(__y));
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erf(float __x)
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erff(__x); }
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erf(long double __x)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfl(__x); }
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     erf(_Tp __x)
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_erf(__x); }
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erfc(float __x)
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfcf(__x); }
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erfc(long double __x)
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfcl(__x); }
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     erfc(_Tp __x)
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_erfc(__x); }
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp2(float __x)
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_exp2f(__x); }
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp2(long double __x)
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_exp2l(__x); }
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp2(_Tp __x)
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 147


1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp2(__x); }
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   expm1(float __x)
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expm1f(__x); }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   expm1(long double __x)
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expm1l(__x); }
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     expm1(_Tp __x)
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_expm1(__x); }
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fdim(float __x, float __y)
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fdimf(__x, __y); }
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fdim(long double __x, long double __y)
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fdiml(__x, __y); }
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fdim(_Tp __x, _Up __y)
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fdim(__type(__x), __type(__y));
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fma(float __x, float __y, float __z)
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fma(long double __x, long double __y, long double __z)
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 148


1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmax(float __x, float __y)
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmax(long double __x, long double __y)
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmax(_Tp __x, _Up __y)
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmax(__type(__x), __type(__y));
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmin(float __x, float __y)
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fminf(__x, __y); }
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmin(long double __x, long double __y)
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fminl(__x, __y); }
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmin(_Tp __x, _Up __y)
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmin(__type(__x), __type(__y));
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   hypot(float __x, float __y)
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_hypotf(__x, __y); }
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   hypot(long double __x, long double __y)
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_hypotl(__x, __y); }
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 149


1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     hypot(_Tp __x, _Up __y)
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return hypot(__type(__x), __type(__y));
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ilogb(float __x)
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ilogbf(__x); }
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ilogb(long double __x)
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ilogbl(__x); }
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     int>::__type
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ilogb(_Tp __x)
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ilogb(__x); }
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lgamma(float __x)
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lgammaf(__x); }
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lgamma(long double __x)
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lgammal(__x); }
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     lgamma(_Tp __x)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_lgamma(__x); }
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llrint(float __x)
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llrintf(__x); }
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llrint(long double __x)
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llrintl(__x); }
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 150


1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long long>::__type
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     llrint(_Tp __x)
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_llrint(__x); }
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llround(float __x)
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llroundf(__x); }
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llround(long double __x)
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llroundl(__x); }
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long long>::__type
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     llround(_Tp __x)
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_llround(__x); }
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log1p(float __x)
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log1pf(__x); }
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log1p(long double __x)
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log1pl(__x); }
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log1p(_Tp __x)
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log1p(__x); }
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 568.
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log2(float __x)
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log2f(__x); }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log2(long double __x)
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log2l(__x); }
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log2(_Tp __x)
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 151


1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log2(__x); }
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   logb(float __x)
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logbf(__x); }
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   logb(long double __x)
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logbl(__x); }
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     logb(_Tp __x)
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_logb(__x); }
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lrint(float __x)
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lrintf(__x); }
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lrint(long double __x)
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lrintl(__x); }
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long>::__type
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     lrint(_Tp __x)
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_lrint(__x); }
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lround(float __x)
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lroundf(__x); }
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lround(long double __x)
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lroundl(__x); }
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long>::__type
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     lround(_Tp __x)
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_lround(__x); }
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 152


1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nearbyint(float __x)
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nearbyintf(__x); }
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nearbyint(long double __x)
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nearbyintl(__x); }
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     nearbyint(_Tp __x)
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_nearbyint(__x); }
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nextafter(float __x, float __y)
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nextafter(long double __x, long double __y)
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     nextafter(_Tp __x, _Up __y)
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return nextafter(__type(__x), __type(__y));
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nexttoward(float __x, long double __y)
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nexttoward(long double __x, long double __y)
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     nexttoward(_Tp __x, long double __y)
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 153


1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   remainder(float __x, float __y)
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_remainderf(__x, __y); }
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   remainder(long double __x, long double __y)
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_remainderl(__x, __y); }
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     remainder(_Tp __x, _Up __y)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return remainder(__type(__x), __type(__y));
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   remquo(float __x, float __y, int* __pquo)
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   rint(float __x)
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_rintf(__x); }
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   rint(long double __x)
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_rintl(__x); }
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     rint(_Tp __x)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_rint(__x); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 154


1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   round(float __x)
 1758              		.loc 25 1756 3 is_stmt 1 view .LVU407
 1759              	.LBB886:
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_roundf(__x); }
 1760              		.loc 25 1757 5 view .LVU408
 1761              		.loc 25 1757 28 is_stmt 0 view .LVU409
 1762 0012 B8FE400A 		vrinta.f32	s0, s0
 1763              	.LVL87:
 1764              		.loc 25 1757 28 view .LVU410
 1765              	.LBE886:
 1766              	.LBE885:
 1767              		.loc 15 137 18 view .LVU411
 1768 0016 FDEEC07A 		vcvt.s32.f32	s15, s0
 1769              	.LBB887:
 1770              	.LBB888:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1771              		.loc 14 69 46 view .LVU412
 1772 001a 4FF07C53 		mov	r3, #1056964608
 1773              	.LBE888:
 1774              	.LBE887:
 1775              	.LBB891:
 1776              	.LBB875:
 1777              	.LBB873:
 1778              		.loc 7 70 54 view .LVU413
 1779 001e 95F8C020 		ldrb	r2, [r5, #192]	@ zero_extendqisi2
 1780              	.LBE873:
 1781              	.LBE875:
 1782              	.LBE891:
 1783              	.LBB892:
 1784              	.LBB889:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1785              		.loc 14 69 46 view .LVU414
 1786 0022 6360     		str	r3, [r4, #4]	@ float
 1787              	.LBE889:
 1788              	.LBE892:
 1789              		.loc 15 137 18 view .LVU415
 1790 0024 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1791              		.loc 15 137 17 view .LVU416
 1792 0028 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1793              	.LVL88:
 1794              	.LBB893:
 1795              	.LBI867:
  72:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 1796              		.loc 14 72 17 is_stmt 1 view .LVU417
 1797              	.LBB869:
 1798              		.loc 14 74 9 view .LVU418
 1799              		.loc 14 74 19 is_stmt 0 view .LVU419
 1800 002c 082B     		cmp	r3, #8
 1801 002e 28BF     		it	cs
 1802 0030 0023     		movcs	r3, #0
 1803              	.LVL89:
 1804              		.loc 14 74 19 view .LVU420
 1805 0032 2370     		strb	r3, [r4]
 1806              	.LVL90:
 1807              		.loc 14 74 19 view .LVU421
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 155


 1808              	.LBE869:
 1809              	.LBE893:
 138:ExampleProject.cpp **** 	osc.SetAmp(0.5);
 1810              		.loc 15 138 2 is_stmt 1 view .LVU422
 1811              	.LBB894:
 1812              	.LBI887:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1813              		.loc 14 69 17 view .LVU423
 1814              	.LBB890:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1815              		.loc 14 69 41 view .LVU424
  69:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1816              		.loc 14 69 41 is_stmt 0 view .LVU425
 1817              	.LBE890:
 1818              	.LBE894:
 139:ExampleProject.cpp **** 	
 140:ExampleProject.cpp **** 	 
 141:ExampleProject.cpp **** 
 142:ExampleProject.cpp **** 	if(hw.button2.RisingEdge())
 1819              		.loc 15 142 2 is_stmt 1 view .LVU426
 1820              	.LBB895:
 1821              	.LBB876:
 1822              	.LBI871:
 1823              		.loc 7 70 17 view .LVU427
 1824              	.LBB874:
 1825              		.loc 7 70 38 view .LVU428
 1826              		.loc 7 70 54 is_stmt 0 view .LVU429
 1827 0034 1AB1     		cbz	r2, .L96
 1828              	.LVL91:
 1829              		.loc 7 70 54 view .LVU430
 1830              	.LBE874:
 1831              	.LBE876:
 1832              		.loc 15 142 2 view .LVU431
 1833 0036 95F8C630 		ldrb	r3, [r5, #198]	@ zero_extendqisi2
 1834 003a 7F2B     		cmp	r3, #127
 1835 003c 33D0     		beq	.L94
 1836              	.L96:
 1837 003e 2F4E     		ldr	r6, .L98+20
 1838              	.L86:
 1839              	.LBE895:
 143:ExampleProject.cpp **** 	{
 144:ExampleProject.cpp **** 		int random_integer = uni(rng);
 145:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 146:ExampleProject.cpp **** 		osc_freq = osc_freq * pow(2,random_float);
 147:ExampleProject.cpp **** 	}
 148:ExampleProject.cpp ****     
 149:ExampleProject.cpp **** 	if(hw.button1.RisingEdge())
 1840              		.loc 15 149 2 is_stmt 1 view .LVU432
 1841              	.LVL92:
 1842              	.LBB896:
 1843              	.LBB897:
 1844              	.LBI897:
 1845              		.loc 7 70 17 view .LVU433
 1846              	.LBB898:
 1847              		.loc 7 70 38 view .LVU434
 1848              		.loc 7 70 54 is_stmt 0 view .LVU435
 1849 0040 95F8B030 		ldrb	r3, [r5, #176]	@ zero_extendqisi2
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 156


 1850 0044 1BB1     		cbz	r3, .L89
 1851              	.LVL93:
 1852              		.loc 7 70 54 view .LVU436
 1853              	.LBE898:
 1854              	.LBE897:
 1855              		.loc 15 149 2 view .LVU437
 1856 0046 95F8B630 		ldrb	r3, [r5, #182]	@ zero_extendqisi2
 1857 004a 7F2B     		cmp	r3, #127
 1858 004c 0CD0     		beq	.L97
 1859              	.L89:
 1860              	.LBE896:
 150:ExampleProject.cpp **** 	{
 151:ExampleProject.cpp **** 		int random_integer = uni(rng);
 152:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 153:ExampleProject.cpp **** 		osc_freq = osc_freq / pow(2,random_float);
 154:ExampleProject.cpp **** 	}
 155:ExampleProject.cpp **** 	osc.SetFreq(osc_freq);
 1861              		.loc 15 155 13 view .LVU438
 1862 004e 96ED000A 		vldr.32	s0, [r6]
 1863              	.L88:
 1864              		.loc 15 155 2 is_stmt 1 view .LVU439
 1865              	.LVL94:
 1866              	.LBB907:
 1867              	.LBI907:
  60:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 1868              		.loc 14 60 17 view .LVU440
 1869              	.LBB908:
  62:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1870              		.loc 14 62 9 view .LVU441
  63:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1871              		.loc 14 63 34 is_stmt 0 view .LVU442
 1872 0052 2848     		ldr	r0, .L98+12
  62:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1873              		.loc 14 62 20 view .LVU443
 1874 0054 84ED020A 		vstr.32	s0, [r4, #8]
  63:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1875              		.loc 14 63 9 is_stmt 1 view .LVU444
  63:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1876              		.loc 14 63 34 is_stmt 0 view .LVU445
 1877 0058 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1878              	.LVL95:
  63:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1879              		.loc 14 63 20 view .LVU446
 1880 005c 84ED080A 		vstr.32	s0, [r4, #32]
 1881              	.LVL96:
  63:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1882              		.loc 14 63 20 view .LVU447
 1883              	.LBE908:
 1884              	.LBE907:
 156:ExampleProject.cpp ****         
 157:ExampleProject.cpp **** 
 158:ExampleProject.cpp **** }...
 1885              		.loc 15 158 1 view .LVU448
 1886 0060 02B0     		add	sp, sp, #8
 1887              		.cfi_remember_state
 1888              		.cfi_def_cfa_offset 24
 1889              		@ sp needed
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 157


 1890 0062 BDEC028B 		vldm	sp!, {d8}
 1891              		.cfi_restore 80
 1892              		.cfi_restore 81
 1893              		.cfi_def_cfa_offset 16
 1894 0066 70BD     		pop	{r4, r5, r6, pc}
 1895              	.L97:
 1896              		.cfi_restore_state
 1897              	.LBB909:
 1898              	.LBB899:
 151:ExampleProject.cpp **** 		int random_integer = uni(rng);
 1899              		.loc 15 151 3 is_stmt 1 view .LVU449
 1900              	.LVL97:
 1901              	.LBB900:
 1902              	.LBI900:
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****         { return this->operator()(__urng, _M_param); }
 1903              		.loc 24 188 2 view .LVU450
 1904              	.LBB901:
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 1905              		.loc 24 189 34 is_stmt 0 view .LVU451
 1906 0068 2549     		ldr	r1, .L98+24
 1907 006a 2648     		ldr	r0, .L98+28
 1908 006c FFF7FEFF 		bl	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj25674
 1909              	.LVL98:
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 1910              		.loc 24 189 34 view .LVU452
 1911              	.LBE901:
 1912              	.LBE900:
 152:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 1913              		.loc 15 152 3 is_stmt 1 view .LVU453
 153:ExampleProject.cpp **** 		osc_freq = osc_freq / pow(2,random_float);
 1914              		.loc 15 153 3 view .LVU454
 152:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 1915              		.loc 15 152 39 is_stmt 0 view .LVU455
 1916 0070 06EE900A 		vmov	s13, r0	@ int
 153:ExampleProject.cpp **** 		osc_freq = osc_freq / pow(2,random_float);
 1917              		.loc 15 153 14 view .LVU456
 1918 0074 96ED008A 		vldr.32	s16, [r6]
 1919              	.LBB902:
 1920              	.LBB903:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 1921              		.loc 25 418 17 view .LVU457
 1922 0078 B0EE000B 		vmov.f64	d0, #2.0e+0
 1923              	.LBE903:
 1924              	.LBE902:
 152:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 1925              		.loc 15 152 39 view .LVU458
 1926 007c B8EEE61B 		vcvt.f64.s32	d1, s13
 153:ExampleProject.cpp **** 		osc_freq = osc_freq / pow(2,random_float);
 1927              		.loc 15 153 14 view .LVU459
 1928 0080 B7EEC88A 		vcvt.f64.f32	d8, s16
 1929              	.LVL99:
 1930              	.LBB905:
 1931              	.LBI902:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 1932              		.loc 25 415 5 is_stmt 1 view .LVU460
 1933              	.LBE905:
 152:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 158


 1934              		.loc 15 152 39 is_stmt 0 view .LVU461
 1935 0084 9FED187B 		vldr.64	d7, .L98
 1936 0088 21EE071B 		vmul.f64	d1, d1, d7
 152:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 1937              		.loc 15 152 9 view .LVU462
 1938 008c B7EEC11B 		vcvt.f32.f64	s2, d1
 1939              	.LVL100:
 1940              	.LBB906:
 1941              	.LBB904:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 1942              		.loc 25 418 17 view .LVU463
 1943 0090 B7EEC11A 		vcvt.f64.f32	d1, s2
 1944              	.LVL101:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 1945              		.loc 25 418 17 view .LVU464
 1946 0094 FFF7FEFF 		bl	pow
 1947              	.LVL102:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 1948              		.loc 25 418 17 view .LVU465
 1949              	.LBE904:
 1950              	.LBE906:
 153:ExampleProject.cpp **** 		osc_freq = osc_freq / pow(2,random_float);
 1951              		.loc 15 153 23 view .LVU466
 1952 0098 88EE007B 		vdiv.f64	d7, d8, d0
 1953 009c B7EEC70B 		vcvt.f32.f64	s0, d7
 153:ExampleProject.cpp **** 		osc_freq = osc_freq / pow(2,random_float);
 1954              		.loc 15 153 12 view .LVU467
 1955 00a0 86ED000A 		vstr.32	s0, [r6]
 1956              	.LBE899:
 1957 00a4 D5E7     		b	.L88
 1958              	.L94:
 153:ExampleProject.cpp **** 		osc_freq = osc_freq / pow(2,random_float);
 1959              		.loc 15 153 12 view .LVU468
 1960              	.LBE909:
 1961              	.LBB910:
 1962              	.LBB877:
 144:ExampleProject.cpp **** 		int random_integer = uni(rng);
 1963              		.loc 15 144 3 is_stmt 1 view .LVU469
 1964              	.LVL103:
 1965              	.LBB878:
 1966              	.LBI878:
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h ****         { return this->operator()(__urng, _M_param); }
 1967              		.loc 24 188 2 view .LVU470
 1968              	.LBB879:
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 1969              		.loc 24 189 34 is_stmt 0 view .LVU471
 1970 00a6 1649     		ldr	r1, .L98+24
 1971 00a8 1648     		ldr	r0, .L98+28
 1972 00aa FFF7FEFF 		bl	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj25674
 1973              	.LVL104:
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 
 1974              		.loc 24 189 34 view .LVU472
 1975              	.LBE879:
 1976              	.LBE878:
 145:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 1977              		.loc 15 145 3 is_stmt 1 view .LVU473
 146:ExampleProject.cpp **** 		osc_freq = osc_freq * pow(2,random_float);
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 159


 1978              		.loc 15 146 3 view .LVU474
 145:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 1979              		.loc 15 145 39 is_stmt 0 view .LVU475
 1980 00ae 06EE900A 		vmov	s13, r0	@ int
 146:ExampleProject.cpp **** 		osc_freq = osc_freq * pow(2,random_float);
 1981              		.loc 15 146 14 view .LVU476
 1982 00b2 124E     		ldr	r6, .L98+20
 1983              	.LBB880:
 1984              	.LBB881:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 1985              		.loc 25 418 17 view .LVU477
 1986 00b4 B0EE000B 		vmov.f64	d0, #2.0e+0
 1987              	.LBE881:
 1988              	.LBE880:
 145:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 1989              		.loc 15 145 39 view .LVU478
 1990 00b8 B8EEE61B 		vcvt.f64.s32	d1, s13
 146:ExampleProject.cpp **** 		osc_freq = osc_freq * pow(2,random_float);
 1991              		.loc 15 146 14 view .LVU479
 1992 00bc 96ED008A 		vldr.32	s16, [r6]
 145:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 1993              		.loc 15 145 39 view .LVU480
 1994 00c0 9FED097B 		vldr.64	d7, .L98
 146:ExampleProject.cpp **** 		osc_freq = osc_freq * pow(2,random_float);
 1995              		.loc 15 146 14 view .LVU481
 1996 00c4 B7EEC88A 		vcvt.f64.f32	d8, s16
 1997              	.LVL105:
 1998              	.LBB883:
 1999              	.LBI880:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 2000              		.loc 25 415 5 is_stmt 1 view .LVU482
 2001              	.LBE883:
 145:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 2002              		.loc 15 145 39 is_stmt 0 view .LVU483
 2003 00c8 21EE071B 		vmul.f64	d1, d1, d7
 145:ExampleProject.cpp **** 		float random_float = random_integer * 0.08333;
 2004              		.loc 15 145 9 view .LVU484
 2005 00cc B7EEC11B 		vcvt.f32.f64	s2, d1
 2006              	.LVL106:
 2007              	.LBB884:
 2008              	.LBB882:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 2009              		.loc 25 418 17 view .LVU485
 2010 00d0 B7EEC11A 		vcvt.f64.f32	d1, s2
 2011              	.LVL107:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 2012              		.loc 25 418 17 view .LVU486
 2013 00d4 FFF7FEFF 		bl	pow
 2014              	.LVL108:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 2015              		.loc 25 418 17 view .LVU487
 2016              	.LBE882:
 2017              	.LBE884:
 146:ExampleProject.cpp **** 		osc_freq = osc_freq * pow(2,random_float);
 2018              		.loc 15 146 23 view .LVU488
 2019 00d8 28EE000B 		vmul.f64	d0, d8, d0
 2020 00dc B7EEC00B 		vcvt.f32.f64	s0, d0
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 160


 2021 00e0 86ED000A 		vstr.32	s0, [r6]
 2022              	.LBE877:
 2023 00e4 ACE7     		b	.L86
 2024              	.L99:
 2025 00e6 00BF     		.align	3
 2026              	.L98:
 2027 00e8 F792C668 		.word	1757844215
 2028 00ec 1D55B53F 		.word	1068848413
 2029 00f0 00000000 		.word	.LANCHOR0
 2030 00f4 00000000 		.word	.LANCHOR1
 2031 00f8 00000000 		.word	hw
 2032 00fc 00000000 		.word	.LANCHOR9
 2033 0100 00000000 		.word	.LANCHOR7
 2034 0104 00000000 		.word	.LANCHOR8
 2035              	.LBE910:
 2036              		.cfi_endproc
 2037              	.LFE4803:
 2039              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 2040              		.align	1
 2041              		.p2align 2,,3
 2042              		.global	_Z13AudioCallbackPKPKfPPfj
 2043              		.syntax unified
 2044              		.thumb
 2045              		.thumb_func
 2046              		.fpu fpv5-d16
 2048              	_Z13AudioCallbackPKPKfPPfj:
 2049              	.LVL109:
 2050              	.LFB4797:
  54:ExampleProject.cpp **** {
 2051              		.loc 15 54 1 is_stmt 1 view -0
 2052              		.cfi_startproc
 2053              		@ args = 0, pretend = 0, frame = 0
 2054              		@ frame_needed = 0, uses_anonymous_args = 0
  55:ExampleProject.cpp **** 	UpdateControls();
 2055              		.loc 15 55 2 view .LVU490
 2056              	.LBB918:
 2057              	.LBI918:
 123:ExampleProject.cpp **** void UpdateControls()
 2058              		.loc 15 123 6 view .LVU491
 2059              	.LBB919:
 125:ExampleProject.cpp **** 	hw.ProcessAnalogControls();
 2060              		.loc 15 125 2 view .LVU492
 2061              	.LBE919:
 2062              	.LBE918:
  54:ExampleProject.cpp **** {
 2063              		.loc 15 54 1 is_stmt 0 view .LVU493
 2064 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2065              		.cfi_def_cfa_offset 32
 2066              		.cfi_offset 3, -32
 2067              		.cfi_offset 4, -28
 2068              		.cfi_offset 5, -24
 2069              		.cfi_offset 6, -20
 2070              		.cfi_offset 7, -16
 2071              		.cfi_offset 8, -12
 2072              		.cfi_offset 9, -8
 2073              		.cfi_offset 14, -4
 2074              	.LBB924:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 161


 2075              	.LBB922:
 125:ExampleProject.cpp **** 	hw.ProcessAnalogControls();
 2076              		.loc 15 125 26 view .LVU494
 2077 0004 1A48     		ldr	r0, .L105
 2078              	.LVL110:
 125:ExampleProject.cpp **** 	hw.ProcessAnalogControls();
 2079              		.loc 15 125 26 view .LVU495
 2080              	.LBE922:
 2081              	.LBE924:
  54:ExampleProject.cpp **** {
 2082              		.loc 15 54 1 view .LVU496
 2083 0006 9046     		mov	r8, r2
 2084 0008 0F46     		mov	r7, r1
 2085              	.LBB925:
 2086              	.LBB923:
 125:ExampleProject.cpp **** 	hw.ProcessAnalogControls();
 2087              		.loc 15 125 26 view .LVU497
 2088 000a FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 2089              	.LVL111:
 126:ExampleProject.cpp ****     hw.ProcessDigitalControls();
 2090              		.loc 15 126 5 is_stmt 1 view .LVU498
 126:ExampleProject.cpp ****     hw.ProcessDigitalControls();
 2091              		.loc 15 126 30 is_stmt 0 view .LVU499
 2092 000e 1848     		ldr	r0, .L105
 2093 0010 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 2094              	.LVL112:
 128:ExampleProject.cpp ****     UpdateEncoder();
 2095              		.loc 15 128 5 is_stmt 1 view .LVU500
 128:ExampleProject.cpp ****     UpdateEncoder();
 2096              		.loc 15 128 18 is_stmt 0 view .LVU501
 2097 0014 FFF7FEFF 		bl	_Z13UpdateEncoderv
 2098              	.LVL113:
 129:ExampleProject.cpp ****     UpdateKnobs();
 2099              		.loc 15 129 5 is_stmt 1 view .LVU502
 2100              	.LBB920:
 2101              	.LBI920:
 110:ExampleProject.cpp **** void UpdateKnobs()
 2102              		.loc 15 110 6 view .LVU503
 2103              	.LBB921:
 112:ExampleProject.cpp **** 	color2 = (int)knob2.Process();
 2104              		.loc 15 112 2 view .LVU504
 112:ExampleProject.cpp **** 	color2 = (int)knob2.Process();
 2105              		.loc 15 112 29 is_stmt 0 view .LVU505
 2106 0018 1648     		ldr	r0, .L105+4
 2107 001a FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 2108              	.LVL114:
 112:ExampleProject.cpp **** 	color2 = (int)knob2.Process();
 2109              		.loc 15 112 11 view .LVU506
 2110 001e BDEEC00A 		vcvt.s32.f32	s0, s0
 112:ExampleProject.cpp **** 	color2 = (int)knob2.Process();
 2111              		.loc 15 112 9 view .LVU507
 2112 0022 154B     		ldr	r3, .L105+8
 112:ExampleProject.cpp **** 	color2 = (int)knob2.Process();
 2113              		.loc 15 112 11 view .LVU508
 2114 0024 83ED000A 		vstr.32	s0, [r3]	@ int
 2115              	.LBE921:
 2116              	.LBE920:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 162


 130:ExampleProject.cpp ****     UpdateLeds();
 2117              		.loc 15 130 5 is_stmt 1 view .LVU509
 130:ExampleProject.cpp ****     UpdateLeds();
 2118              		.loc 15 130 15 is_stmt 0 view .LVU510
 2119 0028 FFF7FEFF 		bl	_Z10UpdateLedsv
 2120              	.LVL115:
 2121              	.LBE923:
 2122              	.LBE925:
  57:ExampleProject.cpp **** 	SetOsc();
 2123              		.loc 15 57 2 is_stmt 1 view .LVU511
  57:ExampleProject.cpp **** 	SetOsc();
 2124              		.loc 15 57 8 is_stmt 0 view .LVU512
 2125 002c FFF7FEFF 		bl	_Z6SetOscv
 2126              	.LVL116:
  59:ExampleProject.cpp **** 	hw.ProcessAllControls();
 2127              		.loc 15 59 2 is_stmt 1 view .LVU513
 2128              	.LBB926:
 2129              	.LBI926:
  37:../../libDaisy//src/daisy_pod.h **** 
  38:../../libDaisy//src/daisy_pod.h ****     /** Init related stuff. */
  39:../../libDaisy//src/daisy_pod.h ****     void Init(bool boost = false);
  40:../../libDaisy//src/daisy_pod.h **** 
  41:../../libDaisy//src/daisy_pod.h ****     /** Wait for a bit
  42:../../libDaisy//src/daisy_pod.h ****     \param del Time to wait in ms.
  43:../../libDaisy//src/daisy_pod.h ****     */
  44:../../libDaisy//src/daisy_pod.h ****     void DelayMs(size_t del);
  45:../../libDaisy//src/daisy_pod.h **** 
  46:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  47:../../libDaisy//src/daisy_pod.h ****     \param cb Interleaved callback function
  48:../../libDaisy//src/daisy_pod.h ****     */
  49:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  50:../../libDaisy//src/daisy_pod.h **** 
  51:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  52:../../libDaisy//src/daisy_pod.h ****     \param cb multichannel callback function
  53:../../libDaisy//src/daisy_pod.h ****     */
  54:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  55:../../libDaisy//src/daisy_pod.h **** 
  56:../../libDaisy//src/daisy_pod.h ****     /**
  57:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  58:../../libDaisy//src/daisy_pod.h ****        \param cb New interleaved callback function.
  59:../../libDaisy//src/daisy_pod.h ****     */
  60:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  61:../../libDaisy//src/daisy_pod.h **** 
  62:../../libDaisy//src/daisy_pod.h ****     /**
  63:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  64:../../libDaisy//src/daisy_pod.h ****        \param cb New multichannel callback function.
  65:../../libDaisy//src/daisy_pod.h ****     */
  66:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  67:../../libDaisy//src/daisy_pod.h **** 
  68:../../libDaisy//src/daisy_pod.h ****     /** Stops the audio if it is running. */
  69:../../libDaisy//src/daisy_pod.h ****     void StopAudio();
  70:../../libDaisy//src/daisy_pod.h **** 
  71:../../libDaisy//src/daisy_pod.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  72:../../libDaisy//src/daisy_pod.h ****      ** Audio must be stopped for this to work.
  73:../../libDaisy//src/daisy_pod.h ****      */
  74:../../libDaisy//src/daisy_pod.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  75:../../libDaisy//src/daisy_pod.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 163


  76:../../libDaisy//src/daisy_pod.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  77:../../libDaisy//src/daisy_pod.h ****      */
  78:../../libDaisy//src/daisy_pod.h ****     float AudioSampleRate();
  79:../../libDaisy//src/daisy_pod.h **** 
  80:../../libDaisy//src/daisy_pod.h ****     /** Sets the number of samples processed per channel by the audio callback.
  81:../../libDaisy//src/daisy_pod.h ****      */
  82:../../libDaisy//src/daisy_pod.h ****     void SetAudioBlockSize(size_t blocksize);
  83:../../libDaisy//src/daisy_pod.h **** 
  84:../../libDaisy//src/daisy_pod.h ****     /** Returns the number of samples per channel in a block of audio. */
  85:../../libDaisy//src/daisy_pod.h ****     size_t AudioBlockSize();
  86:../../libDaisy//src/daisy_pod.h **** 
  87:../../libDaisy//src/daisy_pod.h ****     /** Returns the rate in Hz that the Audio callback is called */
  88:../../libDaisy//src/daisy_pod.h ****     float AudioCallbackRate();
  89:../../libDaisy//src/daisy_pod.h **** 
  90:../../libDaisy//src/daisy_pod.h ****     /**
  91:../../libDaisy//src/daisy_pod.h ****        Start analog to digital conversion.
  92:../../libDaisy//src/daisy_pod.h ****      */
  93:../../libDaisy//src/daisy_pod.h ****     void StartAdc();
  94:../../libDaisy//src/daisy_pod.h **** 
  95:../../libDaisy//src/daisy_pod.h ****     /** Stops Transfering data from the ADC */
  96:../../libDaisy//src/daisy_pod.h ****     void StopAdc();
  97:../../libDaisy//src/daisy_pod.h **** 
  98:../../libDaisy//src/daisy_pod.h ****     /** Call at same rate as analog reads for smooth reading.*/
  99:../../libDaisy//src/daisy_pod.h ****     void ProcessAnalogControls();
 100:../../libDaisy//src/daisy_pod.h **** 
 101:../../libDaisy//src/daisy_pod.h ****     /** Process Analog and Digital Controls */
 102:../../libDaisy//src/daisy_pod.h ****     inline void ProcessAllControls()
 2130              		.loc 3 102 17 view .LVU514
 2131              	.LBB927:
 103:../../libDaisy//src/daisy_pod.h ****     {
 104:../../libDaisy//src/daisy_pod.h ****         ProcessAnalogControls();
 2132              		.loc 3 104 9 view .LVU515
 2133              		.loc 3 104 30 is_stmt 0 view .LVU516
 2134 0030 0F48     		ldr	r0, .L105
 2135 0032 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 2136              	.LVL117:
 105:../../libDaisy//src/daisy_pod.h ****         ProcessDigitalControls();
 2137              		.loc 3 105 9 is_stmt 1 view .LVU517
 2138              		.loc 3 105 31 is_stmt 0 view .LVU518
 2139 0036 0E48     		ldr	r0, .L105
 2140 0038 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 2141              	.LVL118:
 2142              		.loc 3 105 31 view .LVU519
 2143              	.LBE927:
 2144              	.LBE926:
  61:ExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
 2145              		.loc 15 61 2 is_stmt 1 view .LVU520
 2146              	.LBB928:
  61:ExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
 2147              		.loc 15 61 23 view .LVU521
 2148 003c B8F1000F 		cmp	r8, #0
 2149 0040 13D0     		beq	.L100
  66:ExampleProject.cpp **** 		out[0][i] = osc.Process();
 2150              		.loc 15 66 8 is_stmt 0 view .LVU522
 2151 0042 3D68     		ldr	r5, [r7]
  61:ExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
 2152              		.loc 15 61 14 view .LVU523
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 164


 2153 0044 0024     		movs	r4, #0
 2154              	.LVL119:
 2155              	.L103:
  66:ExampleProject.cpp **** 		out[0][i] = osc.Process();
 2156              		.loc 15 66 3 is_stmt 1 discriminator 2 view .LVU524
  66:ExampleProject.cpp **** 		out[0][i] = osc.Process();
 2157              		.loc 15 66 26 is_stmt 0 discriminator 2 view .LVU525
 2158 0046 0D48     		ldr	r0, .L105+12
  66:ExampleProject.cpp **** 		out[0][i] = osc.Process();
 2159              		.loc 15 66 11 discriminator 2 view .LVU526
 2160 0048 05EB8409 		add	r9, r5, r4, lsl #2
  66:ExampleProject.cpp **** 		out[0][i] = osc.Process();
 2161              		.loc 15 66 26 discriminator 2 view .LVU527
 2162 004c FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 2163              	.LVL120:
 2164 0050 A600     		lsls	r6, r4, #2
  61:ExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
 2165              		.loc 15 61 2 discriminator 2 view .LVU528
 2166 0052 0134     		adds	r4, r4, #1
 2167              	.LVL121:
  67:ExampleProject.cpp **** 		out[1][i] = out[0][i];
 2168              		.loc 15 67 13 discriminator 2 view .LVU529
 2169 0054 D7E90053 		ldrd	r5, r3, [r7]
  61:ExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
 2170              		.loc 15 61 23 discriminator 2 view .LVU530
 2171 0058 A045     		cmp	r8, r4
  66:ExampleProject.cpp **** 		out[0][i] = osc.Process();
 2172              		.loc 15 66 13 discriminator 2 view .LVU531
 2173 005a 89ED000A 		vstr.32	s0, [r9]
  67:ExampleProject.cpp **** 		out[1][i] = out[0][i];
 2174              		.loc 15 67 3 is_stmt 1 discriminator 2 view .LVU532
  67:ExampleProject.cpp **** 		out[1][i] = out[0][i];
 2175              		.loc 15 67 23 is_stmt 0 discriminator 2 view .LVU533
 2176 005e 05EB0602 		add	r2, r5, r6
  67:ExampleProject.cpp **** 		out[1][i] = out[0][i];
 2177              		.loc 15 67 13 discriminator 2 view .LVU534
 2178 0062 3344     		add	r3, r3, r6
  67:ExampleProject.cpp **** 		out[1][i] = out[0][i];
 2179              		.loc 15 67 23 discriminator 2 view .LVU535
 2180 0064 1168     		ldr	r1, [r2]	@ float
  67:ExampleProject.cpp **** 		out[1][i] = out[0][i];
 2181              		.loc 15 67 13 discriminator 2 view .LVU536
 2182 0066 1960     		str	r1, [r3]	@ float
  61:ExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
 2183              		.loc 15 61 2 is_stmt 1 discriminator 2 view .LVU537
 2184              	.LVL122:
  61:ExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
 2185              		.loc 15 61 23 discriminator 2 view .LVU538
 2186 0068 EDD1     		bne	.L103
 2187              	.LVL123:
 2188              	.L100:
  61:ExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
 2189              		.loc 15 61 23 is_stmt 0 discriminator 2 view .LVU539
 2190              	.LBE928:
  70:ExampleProject.cpp **** }
 2191              		.loc 15 70 1 view .LVU540
 2192 006a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 165


 2193              	.LVL124:
 2194              	.L106:
  70:ExampleProject.cpp **** }
 2195              		.loc 15 70 1 view .LVU541
 2196 006e 00BF     		.align	2
 2197              	.L105:
 2198 0070 00000000 		.word	hw
 2199 0074 00000000 		.word	.LANCHOR4
 2200 0078 00000000 		.word	.LANCHOR6
 2201 007c 00000000 		.word	.LANCHOR1
 2202              		.cfi_endproc
 2203              	.LFE4797:
 2205              		.section	.text.startup._GLOBAL__sub_I_rd,"ax",%progbits
 2206              		.align	1
 2207              		.p2align 2,,3
 2208              		.syntax unified
 2209              		.thumb
 2210              		.thumb_func
 2211              		.fpu fpv5-d16
 2213              	_GLOBAL__sub_I_rd:
 2214              	.LFB5400:
 2215              		.loc 15 158 1 is_stmt 1 view -0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 0
 2218              		@ frame_needed = 0, uses_anonymous_args = 0
 2219              	.LBB1022:
 2220              	.LBI1022:
 2221              		.loc 15 158 1 view .LVU543
 2222              	.LVL125:
 2223              		.loc 15 158 1 is_stmt 0 view .LVU544
 2224              	.LBE1022:
 2225 0000 70B5     		push	{r4, r5, r6, lr}
 2226              		.cfi_def_cfa_offset 16
 2227              		.cfi_offset 4, -16
 2228              		.cfi_offset 5, -12
 2229              		.cfi_offset 6, -8
 2230              		.cfi_offset 14, -4
 2231              	.LBB1180:
 2232              	.LBB1023:
   9:ExampleProject.cpp **** std::random_device rd;     // Only used once to initialise (seed) engine
 2233              		.loc 15 9 20 view .LVU545
 2234 0002 2C48     		ldr	r0, .L111
 2235              	.LBB1024:
 2236              	.LBB1025:
 2237              	.LBB1026:
 2238              	.LBB1027:
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Shift<_UIntType, __w>::__value>(__sd);
 2239              		.loc 23 327 15 view .LVU546
 2240 0004 2C4D     		ldr	r5, .L111+4
 2241              	.LBE1027:
 2242              	.LBE1026:
 2243              	.LBE1025:
 2244              	.LBE1024:
   9:ExampleProject.cpp **** std::random_device rd;     // Only used once to initialise (seed) engine
 2245              		.loc 15 9 20 view .LVU547
 2246 0006 FFF7FEFF 		bl	_ZNSt13random_deviceC1Ev
 2247              	.LVL126:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 166


 2248              	.LBB1041:
 2249              	.LBI1041:
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     explicit
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     random_device(const std::string& __token) { _M_init(__token); }
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #if defined _GLIBCXX_USE_DEV_RANDOM
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     ~random_device()
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { _M_fini(); }
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #endif
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     static constexpr result_type
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     min()
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return std::numeric_limits<result_type>::min(); }
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     static constexpr result_type
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     max()
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return std::numeric_limits<result_type>::max(); }
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     double
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     entropy() const noexcept
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #ifdef _GLIBCXX_USE_DEV_RANDOM
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       return this->_M_getentropy();
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #else
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       return 0.0;
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #endif
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     }
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     result_type
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator()()
 2250              		.loc 16 1636 5 is_stmt 1 view .LVU548
 2251              	.LBB1042:
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return this->_M_getval(); }
 2252              		.loc 16 1637 7 view .LVU549
 2253              		.loc 16 1637 29 is_stmt 0 view .LVU550
 2254 000a 2A48     		ldr	r0, .L111
 2255 000c FFF7FEFF 		bl	_ZNSt13random_device9_M_getvalEv
 2256              	.LVL127:
 2257              	.LBE1042:
 2258              	.LBE1041:
 2259              	.LBB1043:
 2260              	.LBB1038:
 2261              	.LBB1035:
 2262              	.LBB1032:
 2263              	.LBB1028:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 2264              		.loc 23 330 19 view .LVU551
 2265 0010 0123     		movs	r3, #1
 2266              	.LVL128:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 2267              		.loc 23 330 19 view .LVU552
 2268              	.LBE1028:
 2269              	.LBE1032:
 2270              	.LBE1035:
 2271              	.LBE1038:
 2272              	.LBI1024:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 167


 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__sd); }
 2273              		.loc 16 521 7 is_stmt 1 view .LVU553
 2274              	.LBB1039:
 2275              	.LBB1036:
 2276              	.LBI1026:
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 2277              		.loc 23 323 5 view .LVU554
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 2278              		.loc 23 323 5 is_stmt 0 view .LVU555
 2279 0012 2A46     		mov	r2, r5
 2280              	.LBB1033:
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Shift<_UIntType, __w>::__value>(__sd);
 2281              		.loc 23 327 15 view .LVU556
 2282 0014 2860     		str	r0, [r5]
 2283              	.LVL129:
 2284              	.LBB1031:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 2285              		.loc 23 330 32 is_stmt 1 view .LVU557
 2286              	.L108:
 2287              	.LBB1029:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x *= __f;
 2288              		.loc 23 333 8 is_stmt 0 view .LVU558
 2289 0016 80EA9070 		eor	r0, r0, r0, lsr #30
 2290              	.LVL130:
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x += __detail::__mod<_UIntType, __n>(__i);
 2291              		.loc 23 334 8 view .LVU559
 2292 001a 2849     		ldr	r1, .L111+8
 2293              	.LVL131:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 2294              		.loc 23 335 8 view .LVU560
 2295 001c 01FB0030 		mla	r0, r1, r0, r3
 2296              	.LVL132:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 2297              		.loc 23 335 8 view .LVU561
 2298              	.LBE1029:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 2299              		.loc 23 330 7 view .LVU562
 2300 0020 0133     		adds	r3, r3, #1
 2301              	.LVL133:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 2302              		.loc 23 330 32 view .LVU563
 2303 0022 B3F51C7F 		cmp	r3, #624
 2304              	.LBB1030:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__x);
 2305              		.loc 23 336 14 view .LVU564
 2306 0026 42F8040F 		str	r0, [r2, #4]!
 2307              	.LBE1030:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 2308              		.loc 23 330 7 is_stmt 1 view .LVU565
 2309              	.LVL134:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 2310              		.loc 23 330 32 view .LVU566
 2311 002a F4D1     		bne	.L108
 2312              	.LBE1031:
 2313              	.LBE1033:
 2314              	.LBE1036:
 2315              	.LBE1039:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 168


 2316              	.LBE1043:
 2317              	.LBB1044:
 2318              	.LBB1045:
 2319              	.LBB1046:
 2320              	.LBB1047:
 2321              	.LBB1048:
 2322              	.LBB1049:
 2323              	.LBB1050:
 2324              		.file 26 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 169


  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 170


 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 171


 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 2325              		.loc 26 166 34 is_stmt 0 view .LVU567
 2326 002c 2448     		ldr	r0, .L111+12
 2327              	.LVL135:
 2328              		.loc 26 166 34 view .LVU568
 2329              	.LBE1050:
 2330              	.LBE1049:
 2331              	.LBE1048:
 2332              	.LBE1047:
 2333              	.LBE1046:
 2334              	.LBE1045:
 2335              	.LBE1044:
 2336              	.LBB1147:
 2337              	.LBB1148:
 2338              	.LBB1149:
 2339              	.LBB1150:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{
 2340              		.loc 24 92 23 view .LVU569
 2341 002e 0121     		movs	r1, #1
 2342 0030 244E     		ldr	r6, .L111+16
 2343              	.LBE1150:
 2344              	.LBE1149:
 2345              	.LBE1148:
 2346              	.LBE1147:
 2347              	.LBB1161:
 2348              	.LBB1141:
 2349              	.LBB1072:
 2350              	.LBB1069:
 2351              	.LBB1055:
 2352              	.LBB1053:
 2353              	.LBB1051:
 2354              		.loc 26 166 34 view .LVU570
 2355 0032 0024     		movs	r4, #0
 2356              	.LBE1051:
 2357              	.LBE1053:
 2358              	.LBE1055:
 2359              	.LBE1069:
 2360              	.LBE1072:
 2361              	.LBB1073:
 2362              	.LBB1074:
 2363              	.LBB1075:
 2364              	.LBB1076:
 2365              	.LBB1077:
 2366              	.LBB1078:
 2367              	.LBB1079:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2368              		.loc 4 37 20 view .LVU571
 2369 0034 244A     		ldr	r2, .L111+20
 2370              	.LVL136:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2371              		.loc 4 37 20 view .LVU572
 2372              	.LBE1079:
 2373              	.LBE1078:
 2374              	.LBE1077:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 172


 2375              	.LBE1076:
 2376              	.LBE1075:
 2377              	.LBE1074:
 2378              	.LBE1073:
 2379              	.LBE1141:
 2380              	.LBE1161:
 2381              	.LBB1162:
 2382              	.LBB1040:
 2383              	.LBB1037:
 2384              	.LBB1034:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 2385              		.loc 23 339 12 view .LVU573
 2386 0036 C5F8C039 		str	r3, [r5, #2496]
 2387              	.LVL137:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 2388              		.loc 23 339 12 view .LVU574
 2389              	.LBE1034:
 2390              	.LBE1037:
 2391              	.LBE1040:
 2392              	.LBE1162:
 2393              	.LBB1163:
 2394              	.LBI1147:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 			       _IntType __b = numeric_limits<_IntType>::max())
 2395              		.loc 24 128 7 is_stmt 1 view .LVU575
 2396              	.LBB1157:
 2397              	.LBI1148:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 		   _IntType __b = numeric_limits<_IntType>::max())
 2398              		.loc 24 90 2 view .LVU576
 2399              	.LBE1157:
 2400              	.LBE1163:
 2401              	.LBB1164:
 2402              	.LBB1142:
 2403              	.LBB1117:
 2404              	.LBB1112:
 2405              	.LBB1107:
 2406              	.LBB1092:
 2407              	.LBB1088:
 2408              	.LBB1084:
 2409              	.LBB1080:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2410              		.loc 4 36 20 is_stmt 0 view .LVU577
 2411 003a 00F51043 		add	r3, r0, #36864
 2412              	.LBE1080:
 2413              	.LBE1084:
 2414              	.LBE1088:
 2415              	.LBE1092:
 2416              	.LBE1107:
 2417              	.LBE1112:
 2418              	.LBE1117:
 2419              	.LBE1142:
 2420              	.LBE1164:
 2421              	.LBB1165:
 2422              	.LBB1158:
 2423              	.LBB1154:
 2424              	.LBB1151:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{
 2425              		.loc 24 92 23 view .LVU578
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 173


 2426 003e 3160     		str	r1, [r6]
 2427              	.LBE1151:
 2428              	.LBE1154:
 2429              	.LBE1158:
 2430              	.LBE1165:
 2431              	.LBB1166:
 2432              	.LBB1143:
 2433              	.LBB1118:
 2434              	.LBB1113:
 2435              	.LBB1108:
 2436              	.LBB1093:
 2437              	.LBB1089:
 2438              	.LBB1085:
 2439              	.LBB1081:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2440              		.loc 4 37 20 view .LVU579
 2441 0040 1188     		ldrh	r1, [r2]
  38:../../libDaisy//src/hid/midi.h ****         }
 2442              		.loc 4 38 20 view .LVU580
 2443 0042 9288     		ldrh	r2, [r2, #4]
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2444              		.loc 4 36 20 view .LVU581
 2445 0044 C3F82442 		str	r4, [r3, #548]
  38:../../libDaisy//src/hid/midi.h ****         }
 2446              		.loc 4 38 20 view .LVU582
 2447 0048 A3F82A22 		strh	r2, [r3, #554]	@ movhi
 2448              	.LBE1081:
 2449              	.LBE1085:
 2450              	.LBE1089:
 2451              	.LBE1093:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2452              		.loc 4 84 19 view .LVU583
 2453 004c 1F4A     		ldr	r2, .L111+24
 2454              	.LBB1094:
 2455              	.LBB1095:
 2456              	.LBB1096:
 2457              	.LBB1097:
 2458              		.file 27 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 174


  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
  62:../../libDaisy//src/per/uart.h ****             TX_RX,
  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 175


  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 2459              		.loc 27 97 35 view .LVU584
 2460 004e C3F82C42 		str	r4, [r3, #556]
 2461              	.LBE1097:
 2462              	.LBE1096:
 2463              	.LBE1095:
 2464              	.LBE1094:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2465              		.loc 4 84 19 view .LVU585
 2466 0052 C3F83022 		str	r2, [r3, #560]
 2467 0056 4FF60F02 		movw	r2, #63503
 2468              	.LBB1099:
 2469              	.LBB1090:
 2470              	.LBB1086:
 2471              	.LBB1082:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2472              		.loc 4 37 20 view .LVU586
 2473 005a A3F82812 		strh	r1, [r3, #552]	@ movhi
 2474              	.LBE1082:
 2475              	.LBE1086:
 2476              	.LBE1090:
 2477              	.LBE1099:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2478              		.loc 4 84 19 view .LVU587
 2479 005e A3F83422 		strh	r2, [r3, #564]	@ movhi
 2480 0062 0722     		movs	r2, #7
 2481              	.LBE1108:
 2482              	.LBE1113:
 2483              	.LBE1118:
 2484              	.LBE1143:
 2485              	.LBE1166:
  17:ExampleProject.cpp **** DaisyPod hw;
 2486              		.loc 15 17 10 view .LVU588
 2487 0064 1A49     		ldr	r1, .L111+28
 2488              	.LBB1167:
 2489              	.LBB1144:
 2490              	.LBB1119:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 176


 2491              	.LBB1114:
 2492              	.LBB1109:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2493              		.loc 4 84 19 view .LVU589
 2494 0066 83F83622 		strb	r2, [r3, #566]
 2495              	.LBE1109:
 2496              	.LBE1114:
 2497              	.LBE1119:
 2498              	.LBE1144:
 2499              	.LBE1167:
 2500              	.LBB1168:
 2501              	.LBB1159:
 2502              	.LBB1155:
 2503              	.LBB1152:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{
 2504              		.loc 24 92 23 view .LVU590
 2505 006a 0C23     		movs	r3, #12
 2506              	.LBE1152:
 2507              	.LBE1155:
 2508              	.LBE1159:
 2509              	.LBE1168:
  17:ExampleProject.cpp **** DaisyPod hw;
 2510              		.loc 15 17 10 view .LVU591
 2511 006c 194A     		ldr	r2, .L111+32
 2512              	.LBB1169:
 2513              	.LBB1145:
 2514              	.LBB1120:
 2515              	.LBB1070:
 2516              	.LBB1056:
 2517              	.LBB1054:
 2518              	.LBB1052:
 2519              		.loc 26 166 34 view .LVU592
 2520 006e 0460     		str	r4, [r0]
 2521              	.LBE1052:
 2522              	.LBE1054:
 2523              	.LBE1056:
 2524              	.LBB1057:
 2525              	.LBB1058:
 2526              	.LBB1059:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2527              		.loc 13 95 35 view .LVU593
 2528 0070 4461     		str	r4, [r0, #20]
 2529              	.LBE1059:
 2530              	.LBE1058:
 2531              	.LBE1057:
 2532              	.LBB1060:
 2533              	.LBB1061:
 2534              	.LBB1062:
 2535              		.file 28 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 177


   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 178


  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 2536              		.loc 28 84 33 view .LVU594
 2537 0072 0462     		str	r4, [r0, #32]
 2538              	.LBE1062:
 2539              	.LBE1061:
 2540              	.LBE1060:
 2541              	.LBE1070:
 2542              	.LBE1120:
 2543              	.LBB1121:
 2544              	.LBB1115:
 2545              	.LBB1110:
 2546              	.LBB1100:
 2547              	.LBB1101:
 2548              	.LBB1102:
 2549              		.loc 27 97 35 view .LVU595
 2550 0074 C0F87C41 		str	r4, [r0, #380]
 2551              	.LBE1102:
 2552              	.LBE1101:
 2553              	.LBE1100:
 2554              	.LBE1110:
 2555              	.LBE1115:
 2556              	.LBE1121:
 2557              	.LBE1145:
 2558              	.LBE1169:
 2559              	.LBB1170:
 2560              	.LBB1160:
 2561              	.LBB1156:
 2562              	.LBB1153:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{
 2563              		.loc 24 92 23 view .LVU596
 2564 0078 7360     		str	r3, [r6, #4]
 2565              	.LVL138:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\uniform_int_dist.h **** 	{
 2566              		.loc 24 92 23 view .LVU597
 2567              	.LBE1153:
 2568              	.LBE1156:
 2569              	.LBE1160:
 2570              	.LBE1170:
 2571              	.LBB1171:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 179


 2572              	.LBI1044:
  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 2573              		.loc 3 35 5 is_stmt 1 view .LVU598
 2574              	.LBB1146:
 2575              	.LBB1122:
 2576              	.LBI1046:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 2577              		.loc 9 21 5 view .LVU599
 2578              	.LBB1071:
 2579              	.LBB1063:
 2580              	.LBI1048:
 2581              		.loc 26 166 5 view .LVU600
 2582              		.loc 26 166 5 is_stmt 0 view .LVU601
 2583              	.LBE1063:
 2584              	.LBB1064:
 2585              	.LBI1057:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2586              		.loc 13 95 5 is_stmt 1 view .LVU602
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2587              		.loc 13 95 5 is_stmt 0 view .LVU603
 2588              	.LBE1064:
 2589              	.LBB1065:
 2590              	.LBI1065:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2591              		.loc 12 92 5 is_stmt 1 view .LVU604
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2592              		.loc 12 92 5 is_stmt 0 view .LVU605
 2593              	.LBE1065:
 2594              	.LBB1066:
 2595              	.LBI1060:
 2596              		.loc 28 84 5 is_stmt 1 view .LVU606
 2597              		.loc 28 84 5 is_stmt 0 view .LVU607
 2598              	.LBE1066:
 2599              	.LBB1067:
 2600              	.LBI1067:
  40:../../libDaisy//src/hid/usb.h **** 
 2601              		.loc 11 40 5 is_stmt 1 view .LVU608
  40:../../libDaisy//src/hid/usb.h **** 
 2602              		.loc 11 40 5 is_stmt 0 view .LVU609
 2603              	.LBE1067:
 2604              	.LBB1068:
 2605              	.LBI1068:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 2606              		.loc 10 77 5 is_stmt 1 view .LVU610
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 2607              		.loc 10 77 5 is_stmt 0 view .LVU611
 2608              	.LBE1068:
 2609              	.LBE1071:
 2610              	.LBE1122:
 2611              	.LBB1123:
 2612              	.LBI1123:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 2613              		.loc 8 20 5 is_stmt 1 view .LVU612
 2614              	.LBB1124:
 2615              	.LBB1125:
 2616              	.LBI1125:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 180


 2617              		.loc 7 41 5 view .LVU613
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2618              		.loc 7 41 5 is_stmt 0 view .LVU614
 2619              	.LBE1125:
 2620              	.LBE1124:
 2621              	.LBE1123:
 2622              	.LBB1126:
 2623              	.LBI1126:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2624              		.loc 2 21 5 is_stmt 1 view .LVU615
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2625              		.loc 2 21 5 is_stmt 0 view .LVU616
 2626              	.LBE1126:
 2627              	.LBB1127:
 2628              	.LBI1127:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2629              		.loc 2 21 5 is_stmt 1 view .LVU617
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2630              		.loc 2 21 5 is_stmt 0 view .LVU618
 2631              	.LBE1127:
 2632              	.LBB1128:
 2633              	.LBI1128:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2634              		.loc 7 41 5 is_stmt 1 view .LVU619
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2635              		.loc 7 41 5 is_stmt 0 view .LVU620
 2636              	.LBE1128:
 2637              	.LBB1129:
 2638              	.LBI1129:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2639              		.loc 7 41 5 is_stmt 1 view .LVU621
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2640              		.loc 7 41 5 is_stmt 0 view .LVU622
 2641              	.LBE1129:
 2642              	.LBB1130:
 2643              	.LBI1130:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 2644              		.loc 5 17 5 is_stmt 1 view .LVU623
 2645              	.LBB1131:
 2646              	.LBB1132:
 2647              	.LBI1132:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2648              		.loc 6 24 5 view .LVU624
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2649              		.loc 6 24 5 is_stmt 0 view .LVU625
 2650              	.LBE1132:
 2651              	.LBB1133:
 2652              	.LBI1133:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2653              		.loc 6 24 5 is_stmt 1 view .LVU626
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2654              		.loc 6 24 5 is_stmt 0 view .LVU627
 2655              	.LBE1133:
 2656              	.LBB1134:
 2657              	.LBI1134:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2658              		.loc 6 24 5 is_stmt 1 view .LVU628
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 181


  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2659              		.loc 6 24 5 is_stmt 0 view .LVU629
 2660              	.LBE1134:
 2661              	.LBE1131:
 2662              	.LBE1130:
 2663              	.LBB1135:
 2664              	.LBI1135:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 2665              		.loc 5 17 5 is_stmt 1 view .LVU630
 2666              	.LBB1136:
 2667              	.LBB1137:
 2668              	.LBI1137:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2669              		.loc 6 24 5 view .LVU631
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2670              		.loc 6 24 5 is_stmt 0 view .LVU632
 2671              	.LBE1137:
 2672              	.LBB1138:
 2673              	.LBI1138:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2674              		.loc 6 24 5 is_stmt 1 view .LVU633
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2675              		.loc 6 24 5 is_stmt 0 view .LVU634
 2676              	.LBE1138:
 2677              	.LBB1139:
 2678              	.LBI1139:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2679              		.loc 6 24 5 is_stmt 1 view .LVU635
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2680              		.loc 6 24 5 is_stmt 0 view .LVU636
 2681              	.LBE1139:
 2682              	.LBE1136:
 2683              	.LBE1135:
 2684              	.LBB1140:
 2685              	.LBI1073:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2686              		.loc 4 84 5 is_stmt 1 view .LVU637
 2687              	.LBB1116:
 2688              	.LBB1111:
 2689              	.LBB1103:
 2690              	.LBI1100:
 2691              		.loc 27 97 5 view .LVU638
 2692              		.loc 27 97 5 is_stmt 0 view .LVU639
 2693              	.LBE1103:
 2694              	.LBB1104:
 2695              	.LBI1104:
 2696              		.file 29 "../../libDaisy//src/util/ringbuffer.h"
   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libDaisy//src/util/ringbuffer.h ****     @{
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 182


  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 2697              		.loc 29 21 5 is_stmt 1 view .LVU640
 2698              		.loc 29 21 5 is_stmt 0 view .LVU641
 2699              	.LBE1104:
 2700              	.LBB1105:
 2701              	.LBI1076:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 2702              		.loc 4 87 12 is_stmt 1 view .LVU642
 2703              	.LBB1091:
 2704              	.LBI1077:
  34:../../libDaisy//src/hid/midi.h ****         {
 2705              		.loc 4 34 9 view .LVU643
 2706              	.LBB1087:
 2707              	.LBB1083:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2708              		.loc 4 36 13 view .LVU644
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2709              		.loc 4 37 13 view .LVU645
  38:../../libDaisy//src/hid/midi.h ****         }
 2710              		.loc 4 38 13 view .LVU646
  38:../../libDaisy//src/hid/midi.h ****         }
 2711              		.loc 4 38 13 is_stmt 0 view .LVU647
 2712              	.LBE1083:
 2713              	.LBE1087:
 2714              	.LBE1091:
 2715              	.LBE1105:
 2716              	.LBB1106:
 2717              	.LBI1094:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 2718              		.loc 4 25 5 is_stmt 1 view .LVU648
 2719              	.LBB1098:
 2720              	.LBI1095:
 2721              		.loc 27 97 5 view .LVU649
 2722              		.loc 27 97 5 is_stmt 0 view .LVU650
 2723              	.LBE1098:
 2724              	.LBE1106:
 2725              	.LBE1111:
 2726              	.LBE1116:
 2727              	.LBE1140:
 2728              	.LBE1146:
 2729              	.LBE1171:
  17:ExampleProject.cpp **** DaisyPod hw;
 2730              		.loc 15 17 10 view .LVU651
 2731 007a FFF7FEFF 		bl	__aeabi_atexit
 2732              	.LVL139:
 2733              	.LBB1172:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 183


 2734              	.LBI1172:
  15:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 2735              		.loc 14 15 5 is_stmt 1 view .LVU652
  15:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 2736              		.loc 14 15 5 is_stmt 0 view .LVU653
 2737              	.LBE1172:
  18:ExampleProject.cpp **** Oscillator osc;
 2738              		.loc 15 18 12 view .LVU654
 2739 007e 154A     		ldr	r2, .L111+32
 2740 0080 1549     		ldr	r1, .L111+36
 2741 0082 1648     		ldr	r0, .L111+40
 2742 0084 FFF7FEFF 		bl	__aeabi_atexit
 2743              	.LVL140:
 2744              	.LBB1173:
 2745              	.LBI1173:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 2746              		.loc 1 25 5 is_stmt 1 view .LVU655
 2747              	.LBB1174:
 2748              	.LBB1175:
 2749              	.LBI1175:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2750              		.loc 2 21 5 view .LVU656
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2751              		.loc 2 21 5 is_stmt 0 view .LVU657
 2752              	.LBE1175:
 2753              	.LBE1174:
 2754              	.LBE1173:
  19:ExampleProject.cpp **** Parameter knob1;
 2755              		.loc 15 19 11 view .LVU658
 2756 0088 124A     		ldr	r2, .L111+32
 2757 008a 1549     		ldr	r1, .L111+44
 2758 008c 1548     		ldr	r0, .L111+48
 2759 008e FFF7FEFF 		bl	__aeabi_atexit
 2760              	.LVL141:
 2761              	.LBB1176:
 2762              	.LBI1176:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 2763              		.loc 1 25 5 is_stmt 1 view .LVU659
 2764              	.LBB1177:
 2765              	.LBB1178:
 2766              	.LBI1178:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2767              		.loc 2 21 5 view .LVU660
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2768              		.loc 2 21 5 is_stmt 0 view .LVU661
 2769              	.LBE1178:
 2770              	.LBE1177:
 2771              	.LBE1176:
  20:ExampleProject.cpp **** Parameter knob2;
 2772              		.loc 15 20 11 view .LVU662
 2773 0092 104A     		ldr	r2, .L111+32
 2774 0094 1249     		ldr	r1, .L111+44
 2775 0096 1448     		ldr	r0, .L111+52
 2776 0098 FFF7FEFF 		bl	__aeabi_atexit
 2777              	.LVL142:
  22:ExampleProject.cpp **** Color led1Color[4];
 2778              		.loc 15 22 18 is_stmt 1 view .LVU663
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 184


  22:ExampleProject.cpp **** Color led1Color[4];
 2779              		.loc 15 22 7 is_stmt 0 view .LVU664
 2780 009c 0D4A     		ldr	r2, .L111+32
 2781 009e 1349     		ldr	r1, .L111+56
 2782 00a0 2046     		mov	r0, r4
 2783 00a2 FFF7FEFF 		bl	__aeabi_atexit
 2784              	.LVL143:
  23:ExampleProject.cpp **** Color led2Color[101];
 2785              		.loc 15 23 20 is_stmt 1 view .LVU665
  23:ExampleProject.cpp **** Color led2Color[101];
 2786              		.loc 15 23 7 is_stmt 0 view .LVU666
 2787 00a6 2046     		mov	r0, r4
 2788 00a8 0A4A     		ldr	r2, .L111+32
 2789 00aa 1149     		ldr	r1, .L111+60
 2790              	.LBE1023:
 2791              	.LBE1180:
 2792              		.loc 15 158 1 view .LVU667
 2793 00ac BDE87040 		pop	{r4, r5, r6, lr}
 2794              		.cfi_restore 14
 2795              		.cfi_restore 6
 2796              		.cfi_restore 5
 2797              		.cfi_restore 4
 2798              		.cfi_def_cfa_offset 0
 2799              	.LBB1181:
 2800              	.LBB1179:
  23:ExampleProject.cpp **** Color led2Color[101];
 2801              		.loc 15 23 7 view .LVU668
 2802 00b0 FFF7FEBF 		b	__aeabi_atexit
 2803              	.LVL144:
 2804              	.L112:
 2805              		.align	2
 2806              	.L111:
 2807 00b4 00000000 		.word	.LANCHOR10
 2808 00b8 00000000 		.word	.LANCHOR8
 2809 00bc 6589076C 		.word	1812433253
 2810 00c0 00000000 		.word	hw
 2811 00c4 00000000 		.word	.LANCHOR7
 2812 00c8 00000000 		.word	.LANCHOR11
 2813 00cc 80707FF0 		.word	-260083584
 2814 00d0 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 2815 00d4 00000000 		.word	__dso_handle
 2816 00d8 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 2817 00dc 00000000 		.word	.LANCHOR1
 2818 00e0 00000000 		.word	_ZN5daisy9ParameterD1Ev
 2819 00e4 00000000 		.word	.LANCHOR0
 2820 00e8 00000000 		.word	.LANCHOR4
 2821 00ec 00000000 		.word	__tcf_0
 2822 00f0 00000000 		.word	__tcf_1
 2823              	.LBE1179:
 2824              	.LBE1181:
 2825              		.cfi_endproc
 2826              	.LFE5400:
 2828              		.section	.init_array,"aw",%init_array
 2829              		.align	2
 2830 0000 00000000 		.word	_GLOBAL__sub_I_rd(target1)
 2831              		.global	osc_freq
 2832              		.global	color2
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 185


 2833              		.global	color
 2834              		.global	led2Color
 2835              		.global	led1Color
 2836              		.global	knob2
 2837              		.global	knob1
 2838              		.global	osc
 2839              		.global	hw
 2840              		.global	uni
 2841              		.global	rng
 2842              		.global	rd
 2843              		.section	.rodata
 2844              		.align	2
 2845              		.set	.LANCHOR11,. + 0
 2846              	.LC0:
 2847 0000 01       		.byte	1
 2848 0001 07       		.byte	7
 2849 0002 0000     		.space	2
 2850              	.LC1:
 2851 0004 01       		.byte	1
 2852 0005 06       		.byte	6
 2853              		.section	.bss.color,"aw",%nobits
 2854              		.align	2
 2855              		.set	.LANCHOR5,. + 0
 2858              	color:
 2859 0000 00000000 		.space	4
 2860              		.section	.bss.color2,"aw",%nobits
 2861              		.align	2
 2862              		.set	.LANCHOR6,. + 0
 2865              	color2:
 2866 0000 00000000 		.space	4
 2867              		.section	.bss.hw,"aw",%nobits
 2868              		.align	2
 2871              	hw:
 2872 0000 00000000 		.space	37432
 2872      00000000 
 2872      00000000 
 2872      00000000 
 2872      00000000 
 2873              		.section	.bss.knob1,"aw",%nobits
 2874              		.align	2
 2875              		.set	.LANCHOR0,. + 0
 2878              	knob1:
 2879 0000 00000000 		.space	56
 2879      00000000 
 2879      00000000 
 2879      00000000 
 2879      00000000 
 2880              		.section	.bss.knob2,"aw",%nobits
 2881              		.align	2
 2882              		.set	.LANCHOR4,. + 0
 2885              	knob2:
 2886 0000 00000000 		.space	56
 2886      00000000 
 2886      00000000 
 2886      00000000 
 2886      00000000 
 2887              		.section	.bss.led1Color,"aw",%nobits
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 186


 2888              		.align	2
 2889              		.set	.LANCHOR2,. + 0
 2892              	led1Color:
 2893 0000 00000000 		.space	48
 2893      00000000 
 2893      00000000 
 2893      00000000 
 2893      00000000 
 2894              		.section	.bss.led2Color,"aw",%nobits
 2895              		.align	2
 2896              		.set	.LANCHOR3,. + 0
 2899              	led2Color:
 2900 0000 00000000 		.space	1212
 2900      00000000 
 2900      00000000 
 2900      00000000 
 2900      00000000 
 2901              		.section	.bss.osc,"aw",%nobits
 2902              		.align	2
 2903              		.set	.LANCHOR1,. + 0
 2906              	osc:
 2907 0000 00000000 		.space	48
 2907      00000000 
 2907      00000000 
 2907      00000000 
 2907      00000000 
 2908              		.section	.bss.rd,"aw",%nobits
 2909              		.align	2
 2910              		.set	.LANCHOR10,. + 0
 2913              	rd:
 2914 0000 00000000 		.space	2500
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2915              		.section	.bss.rng,"aw",%nobits
 2916              		.align	2
 2917              		.set	.LANCHOR8,. + 0
 2920              	rng:
 2921 0000 00000000 		.space	2500
 2921      00000000 
 2921      00000000 
 2921      00000000 
 2921      00000000 
 2922              		.section	.bss.uni,"aw",%nobits
 2923              		.align	2
 2924              		.set	.LANCHOR7,. + 0
 2927              	uni:
 2928 0000 00000000 		.space	8
 2928      00000000 
 2929              		.section	.data.osc_freq,"aw"
 2930              		.align	2
 2931              		.set	.LANCHOR9,. + 0
 2934              	osc_freq:
 2935 0000 0000DC43 		.word	1138491392
 2936              		.text
 2937              	.Letext0:
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 187


 2938              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 2939              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 2940              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 2941              		.file 33 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 2942              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 2943              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 2944              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 2945              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 2946              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 2947              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 2948              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 2949              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp_type_t
 2950              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 2951              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 2952              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 2953              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 2954              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 2955              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 2956              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 2957              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 2958              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 2959              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\initializer_list
 2960              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stringfwd.
 2961              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 2962              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ptr_traits
 2963              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 2964              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\move.h"
 2965              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 2966              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
 2967              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 2968              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type_traits
 2969              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 2970              		.file 62 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 2971              		.file 63 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 2972              		.file 64 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 2973              		.file 65 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 2974              		.file 66 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 2975              		.file 67 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 2976              		.file 68 "../../libDaisy//src/daisy_core.h"
 2977              		.file 69 "../../libDaisy//src/per/tim.h"
 2978              		.file 70 "../../libDaisy//src/per/sai.h"
 2979              		.file 71 "../../libDaisy//src/hid/MidiEvent.h"
 2980              		.file 72 "../../libDaisy//src/util/wav_format.h"
 2981              		.file 73 "../../libDaisy//src/dev/max11300.h"
 2982              		.file 74 "../../libDaisy//src/per/gpio.h"
 2983              		.file 75 "../../libDaisy//src/dev/sdram.h"
 2984              		.file 76 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 2985              		.file 77 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 2986              		.file 78 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 2987              		.file 79 "../../DaisySP//Source/Control/adenv.h"
 2988              		.file 80 "../../DaisySP//Source/Utility/dsp.h"
 2989              		.file 81 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 2990              		.file 82 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 2991              		.file 83 "../../libDaisy//src/dev/sr_595.h"
 2992              		.file 84 "<built-in>"
 2993              		.file 85 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 188


DEFINED SYMBOLS
                            *ABS*:00000000 ExampleProject.cpp
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:17     .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:49     .text._ZN5daisy8DaisyPodD2Ev:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:57     .text._ZN5daisy8DaisyPodD2Ev:00000000 _ZN5daisy8DaisyPodD2Ev
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:57     .text._ZN5daisy8DaisyPodD2Ev:00000000 _ZN5daisy8DaisyPodD1Ev
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:184    .text._ZN7daisysp10OscillatorD2Ev:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:192    .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD2Ev
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:192    .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD1Ev
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:209    .text.__tcf_0:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:216    .text.__tcf_0:00000000 __tcf_0
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:230    .text.__tcf_1:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:237    .text.__tcf_1:00000000 __tcf_1
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:248    .rodata._ZNSt13random_deviceC2Ev.str1.4:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:252    .text._ZNSt13random_deviceC2Ev:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:260    .text._ZNSt13random_deviceC2Ev:00000000 _ZNSt13random_deviceC2Ev
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:649    .text._ZNSt13random_deviceC2Ev:00000044 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:260    .text._ZNSt13random_deviceC2Ev:00000000 _ZNSt13random_deviceC1Ev
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:656    .text._Z7InitOscv:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:664    .text._Z7InitOscv:00000000 _Z7InitOscv
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:792    .text._Z7InitOscv:0000007c $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2871   .bss.hw:00000000 hw
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:803    .text._Z7InitLEDv:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:811    .text._Z7InitLEDv:00000000 _Z7InitLEDv
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:934    .text._Z7InitLEDv:000000b0 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:950    .text.startup.main:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:958    .text.startup.main:00000000 main
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1016   .text.startup.main:00000034 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2048   .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1022   .text._Z13UpdateEncoderv:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1030   .text._Z13UpdateEncoderv:00000000 _Z13UpdateEncoderv
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1118   .text._Z13UpdateEncoderv:00000034 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1124   .text._Z11UpdateKnobsv:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1132   .text._Z11UpdateKnobsv:00000000 _Z11UpdateKnobsv
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1159   .text._Z11UpdateKnobsv:00000014 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1165   .text._Z10UpdateLedsv:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1173   .text._Z10UpdateLedsv:00000000 _Z10UpdateLedsv
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1250   .text._Z10UpdateLedsv:00000054 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1259   .text._Z14UpdateControlsv:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1267   .text._Z14UpdateControlsv:00000000 _Z14UpdateControlsv
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1322   .text._Z14UpdateControlsv:0000002c $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1329   .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1337   .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv:00000000 _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1475   .text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1482   .text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0:00000000 _ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1697   .text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0:000000a4 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1707   .text._Z6SetOscv:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:1715   .text._Z6SetOscv:00000000 _Z6SetOscv
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2027   .text._Z6SetOscv:000000e8 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2040   .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2198   .text._Z13AudioCallbackPKPKfPPfj:00000070 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2206   .text.startup._GLOBAL__sub_I_rd:00000000 $t
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2213   .text.startup._GLOBAL__sub_I_rd:00000000 _GLOBAL__sub_I_rd
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2807   .text.startup._GLOBAL__sub_I_rd:000000b4 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2829   .init_array:00000000 $d
ARM GAS  C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s 			page 189


C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2934   .data.osc_freq:00000000 osc_freq
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2865   .bss.color2:00000000 color2
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2858   .bss.color:00000000 color
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2899   .bss.led2Color:00000000 led2Color
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2892   .bss.led1Color:00000000 led1Color
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2885   .bss.knob2:00000000 knob2
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2878   .bss.knob1:00000000 knob1
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2906   .bss.osc:00000000 osc
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2927   .bss.uni:00000000 uni
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2920   .bss.rng:00000000 rng
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2913   .bss.rd:00000000 rd
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2844   .rodata:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2854   .bss.color:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2861   .bss.color2:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2868   .bss.hw:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2874   .bss.knob1:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2881   .bss.knob2:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2888   .bss.led1Color:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2895   .bss.led2Color:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2902   .bss.osc:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2909   .bss.rd:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2916   .bss.rng:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2923   .bss.uni:00000000 $d
C:\Users\wuru8\AppData\Local\Temp\cczVuj1W.s:2930   .data.osc_freq:00000000 $d
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy8DaisyPodD5Ev
                           .group:00000000 _ZN7daisysp10OscillatorD5Ev
                           .group:00000000 _ZNSt13random_deviceC5Ev

UNDEFINED SYMBOLS
_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZdlPvj
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZN5daisy8DaisyPod15AudioSampleRateEv
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN5daisy5Color4InitEfff
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
_ZN5daisy9Parameter7ProcessEv
_ZN5daisy6RgbLed8SetColorENS_5ColorE
_ZN5daisy8DaisyPod10UpdateLedsEv
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
pow
_ZN7daisysp10Oscillator7ProcessEv
_ZNSt13random_device9_M_getvalEv
__aeabi_atexit
__dso_handle
